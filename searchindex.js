Search.setIndex({"alltitles": {"A Reinforcement Learning Agent": [[432, "a-reinforcement-learning-agent"]], "API documentation": [[423, null]], "Adding constraints": [[438, "adding-constraints"]], "Agent Architecture": [[433, "agent-architecture"]], "Backpropagation": [[438, "backpropagation"]], "Basic back-propagation and gradient descent with PyTorch": [[435, "basic-back-propagation-and-gradient-descent-with-pytorch"]], "Basics": [[434, null]], "Batch Optimization": [[437, null]], "Batching Non-Commutative Feedbacks": [[437, "batching-non-commutative-feedbacks"]], "BigBench-Hard": [[426, null]], "Broadcasting": [[434, "broadcasting"]], "Building Custom Optimizer": [[435, null]], "Coder-Verifier Framework using Trace": [[431, "coder-verifier-framework-using-trace"]], "Creating the initial policy": [[424, "creating-the-initial-policy"]], "Define An Agent Using Trace": [[432, "define-an-agent-using-trace"]], "Define Chat Function": [[425, "define-chat-function"]], "Define Game Components": [[425, "define-game-components"]], "Define a Policy class with multiple trainable functions": [[424, "define-a-policy-class-with-multiple-trainable-functions"]], "Define a Traced Class": [[426, "define-a-traced-class"]], "Define the Evaluation Function": [[426, "define-the-evaluation-function"]], "Define the Optimization Process": [[432, "define-the-optimization-process"]], "Define the end_game function": [[425, "define-the-end-game-function"]], "Define the optimizer": [[426, "define-the-optimizer"]], "Developer Installation": [[430, "developer-installation"]], "Difference to Libraries like AutoGen, AG2, OpenAI Swarm, Llama Stack": [[428, "difference-to-libraries-like-autogen-ag2-openai-swarm-llama-stack"]], "Difference to Libraries like TextGrad": [[428, "difference-to-libraries-like-textgrad"]], "Emergent Pro-Social Behaviors": [[433, "emergent-pro-social-behaviors"]], "Environment Setup": [[424, "environment-setup"], [427, "environment-setup"]], "Error Handling": [[436, null]], "Example of Full Optimization Loop": [[438, "example-of-full-optimization-loop"]], "Example of hyper-parameter optimization for ML models": [[438, "example-of-hyper-parameter-optimization-for-ml-models"]], "Example of optimizing functions": [[438, "example-of-optimizing-functions"]], "Example of optimizing strings": [[438, "example-of-optimizing-strings"]], "Execute the Optimization Process": [[427, "execute-the-optimization-process"]], "FAQ": [[428, null]], "Helper Function": [[426, "helper-function"]], "Helper Functions to rollout and evaluate the policy": [[424, "helper-functions-to-rollout-and-evaluate-the-policy"]], "Installation Command": [[430, null]], "Introduction": [[424, "introduction"], [425, "introduction"], [426, "introduction"], [427, "introduction"]], "Meta-World": [[427, null]], "Multi-Agent Synchronous Optimization": [[433, "multi-agent-synchronous-optimization"]], "Multi-Agent: Negotiation Arena": [[425, null]], "Node and MessageNode": [[434, "node-and-messagenode"]], "Nodes and Python Data Structure": [[434, "nodes-and-python-data-structure"]], "Operations on Nodes": [[434, "operations-on-nodes"]], "Optimization": [[438, null]], "Optimize Prompts": [[425, "optimize-prompts"]], "Optimize using Trace": [[427, "optimize-using-trace"]], "Optimize with Feedback": [[431, "optimize-with-feedback"]], "Putting it all together": [[424, "putting-it-all-together"], [426, "putting-it-all-together"]], "Recording of Agent Behavior": [[433, "recording-of-agent-behavior"]], "Results": [[433, "results"]], "Rollout Function": [[427, "rollout-function"]], "Save and Load the Optimized Function": [[431, "save-and-load-the-optimized-function"]], "Set up the objective in Trace": [[435, "set-up-the-objective-in-trace"]], "Setup": [[425, "setup"], [426, "setup"]], "Setup and Installation": [[424, "setup-and-installation"], [427, "setup-and-installation"]], "Single Agent: Battleship": [[424, null]], "Start with a Normal Python Program": [[431, "start-with-a-normal-python-program"]], "The Game of BattleShip": [[432, "the-game-of-battleship"]], "The Optimized Function is Runnable": [[431, "the-optimized-function-is-runnable"]], "Trace this Program": [[431, "trace-this-program"]], "Use Bundle to Writing Custom Node Operators": [[434, "use-bundle-to-writing-custom-node-operators"]], "Using bundle to wrap helper functions": [[425, "using-bundle-to-wrap-helper-functions"]], "Version 1 Trace Implementation based on Optimizer": [[435, "version-1-trace-implementation-based-on-optimizer"]], "Version 2 Trace Implementation based on Propagator + Optimizer": [[435, "version-2-trace-implementation-based-on-propagator-optimizer"]], "Visualize Graph": [[434, "visualize-graph"]], "Visualize Trace Graph of an Action": [[432, "visualize-trace-graph-of-an-action"]], "What Did the Agent Learn?": [[432, "what-did-the-agent-learn"]], "What\u2019s Next?": [[431, "what-s-next"], [433, "what-s-next"]], "Wrap the environment into a BattleshipBoard class": [[424, "wrap-the-environment-into-a-battleshipboard-class"]], "opto": [[0, null]], "opto.optimizers": [[1, null]], "opto.optimizers.buffers": [[2, null]], "opto.optimizers.buffers.FIFOBuffer": [[3, null]], "opto.optimizers.buffers.FIFOBuffer.add": [[4, null]], "opto.optimizers.opro": [[5, null]], "opto.optimizers.opro.OPRO": [[6, null]], "opto.optimizers.opro.OPRO.backward": [[7, null]], "opto.optimizers.opro.OPRO.call_llm": [[8, null]], "opto.optimizers.opro.OPRO.construct_prompt": [[9, null]], "opto.optimizers.opro.OPRO.construct_update_dict": [[10, null]], "opto.optimizers.opro.OPRO.default_objective": [[11, null]], "opto.optimizers.opro.OPRO.default_prompt_symbols": [[12, null]], "opto.optimizers.opro.OPRO.default_propagator": [[13, null]], "opto.optimizers.opro.OPRO.example_problem_template": [[14, null]], "opto.optimizers.opro.OPRO.example_prompt": [[15, null]], "opto.optimizers.opro.OPRO.extract_llm_suggestion": [[16, null]], "opto.optimizers.opro.OPRO.final_prompt": [[17, null]], "opto.optimizers.opro.OPRO.output_format_prompt": [[18, null]], "opto.optimizers.opro.OPRO.problem_instance": [[19, null]], "opto.optimizers.opro.OPRO.propagator": [[20, null]], "opto.optimizers.opro.OPRO.propose": [[21, null]], "opto.optimizers.opro.OPRO.replace_symbols": [[22, null]], "opto.optimizers.opro.OPRO.repr_node_constraint": [[23, null]], "opto.optimizers.opro.OPRO.repr_node_value": [[24, null]], "opto.optimizers.opro.OPRO.representation_prompt": [[25, null]], "opto.optimizers.opro.OPRO.step": [[26, null]], "opto.optimizers.opro.OPRO.summarize": [[27, null]], "opto.optimizers.opro.OPRO.trace_graph": [[28, null]], "opto.optimizers.opro.OPRO.update": [[29, null]], "opto.optimizers.opro.OPRO.user_prompt_template": [[30, null]], "opto.optimizers.opro.OPRO.zero_feedback": [[31, null]], "opto.optimizers.optimizer": [[32, null]], "opto.optimizers.optimizer.AbstractOptimizer": [[33, null]], "opto.optimizers.optimizer.AbstractOptimizer.propagator": [[34, null]], "opto.optimizers.optimizer.AbstractOptimizer.step": [[35, null]], "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback": [[36, null]], "opto.optimizers.optimizer.Optimizer": [[37, null]], "opto.optimizers.optimizer.Optimizer.backward": [[38, null]], "opto.optimizers.optimizer.Optimizer.default_propagator": [[39, null]], "opto.optimizers.optimizer.Optimizer.propagator": [[40, null]], "opto.optimizers.optimizer.Optimizer.propose": [[41, null]], "opto.optimizers.optimizer.Optimizer.step": [[42, null]], "opto.optimizers.optimizer.Optimizer.trace_graph": [[43, null]], "opto.optimizers.optimizer.Optimizer.update": [[44, null]], "opto.optimizers.optimizer.Optimizer.zero_feedback": [[45, null]], "opto.optimizers.optoprime": [[46, null]], "opto.optimizers.optoprime.FunctionFeedback": [[47, null]], "opto.optimizers.optoprime.FunctionFeedback.documentation": [[48, null]], "opto.optimizers.optoprime.FunctionFeedback.graph": [[49, null]], "opto.optimizers.optoprime.FunctionFeedback.others": [[50, null]], "opto.optimizers.optoprime.FunctionFeedback.output": [[51, null]], "opto.optimizers.optoprime.FunctionFeedback.roots": [[52, null]], "opto.optimizers.optoprime.FunctionFeedback.user_feedback": [[53, null]], "opto.optimizers.optoprime.OptoPrime": [[54, null]], "opto.optimizers.optoprime.OptoPrime.backward": [[55, null]], "opto.optimizers.optoprime.OptoPrime.call_llm": [[56, null]], "opto.optimizers.optoprime.OptoPrime.construct_prompt": [[57, null]], "opto.optimizers.optoprime.OptoPrime.construct_update_dict": [[58, null]], "opto.optimizers.optoprime.OptoPrime.default_objective": [[59, null]], "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols": [[60, null]], "opto.optimizers.optoprime.OptoPrime.default_propagator": [[61, null]], "opto.optimizers.optoprime.OptoPrime.example_problem_template": [[62, null]], "opto.optimizers.optoprime.OptoPrime.example_prompt": [[63, null]], "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion": [[64, null]], "opto.optimizers.optoprime.OptoPrime.final_prompt": [[65, null]], "opto.optimizers.optoprime.OptoPrime.output_format_prompt": [[66, null]], "opto.optimizers.optoprime.OptoPrime.problem_instance": [[67, null]], "opto.optimizers.optoprime.OptoPrime.propagator": [[68, null]], "opto.optimizers.optoprime.OptoPrime.propose": [[69, null]], "opto.optimizers.optoprime.OptoPrime.replace_symbols": [[70, null]], "opto.optimizers.optoprime.OptoPrime.repr_node_constraint": [[71, null]], "opto.optimizers.optoprime.OptoPrime.repr_node_value": [[72, null]], "opto.optimizers.optoprime.OptoPrime.representation_prompt": [[73, null]], "opto.optimizers.optoprime.OptoPrime.step": [[74, null]], "opto.optimizers.optoprime.OptoPrime.summarize": [[75, null]], "opto.optimizers.optoprime.OptoPrime.trace_graph": [[76, null]], "opto.optimizers.optoprime.OptoPrime.update": [[77, null]], "opto.optimizers.optoprime.OptoPrime.user_prompt_template": [[78, null]], "opto.optimizers.optoprime.OptoPrime.zero_feedback": [[79, null]], "opto.optimizers.optoprime.ProblemInstance": [[80, null]], "opto.optimizers.optoprime.ProblemInstance.code": [[81, null]], "opto.optimizers.optoprime.ProblemInstance.constraints": [[82, null]], "opto.optimizers.optoprime.ProblemInstance.documentation": [[83, null]], "opto.optimizers.optoprime.ProblemInstance.feedback": [[84, null]], "opto.optimizers.optoprime.ProblemInstance.inputs": [[85, null]], "opto.optimizers.optoprime.ProblemInstance.instruction": [[86, null]], "opto.optimizers.optoprime.ProblemInstance.others": [[87, null]], "opto.optimizers.optoprime.ProblemInstance.outputs": [[88, null]], "opto.optimizers.optoprime.ProblemInstance.problem_template": [[89, null]], "opto.optimizers.optoprime.ProblemInstance.variables": [[90, null]], "opto.optimizers.optoprime.get_fun_name": [[91, null]], "opto.optimizers.optoprime.node_to_function_feedback": [[92, null]], "opto.optimizers.optoprime.repr_function_call": [[93, null]], "opto.optimizers.textgrad": [[94, null]], "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE": [[95, null]], "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION": [[96, null]], "opto.optimizers.textgrad.GradientInfo": [[97, null]], "opto.optimizers.textgrad.GradientInfo.gradient": [[98, null]], "opto.optimizers.textgrad.GradientInfo.gradient_context": [[99, null]], "opto.optimizers.textgrad.TextGrad": [[100, null]], "opto.optimizers.textgrad.TextGrad.backward": [[101, null]], "opto.optimizers.textgrad.TextGrad.call_llm": [[102, null]], "opto.optimizers.textgrad.TextGrad.default_propagator": [[103, null]], "opto.optimizers.textgrad.TextGrad.propagator": [[104, null]], "opto.optimizers.textgrad.TextGrad.propose": [[105, null]], "opto.optimizers.textgrad.TextGrad.step": [[106, null]], "opto.optimizers.textgrad.TextGrad.trace_graph": [[107, null]], "opto.optimizers.textgrad.TextGrad.update": [[108, null]], "opto.optimizers.textgrad.TextGrad.zero_feedback": [[109, null]], "opto.optimizers.textgrad.construct_reduce_prompt": [[110, null]], "opto.optimizers.textgrad.construct_tgd_prompt": [[111, null]], "opto.optimizers.textgrad.get_short_value": [[112, null]], "opto.optimizers.textgrad.rm_node_attrs": [[113, null]], "opto.optimizers.utils": [[114, null]], "opto.optimizers.utils.print_color": [[115, null]], "opto.trace": [[116, null]], "opto.trace.broadcast": [[117, null]], "opto.trace.broadcast.apply_op": [[118, null]], "opto.trace.broadcast.recursive_conversion": [[119, null]], "opto.trace.bundle": [[120, null]], "opto.trace.containers": [[121, null]], "opto.trace.containers.Map": [[122, null]], "opto.trace.containers.Map.clear": [[123, null]], "opto.trace.containers.Map.copy": [[124, null]], "opto.trace.containers.Map.fromkeys": [[125, null]], "opto.trace.containers.Map.get": [[126, null]], "opto.trace.containers.Map.items": [[127, null]], "opto.trace.containers.Map.keys": [[128, null]], "opto.trace.containers.Map.parameters": [[129, null]], "opto.trace.containers.Map.parameters_dict": [[130, null]], "opto.trace.containers.Map.pop": [[131, null]], "opto.trace.containers.Map.popitem": [[132, null]], "opto.trace.containers.Map.setdefault": [[133, null]], "opto.trace.containers.Map.update": [[134, null]], "opto.trace.containers.Map.values": [[135, null]], "opto.trace.containers.NodeContainer": [[136, null]], "opto.trace.containers.ParameterContainer": [[137, null]], "opto.trace.containers.ParameterContainer.parameters": [[138, null]], "opto.trace.containers.ParameterContainer.parameters_dict": [[139, null]], "opto.trace.containers.Seq": [[140, null]], "opto.trace.containers.Seq.append": [[141, null]], "opto.trace.containers.Seq.clear": [[142, null]], "opto.trace.containers.Seq.copy": [[143, null]], "opto.trace.containers.Seq.count": [[144, null]], "opto.trace.containers.Seq.extend": [[145, null]], "opto.trace.containers.Seq.index": [[146, null]], "opto.trace.containers.Seq.insert": [[147, null]], "opto.trace.containers.Seq.parameters": [[148, null]], "opto.trace.containers.Seq.parameters_dict": [[149, null]], "opto.trace.containers.Seq.pop": [[150, null]], "opto.trace.containers.Seq.remove": [[151, null]], "opto.trace.containers.Seq.reverse": [[152, null]], "opto.trace.containers.Seq.sort": [[153, null]], "opto.trace.containers.trainable_method": [[154, null]], "opto.trace.errors": [[155, null]], "opto.trace.errors.ExecutionError": [[156, null]], "opto.trace.errors.TraceMissingInputsError": [[157, null]], "opto.trace.iterators": [[158, null]], "opto.trace.iterators.DictIterable": [[159, null]], "opto.trace.iterators.SeqIterable": [[160, null]], "opto.trace.iterators.iterate": [[161, null]], "opto.trace.modules": [[162, null]], "opto.trace.modules.Module": [[163, null]], "opto.trace.modules.Module.forward": [[164, null]], "opto.trace.modules.Module.load": [[165, null]], "opto.trace.modules.Module.parameters": [[166, null]], "opto.trace.modules.Module.parameters_dict": [[167, null]], "opto.trace.modules.Module.save": [[168, null]], "opto.trace.modules.model": [[169, null]], "opto.trace.nodes": [[170, null]], "opto.trace.nodes.AbstractNode": [[171, null]], "opto.trace.nodes.AbstractNode.children": [[172, null]], "opto.trace.nodes.AbstractNode.data": [[173, null]], "opto.trace.nodes.AbstractNode.gt": [[174, null]], "opto.trace.nodes.AbstractNode.id": [[175, null]], "opto.trace.nodes.AbstractNode.is_leaf": [[176, null]], "opto.trace.nodes.AbstractNode.is_root": [[177, null]], "opto.trace.nodes.AbstractNode.level": [[178, null]], "opto.trace.nodes.AbstractNode.lt": [[179, null]], "opto.trace.nodes.AbstractNode.name": [[180, null]], "opto.trace.nodes.AbstractNode.parents": [[181, null]], "opto.trace.nodes.AbstractNode.py_name": [[182, null]], "opto.trace.nodes.ExceptionNode": [[183, null]], "opto.trace.nodes.ExceptionNode.append": [[184, null]], "opto.trace.nodes.ExceptionNode.backward": [[185, null]], "opto.trace.nodes.ExceptionNode.call": [[186, null]], "opto.trace.nodes.ExceptionNode.capitalize": [[187, null]], "opto.trace.nodes.ExceptionNode.children": [[188, null]], "opto.trace.nodes.ExceptionNode.clone": [[189, null]], "opto.trace.nodes.ExceptionNode.create_feedback": [[190, null]], "opto.trace.nodes.ExceptionNode.data": [[191, null]], "opto.trace.nodes.ExceptionNode.description": [[192, null]], "opto.trace.nodes.ExceptionNode.detach": [[193, null]], "opto.trace.nodes.ExceptionNode.eq": [[194, null]], "opto.trace.nodes.ExceptionNode.expandable_dependencies": [[195, null]], "opto.trace.nodes.ExceptionNode.feedback": [[196, null]], "opto.trace.nodes.ExceptionNode.format": [[197, null]], "opto.trace.nodes.ExceptionNode.getattr": [[198, null]], "opto.trace.nodes.ExceptionNode.gt": [[199, null]], "opto.trace.nodes.ExceptionNode.hidden_dependencies": [[200, null]], "opto.trace.nodes.ExceptionNode.id": [[201, null]], "opto.trace.nodes.ExceptionNode.info": [[202, null]], "opto.trace.nodes.ExceptionNode.inputs": [[203, null]], "opto.trace.nodes.ExceptionNode.is_leaf": [[204, null]], "opto.trace.nodes.ExceptionNode.is_root": [[205, null]], "opto.trace.nodes.ExceptionNode.items": [[206, null]], "opto.trace.nodes.ExceptionNode.join": [[207, null]], "opto.trace.nodes.ExceptionNode.keys": [[208, null]], "opto.trace.nodes.ExceptionNode.len": [[209, null]], "opto.trace.nodes.ExceptionNode.level": [[210, null]], "opto.trace.nodes.ExceptionNode.lower": [[211, null]], "opto.trace.nodes.ExceptionNode.lt": [[212, null]], "opto.trace.nodes.ExceptionNode.name": [[213, null]], "opto.trace.nodes.ExceptionNode.neq": [[214, null]], "opto.trace.nodes.ExceptionNode.parameter_dependencies": [[215, null]], "opto.trace.nodes.ExceptionNode.parents": [[216, null]], "opto.trace.nodes.ExceptionNode.pop": [[217, null]], "opto.trace.nodes.ExceptionNode.py_name": [[218, null]], "opto.trace.nodes.ExceptionNode.replace": [[219, null]], "opto.trace.nodes.ExceptionNode.split": [[220, null]], "opto.trace.nodes.ExceptionNode.strip": [[221, null]], "opto.trace.nodes.ExceptionNode.swapcase": [[222, null]], "opto.trace.nodes.ExceptionNode.title": [[223, null]], "opto.trace.nodes.ExceptionNode.type": [[224, null]], "opto.trace.nodes.ExceptionNode.upper": [[225, null]], "opto.trace.nodes.ExceptionNode.values": [[226, null]], "opto.trace.nodes.ExceptionNode.zero_feedback": [[227, null]], "opto.trace.nodes.Graph": [[228, null]], "opto.trace.nodes.Graph.TRACE": [[229, null]], "opto.trace.nodes.Graph.clear": [[230, null]], "opto.trace.nodes.Graph.get": [[231, null]], "opto.trace.nodes.Graph.register": [[232, null]], "opto.trace.nodes.Graph.roots": [[233, null]], "opto.trace.nodes.MessageNode": [[234, null]], "opto.trace.nodes.MessageNode.append": [[235, null]], "opto.trace.nodes.MessageNode.backward": [[236, null]], "opto.trace.nodes.MessageNode.call": [[237, null]], "opto.trace.nodes.MessageNode.capitalize": [[238, null]], "opto.trace.nodes.MessageNode.children": [[239, null]], "opto.trace.nodes.MessageNode.clone": [[240, null]], "opto.trace.nodes.MessageNode.data": [[241, null]], "opto.trace.nodes.MessageNode.description": [[242, null]], "opto.trace.nodes.MessageNode.detach": [[243, null]], "opto.trace.nodes.MessageNode.eq": [[244, null]], "opto.trace.nodes.MessageNode.expandable_dependencies": [[245, null]], "opto.trace.nodes.MessageNode.feedback": [[246, null]], "opto.trace.nodes.MessageNode.format": [[247, null]], "opto.trace.nodes.MessageNode.getattr": [[248, null]], "opto.trace.nodes.MessageNode.gt": [[249, null]], "opto.trace.nodes.MessageNode.hidden_dependencies": [[250, null]], "opto.trace.nodes.MessageNode.id": [[251, null]], "opto.trace.nodes.MessageNode.info": [[252, null]], "opto.trace.nodes.MessageNode.inputs": [[253, null]], "opto.trace.nodes.MessageNode.is_leaf": [[254, null]], "opto.trace.nodes.MessageNode.is_root": [[255, null]], "opto.trace.nodes.MessageNode.items": [[256, null]], "opto.trace.nodes.MessageNode.join": [[257, null]], "opto.trace.nodes.MessageNode.keys": [[258, null]], "opto.trace.nodes.MessageNode.len": [[259, null]], "opto.trace.nodes.MessageNode.level": [[260, null]], "opto.trace.nodes.MessageNode.lower": [[261, null]], "opto.trace.nodes.MessageNode.lt": [[262, null]], "opto.trace.nodes.MessageNode.name": [[263, null]], "opto.trace.nodes.MessageNode.neq": [[264, null]], "opto.trace.nodes.MessageNode.parameter_dependencies": [[265, null]], "opto.trace.nodes.MessageNode.parents": [[266, null]], "opto.trace.nodes.MessageNode.pop": [[267, null]], "opto.trace.nodes.MessageNode.py_name": [[268, null]], "opto.trace.nodes.MessageNode.replace": [[269, null]], "opto.trace.nodes.MessageNode.split": [[270, null]], "opto.trace.nodes.MessageNode.strip": [[271, null]], "opto.trace.nodes.MessageNode.swapcase": [[272, null]], "opto.trace.nodes.MessageNode.title": [[273, null]], "opto.trace.nodes.MessageNode.type": [[274, null]], "opto.trace.nodes.MessageNode.upper": [[275, null]], "opto.trace.nodes.MessageNode.values": [[276, null]], "opto.trace.nodes.MessageNode.zero_feedback": [[277, null]], "opto.trace.nodes.Node": [[278, null]], "opto.trace.nodes.Node.append": [[279, null]], "opto.trace.nodes.Node.backward": [[280, null]], "opto.trace.nodes.Node.call": [[281, null]], "opto.trace.nodes.Node.capitalize": [[282, null]], "opto.trace.nodes.Node.children": [[283, null]], "opto.trace.nodes.Node.clone": [[284, null]], "opto.trace.nodes.Node.data": [[285, null]], "opto.trace.nodes.Node.description": [[286, null]], "opto.trace.nodes.Node.detach": [[287, null]], "opto.trace.nodes.Node.eq": [[288, null]], "opto.trace.nodes.Node.expandable_dependencies": [[289, null]], "opto.trace.nodes.Node.feedback": [[290, null]], "opto.trace.nodes.Node.format": [[291, null]], "opto.trace.nodes.Node.getattr": [[292, null]], "opto.trace.nodes.Node.gt": [[293, null]], "opto.trace.nodes.Node.id": [[294, null]], "opto.trace.nodes.Node.info": [[295, null]], "opto.trace.nodes.Node.is_leaf": [[296, null]], "opto.trace.nodes.Node.is_root": [[297, null]], "opto.trace.nodes.Node.items": [[298, null]], "opto.trace.nodes.Node.join": [[299, null]], "opto.trace.nodes.Node.keys": [[300, null]], "opto.trace.nodes.Node.len": [[301, null]], "opto.trace.nodes.Node.level": [[302, null]], "opto.trace.nodes.Node.lower": [[303, null]], "opto.trace.nodes.Node.lt": [[304, null]], "opto.trace.nodes.Node.name": [[305, null]], "opto.trace.nodes.Node.neq": [[306, null]], "opto.trace.nodes.Node.parameter_dependencies": [[307, null]], "opto.trace.nodes.Node.parents": [[308, null]], "opto.trace.nodes.Node.pop": [[309, null]], "opto.trace.nodes.Node.py_name": [[310, null]], "opto.trace.nodes.Node.replace": [[311, null]], "opto.trace.nodes.Node.split": [[312, null]], "opto.trace.nodes.Node.strip": [[313, null]], "opto.trace.nodes.Node.swapcase": [[314, null]], "opto.trace.nodes.Node.title": [[315, null]], "opto.trace.nodes.Node.type": [[316, null]], "opto.trace.nodes.Node.upper": [[317, null]], "opto.trace.nodes.Node.values": [[318, null]], "opto.trace.nodes.Node.zero_feedback": [[319, null]], "opto.trace.nodes.NodeVizStyleGuide": [[320, null]], "opto.trace.nodes.NodeVizStyleGuide.get_attrs": [[321, null]], "opto.trace.nodes.NodeVizStyleGuide.get_color": [[322, null]], "opto.trace.nodes.NodeVizStyleGuide.get_label": [[323, null]], "opto.trace.nodes.NodeVizStyleGuide.get_node_shape": [[324, null]], "opto.trace.nodes.NodeVizStyleGuide.get_style": [[325, null]], "opto.trace.nodes.NodeVizStyleGuideColorful": [[326, null]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs": [[327, null]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color": [[328, null]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_color": [[329, null]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_label": [[330, null]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape": [[331, null]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_style": [[332, null]], "opto.trace.nodes.ParameterNode": [[333, null]], "opto.trace.nodes.ParameterNode.append": [[334, null]], "opto.trace.nodes.ParameterNode.backward": [[335, null]], "opto.trace.nodes.ParameterNode.call": [[336, null]], "opto.trace.nodes.ParameterNode.capitalize": [[337, null]], "opto.trace.nodes.ParameterNode.children": [[338, null]], "opto.trace.nodes.ParameterNode.clone": [[339, null]], "opto.trace.nodes.ParameterNode.data": [[340, null]], "opto.trace.nodes.ParameterNode.description": [[341, null]], "opto.trace.nodes.ParameterNode.detach": [[342, null]], "opto.trace.nodes.ParameterNode.eq": [[343, null]], "opto.trace.nodes.ParameterNode.expandable_dependencies": [[344, null]], "opto.trace.nodes.ParameterNode.feedback": [[345, null]], "opto.trace.nodes.ParameterNode.format": [[346, null]], "opto.trace.nodes.ParameterNode.getattr": [[347, null]], "opto.trace.nodes.ParameterNode.gt": [[348, null]], "opto.trace.nodes.ParameterNode.id": [[349, null]], "opto.trace.nodes.ParameterNode.info": [[350, null]], "opto.trace.nodes.ParameterNode.is_leaf": [[351, null]], "opto.trace.nodes.ParameterNode.is_root": [[352, null]], "opto.trace.nodes.ParameterNode.items": [[353, null]], "opto.trace.nodes.ParameterNode.join": [[354, null]], "opto.trace.nodes.ParameterNode.keys": [[355, null]], "opto.trace.nodes.ParameterNode.len": [[356, null]], "opto.trace.nodes.ParameterNode.level": [[357, null]], "opto.trace.nodes.ParameterNode.lower": [[358, null]], "opto.trace.nodes.ParameterNode.lt": [[359, null]], "opto.trace.nodes.ParameterNode.name": [[360, null]], "opto.trace.nodes.ParameterNode.neq": [[361, null]], "opto.trace.nodes.ParameterNode.parameter_dependencies": [[362, null]], "opto.trace.nodes.ParameterNode.parents": [[363, null]], "opto.trace.nodes.ParameterNode.pop": [[364, null]], "opto.trace.nodes.ParameterNode.py_name": [[365, null]], "opto.trace.nodes.ParameterNode.replace": [[366, null]], "opto.trace.nodes.ParameterNode.split": [[367, null]], "opto.trace.nodes.ParameterNode.strip": [[368, null]], "opto.trace.nodes.ParameterNode.swapcase": [[369, null]], "opto.trace.nodes.ParameterNode.title": [[370, null]], "opto.trace.nodes.ParameterNode.type": [[371, null]], "opto.trace.nodes.ParameterNode.upper": [[372, null]], "opto.trace.nodes.ParameterNode.values": [[373, null]], "opto.trace.nodes.ParameterNode.zero_feedback": [[374, null]], "opto.trace.nodes.get_op_name": [[375, null]], "opto.trace.nodes.node": [[376, null]], "opto.trace.operators": [[377, null]], "opto.trace.operators.identity": [[378, null]], "opto.trace.propagators": [[379, null]], "opto.trace.propagators.graph_propagator": [[380, null]], "opto.trace.propagators.graph_propagator.GraphPropagator": [[381, null]], "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate": [[382, null]], "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback": [[383, null]], "opto.trace.propagators.graph_propagator.GraphPropagator.propagate": [[384, null]], "opto.trace.propagators.graph_propagator.GraphPropagator.register": [[385, null]], "opto.trace.propagators.graph_propagator.TraceGraph": [[386, null]], "opto.trace.propagators.graph_propagator.TraceGraph.empty": [[387, null]], "opto.trace.propagators.graph_propagator.TraceGraph.expand": [[388, null]], "opto.trace.propagators.graph_propagator.TraceGraph.graph": [[389, null]], "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback": [[390, null]], "opto.trace.propagators.graph_propagator.TraceGraph.visualize": [[391, null]], "opto.trace.propagators.propagators": [[392, null]], "opto.trace.propagators.propagators.AbstractFeedback": [[393, null]], "opto.trace.propagators.propagators.AbstractPropagator": [[394, null]], "opto.trace.propagators.propagators.AbstractPropagator.propagate": [[395, null]], "opto.trace.propagators.propagators.Propagator": [[396, null]], "opto.trace.propagators.propagators.Propagator.init_feedback": [[397, null]], "opto.trace.propagators.propagators.Propagator.propagate": [[398, null]], "opto.trace.propagators.propagators.Propagator.register": [[399, null]], "opto.trace.propagators.propagators.SumPropagator": [[400, null]], "opto.trace.propagators.propagators.SumPropagator.init_feedback": [[401, null]], "opto.trace.propagators.propagators.SumPropagator.propagate": [[402, null]], "opto.trace.propagators.propagators.SumPropagator.register": [[403, null]], "opto.trace.stop_tracing": [[404, null]], "opto.trace.utils": [[405, null]], "opto.trace.utils.contain": [[406, null]], "opto.trace.utils.escape_json_nested_quotes": [[407, null]], "opto.trace.utils.for_all_methods": [[408, null]], "opto.trace.utils.parse_eqs_to_dict": [[409, null]], "opto.trace.utils.remove_non_ascii": [[410, null]], "opto.trace.utils.render_opt_step": [[411, null]], "opto.trace.utils.sum_feedback": [[412, null]], "opto.trace.utils.test_json_quote_escaper": [[413, null]], "opto.utils": [[414, null]], "opto.utils.llm": [[415, null]], "opto.utils.llm.AbstractModel": [[416, null]], "opto.utils.llm.AbstractModel.model": [[417, null]], "opto.utils.llm.AutoGenLLM": [[418, null]], "opto.utils.llm.AutoGenLLM.create": [[419, null]], "opto.utils.llm.AutoGenLLM.model": [[420, null]], "opto.utils.llm.auto_construct_oai_config_list_from_env": [[421, null]], "opto.version": [[422, null]], "\u26a1\ufe0f First: 5-Minute Basics": [[431, null]], "\ud83c\udf10  Installation": [[430, null]], "\ud83c\udfaf Trace": [[429, null]], "\ud83c\udfe0 VirtualHome": [[433, "virtualhome"]], "\ud83d\ude80 Next: Adaptive Agent": [[432, null]], "\ud83e\udd2f Finally: Emergent Behaviors": [[433, null]]}, "docnames": ["_generated/opto", "_generated/opto.optimizers", "_generated/opto.optimizers.buffers", "_generated/opto.optimizers.buffers.FIFOBuffer", "_generated/opto.optimizers.buffers.FIFOBuffer.add", "_generated/opto.optimizers.opro", "_generated/opto.optimizers.opro.OPRO", "_generated/opto.optimizers.opro.OPRO.backward", "_generated/opto.optimizers.opro.OPRO.call_llm", "_generated/opto.optimizers.opro.OPRO.construct_prompt", "_generated/opto.optimizers.opro.OPRO.construct_update_dict", "_generated/opto.optimizers.opro.OPRO.default_objective", "_generated/opto.optimizers.opro.OPRO.default_prompt_symbols", "_generated/opto.optimizers.opro.OPRO.default_propagator", "_generated/opto.optimizers.opro.OPRO.example_problem_template", "_generated/opto.optimizers.opro.OPRO.example_prompt", "_generated/opto.optimizers.opro.OPRO.extract_llm_suggestion", "_generated/opto.optimizers.opro.OPRO.final_prompt", "_generated/opto.optimizers.opro.OPRO.output_format_prompt", "_generated/opto.optimizers.opro.OPRO.problem_instance", "_generated/opto.optimizers.opro.OPRO.propagator", "_generated/opto.optimizers.opro.OPRO.propose", "_generated/opto.optimizers.opro.OPRO.replace_symbols", "_generated/opto.optimizers.opro.OPRO.repr_node_constraint", "_generated/opto.optimizers.opro.OPRO.repr_node_value", "_generated/opto.optimizers.opro.OPRO.representation_prompt", "_generated/opto.optimizers.opro.OPRO.step", "_generated/opto.optimizers.opro.OPRO.summarize", "_generated/opto.optimizers.opro.OPRO.trace_graph", "_generated/opto.optimizers.opro.OPRO.update", "_generated/opto.optimizers.opro.OPRO.user_prompt_template", "_generated/opto.optimizers.opro.OPRO.zero_feedback", "_generated/opto.optimizers.optimizer", "_generated/opto.optimizers.optimizer.AbstractOptimizer", "_generated/opto.optimizers.optimizer.AbstractOptimizer.propagator", "_generated/opto.optimizers.optimizer.AbstractOptimizer.step", "_generated/opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", "_generated/opto.optimizers.optimizer.Optimizer", "_generated/opto.optimizers.optimizer.Optimizer.backward", "_generated/opto.optimizers.optimizer.Optimizer.default_propagator", "_generated/opto.optimizers.optimizer.Optimizer.propagator", "_generated/opto.optimizers.optimizer.Optimizer.propose", "_generated/opto.optimizers.optimizer.Optimizer.step", "_generated/opto.optimizers.optimizer.Optimizer.trace_graph", "_generated/opto.optimizers.optimizer.Optimizer.update", "_generated/opto.optimizers.optimizer.Optimizer.zero_feedback", "_generated/opto.optimizers.optoprime", "_generated/opto.optimizers.optoprime.FunctionFeedback", "_generated/opto.optimizers.optoprime.FunctionFeedback.documentation", "_generated/opto.optimizers.optoprime.FunctionFeedback.graph", "_generated/opto.optimizers.optoprime.FunctionFeedback.others", "_generated/opto.optimizers.optoprime.FunctionFeedback.output", "_generated/opto.optimizers.optoprime.FunctionFeedback.roots", "_generated/opto.optimizers.optoprime.FunctionFeedback.user_feedback", "_generated/opto.optimizers.optoprime.OptoPrime", "_generated/opto.optimizers.optoprime.OptoPrime.backward", "_generated/opto.optimizers.optoprime.OptoPrime.call_llm", "_generated/opto.optimizers.optoprime.OptoPrime.construct_prompt", "_generated/opto.optimizers.optoprime.OptoPrime.construct_update_dict", "_generated/opto.optimizers.optoprime.OptoPrime.default_objective", "_generated/opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", "_generated/opto.optimizers.optoprime.OptoPrime.default_propagator", "_generated/opto.optimizers.optoprime.OptoPrime.example_problem_template", "_generated/opto.optimizers.optoprime.OptoPrime.example_prompt", "_generated/opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", "_generated/opto.optimizers.optoprime.OptoPrime.final_prompt", "_generated/opto.optimizers.optoprime.OptoPrime.output_format_prompt", "_generated/opto.optimizers.optoprime.OptoPrime.problem_instance", "_generated/opto.optimizers.optoprime.OptoPrime.propagator", "_generated/opto.optimizers.optoprime.OptoPrime.propose", "_generated/opto.optimizers.optoprime.OptoPrime.replace_symbols", "_generated/opto.optimizers.optoprime.OptoPrime.repr_node_constraint", "_generated/opto.optimizers.optoprime.OptoPrime.repr_node_value", "_generated/opto.optimizers.optoprime.OptoPrime.representation_prompt", "_generated/opto.optimizers.optoprime.OptoPrime.step", "_generated/opto.optimizers.optoprime.OptoPrime.summarize", "_generated/opto.optimizers.optoprime.OptoPrime.trace_graph", "_generated/opto.optimizers.optoprime.OptoPrime.update", "_generated/opto.optimizers.optoprime.OptoPrime.user_prompt_template", "_generated/opto.optimizers.optoprime.OptoPrime.zero_feedback", "_generated/opto.optimizers.optoprime.ProblemInstance", "_generated/opto.optimizers.optoprime.ProblemInstance.code", "_generated/opto.optimizers.optoprime.ProblemInstance.constraints", "_generated/opto.optimizers.optoprime.ProblemInstance.documentation", "_generated/opto.optimizers.optoprime.ProblemInstance.feedback", "_generated/opto.optimizers.optoprime.ProblemInstance.inputs", "_generated/opto.optimizers.optoprime.ProblemInstance.instruction", "_generated/opto.optimizers.optoprime.ProblemInstance.others", "_generated/opto.optimizers.optoprime.ProblemInstance.outputs", "_generated/opto.optimizers.optoprime.ProblemInstance.problem_template", "_generated/opto.optimizers.optoprime.ProblemInstance.variables", "_generated/opto.optimizers.optoprime.get_fun_name", "_generated/opto.optimizers.optoprime.node_to_function_feedback", "_generated/opto.optimizers.optoprime.repr_function_call", "_generated/opto.optimizers.textgrad", "_generated/opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", "_generated/opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", "_generated/opto.optimizers.textgrad.GradientInfo", "_generated/opto.optimizers.textgrad.GradientInfo.gradient", "_generated/opto.optimizers.textgrad.GradientInfo.gradient_context", "_generated/opto.optimizers.textgrad.TextGrad", "_generated/opto.optimizers.textgrad.TextGrad.backward", "_generated/opto.optimizers.textgrad.TextGrad.call_llm", "_generated/opto.optimizers.textgrad.TextGrad.default_propagator", "_generated/opto.optimizers.textgrad.TextGrad.propagator", "_generated/opto.optimizers.textgrad.TextGrad.propose", "_generated/opto.optimizers.textgrad.TextGrad.step", "_generated/opto.optimizers.textgrad.TextGrad.trace_graph", "_generated/opto.optimizers.textgrad.TextGrad.update", "_generated/opto.optimizers.textgrad.TextGrad.zero_feedback", "_generated/opto.optimizers.textgrad.construct_reduce_prompt", "_generated/opto.optimizers.textgrad.construct_tgd_prompt", "_generated/opto.optimizers.textgrad.get_short_value", "_generated/opto.optimizers.textgrad.rm_node_attrs", "_generated/opto.optimizers.utils", "_generated/opto.optimizers.utils.print_color", "_generated/opto.trace", "_generated/opto.trace.broadcast", "_generated/opto.trace.broadcast.apply_op", "_generated/opto.trace.broadcast.recursive_conversion", "_generated/opto.trace.bundle", "_generated/opto.trace.containers", "_generated/opto.trace.containers.Map", "_generated/opto.trace.containers.Map.clear", "_generated/opto.trace.containers.Map.copy", "_generated/opto.trace.containers.Map.fromkeys", "_generated/opto.trace.containers.Map.get", "_generated/opto.trace.containers.Map.items", "_generated/opto.trace.containers.Map.keys", "_generated/opto.trace.containers.Map.parameters", "_generated/opto.trace.containers.Map.parameters_dict", "_generated/opto.trace.containers.Map.pop", "_generated/opto.trace.containers.Map.popitem", "_generated/opto.trace.containers.Map.setdefault", "_generated/opto.trace.containers.Map.update", "_generated/opto.trace.containers.Map.values", "_generated/opto.trace.containers.NodeContainer", "_generated/opto.trace.containers.ParameterContainer", "_generated/opto.trace.containers.ParameterContainer.parameters", "_generated/opto.trace.containers.ParameterContainer.parameters_dict", "_generated/opto.trace.containers.Seq", "_generated/opto.trace.containers.Seq.append", "_generated/opto.trace.containers.Seq.clear", "_generated/opto.trace.containers.Seq.copy", "_generated/opto.trace.containers.Seq.count", "_generated/opto.trace.containers.Seq.extend", "_generated/opto.trace.containers.Seq.index", "_generated/opto.trace.containers.Seq.insert", "_generated/opto.trace.containers.Seq.parameters", "_generated/opto.trace.containers.Seq.parameters_dict", "_generated/opto.trace.containers.Seq.pop", "_generated/opto.trace.containers.Seq.remove", "_generated/opto.trace.containers.Seq.reverse", "_generated/opto.trace.containers.Seq.sort", "_generated/opto.trace.containers.trainable_method", "_generated/opto.trace.errors", "_generated/opto.trace.errors.ExecutionError", "_generated/opto.trace.errors.TraceMissingInputsError", "_generated/opto.trace.iterators", "_generated/opto.trace.iterators.DictIterable", "_generated/opto.trace.iterators.SeqIterable", "_generated/opto.trace.iterators.iterate", "_generated/opto.trace.modules", "_generated/opto.trace.modules.Module", "_generated/opto.trace.modules.Module.forward", "_generated/opto.trace.modules.Module.load", "_generated/opto.trace.modules.Module.parameters", "_generated/opto.trace.modules.Module.parameters_dict", "_generated/opto.trace.modules.Module.save", "_generated/opto.trace.modules.model", "_generated/opto.trace.nodes", "_generated/opto.trace.nodes.AbstractNode", "_generated/opto.trace.nodes.AbstractNode.children", "_generated/opto.trace.nodes.AbstractNode.data", "_generated/opto.trace.nodes.AbstractNode.gt", "_generated/opto.trace.nodes.AbstractNode.id", "_generated/opto.trace.nodes.AbstractNode.is_leaf", "_generated/opto.trace.nodes.AbstractNode.is_root", "_generated/opto.trace.nodes.AbstractNode.level", "_generated/opto.trace.nodes.AbstractNode.lt", "_generated/opto.trace.nodes.AbstractNode.name", "_generated/opto.trace.nodes.AbstractNode.parents", "_generated/opto.trace.nodes.AbstractNode.py_name", "_generated/opto.trace.nodes.ExceptionNode", "_generated/opto.trace.nodes.ExceptionNode.append", "_generated/opto.trace.nodes.ExceptionNode.backward", "_generated/opto.trace.nodes.ExceptionNode.call", "_generated/opto.trace.nodes.ExceptionNode.capitalize", "_generated/opto.trace.nodes.ExceptionNode.children", "_generated/opto.trace.nodes.ExceptionNode.clone", "_generated/opto.trace.nodes.ExceptionNode.create_feedback", "_generated/opto.trace.nodes.ExceptionNode.data", "_generated/opto.trace.nodes.ExceptionNode.description", "_generated/opto.trace.nodes.ExceptionNode.detach", "_generated/opto.trace.nodes.ExceptionNode.eq", "_generated/opto.trace.nodes.ExceptionNode.expandable_dependencies", "_generated/opto.trace.nodes.ExceptionNode.feedback", "_generated/opto.trace.nodes.ExceptionNode.format", "_generated/opto.trace.nodes.ExceptionNode.getattr", "_generated/opto.trace.nodes.ExceptionNode.gt", "_generated/opto.trace.nodes.ExceptionNode.hidden_dependencies", "_generated/opto.trace.nodes.ExceptionNode.id", "_generated/opto.trace.nodes.ExceptionNode.info", "_generated/opto.trace.nodes.ExceptionNode.inputs", "_generated/opto.trace.nodes.ExceptionNode.is_leaf", "_generated/opto.trace.nodes.ExceptionNode.is_root", "_generated/opto.trace.nodes.ExceptionNode.items", "_generated/opto.trace.nodes.ExceptionNode.join", "_generated/opto.trace.nodes.ExceptionNode.keys", "_generated/opto.trace.nodes.ExceptionNode.len", "_generated/opto.trace.nodes.ExceptionNode.level", "_generated/opto.trace.nodes.ExceptionNode.lower", "_generated/opto.trace.nodes.ExceptionNode.lt", "_generated/opto.trace.nodes.ExceptionNode.name", "_generated/opto.trace.nodes.ExceptionNode.neq", "_generated/opto.trace.nodes.ExceptionNode.parameter_dependencies", "_generated/opto.trace.nodes.ExceptionNode.parents", "_generated/opto.trace.nodes.ExceptionNode.pop", "_generated/opto.trace.nodes.ExceptionNode.py_name", "_generated/opto.trace.nodes.ExceptionNode.replace", "_generated/opto.trace.nodes.ExceptionNode.split", "_generated/opto.trace.nodes.ExceptionNode.strip", "_generated/opto.trace.nodes.ExceptionNode.swapcase", "_generated/opto.trace.nodes.ExceptionNode.title", "_generated/opto.trace.nodes.ExceptionNode.type", "_generated/opto.trace.nodes.ExceptionNode.upper", "_generated/opto.trace.nodes.ExceptionNode.values", "_generated/opto.trace.nodes.ExceptionNode.zero_feedback", "_generated/opto.trace.nodes.Graph", "_generated/opto.trace.nodes.Graph.TRACE", "_generated/opto.trace.nodes.Graph.clear", "_generated/opto.trace.nodes.Graph.get", "_generated/opto.trace.nodes.Graph.register", "_generated/opto.trace.nodes.Graph.roots", "_generated/opto.trace.nodes.MessageNode", "_generated/opto.trace.nodes.MessageNode.append", "_generated/opto.trace.nodes.MessageNode.backward", "_generated/opto.trace.nodes.MessageNode.call", "_generated/opto.trace.nodes.MessageNode.capitalize", "_generated/opto.trace.nodes.MessageNode.children", "_generated/opto.trace.nodes.MessageNode.clone", "_generated/opto.trace.nodes.MessageNode.data", "_generated/opto.trace.nodes.MessageNode.description", "_generated/opto.trace.nodes.MessageNode.detach", "_generated/opto.trace.nodes.MessageNode.eq", "_generated/opto.trace.nodes.MessageNode.expandable_dependencies", "_generated/opto.trace.nodes.MessageNode.feedback", "_generated/opto.trace.nodes.MessageNode.format", "_generated/opto.trace.nodes.MessageNode.getattr", "_generated/opto.trace.nodes.MessageNode.gt", "_generated/opto.trace.nodes.MessageNode.hidden_dependencies", "_generated/opto.trace.nodes.MessageNode.id", "_generated/opto.trace.nodes.MessageNode.info", "_generated/opto.trace.nodes.MessageNode.inputs", "_generated/opto.trace.nodes.MessageNode.is_leaf", "_generated/opto.trace.nodes.MessageNode.is_root", "_generated/opto.trace.nodes.MessageNode.items", "_generated/opto.trace.nodes.MessageNode.join", "_generated/opto.trace.nodes.MessageNode.keys", "_generated/opto.trace.nodes.MessageNode.len", "_generated/opto.trace.nodes.MessageNode.level", "_generated/opto.trace.nodes.MessageNode.lower", "_generated/opto.trace.nodes.MessageNode.lt", "_generated/opto.trace.nodes.MessageNode.name", "_generated/opto.trace.nodes.MessageNode.neq", "_generated/opto.trace.nodes.MessageNode.parameter_dependencies", "_generated/opto.trace.nodes.MessageNode.parents", "_generated/opto.trace.nodes.MessageNode.pop", "_generated/opto.trace.nodes.MessageNode.py_name", "_generated/opto.trace.nodes.MessageNode.replace", "_generated/opto.trace.nodes.MessageNode.split", "_generated/opto.trace.nodes.MessageNode.strip", "_generated/opto.trace.nodes.MessageNode.swapcase", "_generated/opto.trace.nodes.MessageNode.title", "_generated/opto.trace.nodes.MessageNode.type", "_generated/opto.trace.nodes.MessageNode.upper", "_generated/opto.trace.nodes.MessageNode.values", "_generated/opto.trace.nodes.MessageNode.zero_feedback", "_generated/opto.trace.nodes.Node", "_generated/opto.trace.nodes.Node.append", "_generated/opto.trace.nodes.Node.backward", "_generated/opto.trace.nodes.Node.call", "_generated/opto.trace.nodes.Node.capitalize", "_generated/opto.trace.nodes.Node.children", "_generated/opto.trace.nodes.Node.clone", "_generated/opto.trace.nodes.Node.data", "_generated/opto.trace.nodes.Node.description", "_generated/opto.trace.nodes.Node.detach", "_generated/opto.trace.nodes.Node.eq", "_generated/opto.trace.nodes.Node.expandable_dependencies", "_generated/opto.trace.nodes.Node.feedback", "_generated/opto.trace.nodes.Node.format", "_generated/opto.trace.nodes.Node.getattr", "_generated/opto.trace.nodes.Node.gt", "_generated/opto.trace.nodes.Node.id", "_generated/opto.trace.nodes.Node.info", "_generated/opto.trace.nodes.Node.is_leaf", "_generated/opto.trace.nodes.Node.is_root", "_generated/opto.trace.nodes.Node.items", "_generated/opto.trace.nodes.Node.join", "_generated/opto.trace.nodes.Node.keys", "_generated/opto.trace.nodes.Node.len", "_generated/opto.trace.nodes.Node.level", "_generated/opto.trace.nodes.Node.lower", "_generated/opto.trace.nodes.Node.lt", "_generated/opto.trace.nodes.Node.name", "_generated/opto.trace.nodes.Node.neq", "_generated/opto.trace.nodes.Node.parameter_dependencies", "_generated/opto.trace.nodes.Node.parents", "_generated/opto.trace.nodes.Node.pop", "_generated/opto.trace.nodes.Node.py_name", "_generated/opto.trace.nodes.Node.replace", "_generated/opto.trace.nodes.Node.split", "_generated/opto.trace.nodes.Node.strip", "_generated/opto.trace.nodes.Node.swapcase", "_generated/opto.trace.nodes.Node.title", "_generated/opto.trace.nodes.Node.type", "_generated/opto.trace.nodes.Node.upper", "_generated/opto.trace.nodes.Node.values", "_generated/opto.trace.nodes.Node.zero_feedback", "_generated/opto.trace.nodes.NodeVizStyleGuide", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_attrs", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_color", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_label", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_node_shape", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_style", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_color", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_label", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_style", "_generated/opto.trace.nodes.ParameterNode", "_generated/opto.trace.nodes.ParameterNode.append", "_generated/opto.trace.nodes.ParameterNode.backward", "_generated/opto.trace.nodes.ParameterNode.call", "_generated/opto.trace.nodes.ParameterNode.capitalize", "_generated/opto.trace.nodes.ParameterNode.children", "_generated/opto.trace.nodes.ParameterNode.clone", "_generated/opto.trace.nodes.ParameterNode.data", "_generated/opto.trace.nodes.ParameterNode.description", "_generated/opto.trace.nodes.ParameterNode.detach", "_generated/opto.trace.nodes.ParameterNode.eq", "_generated/opto.trace.nodes.ParameterNode.expandable_dependencies", "_generated/opto.trace.nodes.ParameterNode.feedback", "_generated/opto.trace.nodes.ParameterNode.format", "_generated/opto.trace.nodes.ParameterNode.getattr", "_generated/opto.trace.nodes.ParameterNode.gt", "_generated/opto.trace.nodes.ParameterNode.id", "_generated/opto.trace.nodes.ParameterNode.info", "_generated/opto.trace.nodes.ParameterNode.is_leaf", "_generated/opto.trace.nodes.ParameterNode.is_root", "_generated/opto.trace.nodes.ParameterNode.items", "_generated/opto.trace.nodes.ParameterNode.join", "_generated/opto.trace.nodes.ParameterNode.keys", "_generated/opto.trace.nodes.ParameterNode.len", "_generated/opto.trace.nodes.ParameterNode.level", "_generated/opto.trace.nodes.ParameterNode.lower", "_generated/opto.trace.nodes.ParameterNode.lt", "_generated/opto.trace.nodes.ParameterNode.name", "_generated/opto.trace.nodes.ParameterNode.neq", "_generated/opto.trace.nodes.ParameterNode.parameter_dependencies", "_generated/opto.trace.nodes.ParameterNode.parents", "_generated/opto.trace.nodes.ParameterNode.pop", "_generated/opto.trace.nodes.ParameterNode.py_name", "_generated/opto.trace.nodes.ParameterNode.replace", "_generated/opto.trace.nodes.ParameterNode.split", "_generated/opto.trace.nodes.ParameterNode.strip", "_generated/opto.trace.nodes.ParameterNode.swapcase", "_generated/opto.trace.nodes.ParameterNode.title", "_generated/opto.trace.nodes.ParameterNode.type", "_generated/opto.trace.nodes.ParameterNode.upper", "_generated/opto.trace.nodes.ParameterNode.values", "_generated/opto.trace.nodes.ParameterNode.zero_feedback", "_generated/opto.trace.nodes.get_op_name", "_generated/opto.trace.nodes.node-function", "_generated/opto.trace.operators", "_generated/opto.trace.operators.identity", "_generated/opto.trace.propagators", "_generated/opto.trace.propagators.graph_propagator", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.propagate", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.register", "_generated/opto.trace.propagators.graph_propagator.TraceGraph", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.empty", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.expand", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.graph", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.visualize", "_generated/opto.trace.propagators.propagators", "_generated/opto.trace.propagators.propagators.AbstractFeedback", "_generated/opto.trace.propagators.propagators.AbstractPropagator", "_generated/opto.trace.propagators.propagators.AbstractPropagator.propagate", "_generated/opto.trace.propagators.propagators.Propagator", "_generated/opto.trace.propagators.propagators.Propagator.init_feedback", "_generated/opto.trace.propagators.propagators.Propagator.propagate", "_generated/opto.trace.propagators.propagators.Propagator.register", "_generated/opto.trace.propagators.propagators.SumPropagator", "_generated/opto.trace.propagators.propagators.SumPropagator.init_feedback", "_generated/opto.trace.propagators.propagators.SumPropagator.propagate", "_generated/opto.trace.propagators.propagators.SumPropagator.register", "_generated/opto.trace.stop_tracing", "_generated/opto.trace.utils", "_generated/opto.trace.utils.contain", "_generated/opto.trace.utils.escape_json_nested_quotes", "_generated/opto.trace.utils.for_all_methods", "_generated/opto.trace.utils.parse_eqs_to_dict", "_generated/opto.trace.utils.remove_non_ascii", "_generated/opto.trace.utils.render_opt_step", "_generated/opto.trace.utils.sum_feedback", "_generated/opto.trace.utils.test_json_quote_escaper", "_generated/opto.utils", "_generated/opto.utils.llm", "_generated/opto.utils.llm.AbstractModel", "_generated/opto.utils.llm.AbstractModel.model", "_generated/opto.utils.llm.AutoGenLLM", "_generated/opto.utils.llm.AutoGenLLM.create", "_generated/opto.utils.llm.AutoGenLLM.model", "_generated/opto.utils.llm.auto_construct_oai_config_list_from_env", "_generated/opto.version", "api", "examples/game/battleship", "examples/game/negotiation_arena", "examples/nlp/bigbench_hard", "examples/robotics/metaworld", "faq/faq", "intro", "quickstart/installation", "quickstart/quick_start", "quickstart/quick_start_2", "quickstart/virtualhome", "tutorials/basic_tutorial", "tutorials/custom_optimizers", "tutorials/error_handling_tutorial", "tutorials/minibatch", "tutorials/optimization_tutorial"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_generated/opto.rst", "_generated/opto.optimizers.rst", "_generated/opto.optimizers.buffers.rst", "_generated/opto.optimizers.buffers.FIFOBuffer.rst", "_generated/opto.optimizers.buffers.FIFOBuffer.add.rst", "_generated/opto.optimizers.opro.rst", "_generated/opto.optimizers.opro.OPRO.rst", "_generated/opto.optimizers.opro.OPRO.backward.rst", "_generated/opto.optimizers.opro.OPRO.call_llm.rst", "_generated/opto.optimizers.opro.OPRO.construct_prompt.rst", "_generated/opto.optimizers.opro.OPRO.construct_update_dict.rst", "_generated/opto.optimizers.opro.OPRO.default_objective.rst", "_generated/opto.optimizers.opro.OPRO.default_prompt_symbols.rst", "_generated/opto.optimizers.opro.OPRO.default_propagator.rst", "_generated/opto.optimizers.opro.OPRO.example_problem_template.rst", "_generated/opto.optimizers.opro.OPRO.example_prompt.rst", "_generated/opto.optimizers.opro.OPRO.extract_llm_suggestion.rst", "_generated/opto.optimizers.opro.OPRO.final_prompt.rst", "_generated/opto.optimizers.opro.OPRO.output_format_prompt.rst", "_generated/opto.optimizers.opro.OPRO.problem_instance.rst", "_generated/opto.optimizers.opro.OPRO.propagator.rst", "_generated/opto.optimizers.opro.OPRO.propose.rst", "_generated/opto.optimizers.opro.OPRO.replace_symbols.rst", "_generated/opto.optimizers.opro.OPRO.repr_node_constraint.rst", "_generated/opto.optimizers.opro.OPRO.repr_node_value.rst", "_generated/opto.optimizers.opro.OPRO.representation_prompt.rst", "_generated/opto.optimizers.opro.OPRO.step.rst", "_generated/opto.optimizers.opro.OPRO.summarize.rst", "_generated/opto.optimizers.opro.OPRO.trace_graph.rst", "_generated/opto.optimizers.opro.OPRO.update.rst", "_generated/opto.optimizers.opro.OPRO.user_prompt_template.rst", "_generated/opto.optimizers.opro.OPRO.zero_feedback.rst", "_generated/opto.optimizers.optimizer.rst", "_generated/opto.optimizers.optimizer.AbstractOptimizer.rst", "_generated/opto.optimizers.optimizer.AbstractOptimizer.propagator.rst", "_generated/opto.optimizers.optimizer.AbstractOptimizer.step.rst", "_generated/opto.optimizers.optimizer.AbstractOptimizer.zero_feedback.rst", "_generated/opto.optimizers.optimizer.Optimizer.rst", "_generated/opto.optimizers.optimizer.Optimizer.backward.rst", "_generated/opto.optimizers.optimizer.Optimizer.default_propagator.rst", "_generated/opto.optimizers.optimizer.Optimizer.propagator.rst", "_generated/opto.optimizers.optimizer.Optimizer.propose.rst", "_generated/opto.optimizers.optimizer.Optimizer.step.rst", "_generated/opto.optimizers.optimizer.Optimizer.trace_graph.rst", "_generated/opto.optimizers.optimizer.Optimizer.update.rst", "_generated/opto.optimizers.optimizer.Optimizer.zero_feedback.rst", "_generated/opto.optimizers.optoprime.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.documentation.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.graph.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.others.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.output.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.roots.rst", "_generated/opto.optimizers.optoprime.FunctionFeedback.user_feedback.rst", "_generated/opto.optimizers.optoprime.OptoPrime.rst", "_generated/opto.optimizers.optoprime.OptoPrime.backward.rst", "_generated/opto.optimizers.optoprime.OptoPrime.call_llm.rst", "_generated/opto.optimizers.optoprime.OptoPrime.construct_prompt.rst", "_generated/opto.optimizers.optoprime.OptoPrime.construct_update_dict.rst", "_generated/opto.optimizers.optoprime.OptoPrime.default_objective.rst", "_generated/opto.optimizers.optoprime.OptoPrime.default_prompt_symbols.rst", "_generated/opto.optimizers.optoprime.OptoPrime.default_propagator.rst", "_generated/opto.optimizers.optoprime.OptoPrime.example_problem_template.rst", "_generated/opto.optimizers.optoprime.OptoPrime.example_prompt.rst", "_generated/opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion.rst", "_generated/opto.optimizers.optoprime.OptoPrime.final_prompt.rst", "_generated/opto.optimizers.optoprime.OptoPrime.output_format_prompt.rst", "_generated/opto.optimizers.optoprime.OptoPrime.problem_instance.rst", "_generated/opto.optimizers.optoprime.OptoPrime.propagator.rst", "_generated/opto.optimizers.optoprime.OptoPrime.propose.rst", "_generated/opto.optimizers.optoprime.OptoPrime.replace_symbols.rst", "_generated/opto.optimizers.optoprime.OptoPrime.repr_node_constraint.rst", "_generated/opto.optimizers.optoprime.OptoPrime.repr_node_value.rst", "_generated/opto.optimizers.optoprime.OptoPrime.representation_prompt.rst", "_generated/opto.optimizers.optoprime.OptoPrime.step.rst", "_generated/opto.optimizers.optoprime.OptoPrime.summarize.rst", "_generated/opto.optimizers.optoprime.OptoPrime.trace_graph.rst", "_generated/opto.optimizers.optoprime.OptoPrime.update.rst", "_generated/opto.optimizers.optoprime.OptoPrime.user_prompt_template.rst", "_generated/opto.optimizers.optoprime.OptoPrime.zero_feedback.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.code.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.constraints.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.documentation.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.feedback.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.inputs.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.instruction.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.others.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.outputs.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.problem_template.rst", "_generated/opto.optimizers.optoprime.ProblemInstance.variables.rst", "_generated/opto.optimizers.optoprime.get_fun_name.rst", "_generated/opto.optimizers.optoprime.node_to_function_feedback.rst", "_generated/opto.optimizers.optoprime.repr_function_call.rst", "_generated/opto.optimizers.textgrad.rst", "_generated/opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE.rst", "_generated/opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION.rst", "_generated/opto.optimizers.textgrad.GradientInfo.rst", "_generated/opto.optimizers.textgrad.GradientInfo.gradient.rst", "_generated/opto.optimizers.textgrad.GradientInfo.gradient_context.rst", "_generated/opto.optimizers.textgrad.TextGrad.rst", "_generated/opto.optimizers.textgrad.TextGrad.backward.rst", "_generated/opto.optimizers.textgrad.TextGrad.call_llm.rst", "_generated/opto.optimizers.textgrad.TextGrad.default_propagator.rst", "_generated/opto.optimizers.textgrad.TextGrad.propagator.rst", "_generated/opto.optimizers.textgrad.TextGrad.propose.rst", "_generated/opto.optimizers.textgrad.TextGrad.step.rst", "_generated/opto.optimizers.textgrad.TextGrad.trace_graph.rst", "_generated/opto.optimizers.textgrad.TextGrad.update.rst", "_generated/opto.optimizers.textgrad.TextGrad.zero_feedback.rst", "_generated/opto.optimizers.textgrad.construct_reduce_prompt.rst", "_generated/opto.optimizers.textgrad.construct_tgd_prompt.rst", "_generated/opto.optimizers.textgrad.get_short_value.rst", "_generated/opto.optimizers.textgrad.rm_node_attrs.rst", "_generated/opto.optimizers.utils.rst", "_generated/opto.optimizers.utils.print_color.rst", "_generated/opto.trace.rst", "_generated/opto.trace.broadcast.rst", "_generated/opto.trace.broadcast.apply_op.rst", "_generated/opto.trace.broadcast.recursive_conversion.rst", "_generated/opto.trace.bundle.rst", "_generated/opto.trace.containers.rst", "_generated/opto.trace.containers.Map.rst", "_generated/opto.trace.containers.Map.clear.rst", "_generated/opto.trace.containers.Map.copy.rst", "_generated/opto.trace.containers.Map.fromkeys.rst", "_generated/opto.trace.containers.Map.get.rst", "_generated/opto.trace.containers.Map.items.rst", "_generated/opto.trace.containers.Map.keys.rst", "_generated/opto.trace.containers.Map.parameters.rst", "_generated/opto.trace.containers.Map.parameters_dict.rst", "_generated/opto.trace.containers.Map.pop.rst", "_generated/opto.trace.containers.Map.popitem.rst", "_generated/opto.trace.containers.Map.setdefault.rst", "_generated/opto.trace.containers.Map.update.rst", "_generated/opto.trace.containers.Map.values.rst", "_generated/opto.trace.containers.NodeContainer.rst", "_generated/opto.trace.containers.ParameterContainer.rst", "_generated/opto.trace.containers.ParameterContainer.parameters.rst", "_generated/opto.trace.containers.ParameterContainer.parameters_dict.rst", "_generated/opto.trace.containers.Seq.rst", "_generated/opto.trace.containers.Seq.append.rst", "_generated/opto.trace.containers.Seq.clear.rst", "_generated/opto.trace.containers.Seq.copy.rst", "_generated/opto.trace.containers.Seq.count.rst", "_generated/opto.trace.containers.Seq.extend.rst", "_generated/opto.trace.containers.Seq.index.rst", "_generated/opto.trace.containers.Seq.insert.rst", "_generated/opto.trace.containers.Seq.parameters.rst", "_generated/opto.trace.containers.Seq.parameters_dict.rst", "_generated/opto.trace.containers.Seq.pop.rst", "_generated/opto.trace.containers.Seq.remove.rst", "_generated/opto.trace.containers.Seq.reverse.rst", "_generated/opto.trace.containers.Seq.sort.rst", "_generated/opto.trace.containers.trainable_method.rst", "_generated/opto.trace.errors.rst", "_generated/opto.trace.errors.ExecutionError.rst", "_generated/opto.trace.errors.TraceMissingInputsError.rst", "_generated/opto.trace.iterators.rst", "_generated/opto.trace.iterators.DictIterable.rst", "_generated/opto.trace.iterators.SeqIterable.rst", "_generated/opto.trace.iterators.iterate.rst", "_generated/opto.trace.modules.rst", "_generated/opto.trace.modules.Module.rst", "_generated/opto.trace.modules.Module.forward.rst", "_generated/opto.trace.modules.Module.load.rst", "_generated/opto.trace.modules.Module.parameters.rst", "_generated/opto.trace.modules.Module.parameters_dict.rst", "_generated/opto.trace.modules.Module.save.rst", "_generated/opto.trace.modules.model.rst", "_generated/opto.trace.nodes.rst", "_generated/opto.trace.nodes.AbstractNode.rst", "_generated/opto.trace.nodes.AbstractNode.children.rst", "_generated/opto.trace.nodes.AbstractNode.data.rst", "_generated/opto.trace.nodes.AbstractNode.gt.rst", "_generated/opto.trace.nodes.AbstractNode.id.rst", "_generated/opto.trace.nodes.AbstractNode.is_leaf.rst", "_generated/opto.trace.nodes.AbstractNode.is_root.rst", "_generated/opto.trace.nodes.AbstractNode.level.rst", "_generated/opto.trace.nodes.AbstractNode.lt.rst", "_generated/opto.trace.nodes.AbstractNode.name.rst", "_generated/opto.trace.nodes.AbstractNode.parents.rst", "_generated/opto.trace.nodes.AbstractNode.py_name.rst", "_generated/opto.trace.nodes.ExceptionNode.rst", "_generated/opto.trace.nodes.ExceptionNode.append.rst", "_generated/opto.trace.nodes.ExceptionNode.backward.rst", "_generated/opto.trace.nodes.ExceptionNode.call.rst", "_generated/opto.trace.nodes.ExceptionNode.capitalize.rst", "_generated/opto.trace.nodes.ExceptionNode.children.rst", "_generated/opto.trace.nodes.ExceptionNode.clone.rst", "_generated/opto.trace.nodes.ExceptionNode.create_feedback.rst", "_generated/opto.trace.nodes.ExceptionNode.data.rst", "_generated/opto.trace.nodes.ExceptionNode.description.rst", "_generated/opto.trace.nodes.ExceptionNode.detach.rst", "_generated/opto.trace.nodes.ExceptionNode.eq.rst", "_generated/opto.trace.nodes.ExceptionNode.expandable_dependencies.rst", "_generated/opto.trace.nodes.ExceptionNode.feedback.rst", "_generated/opto.trace.nodes.ExceptionNode.format.rst", "_generated/opto.trace.nodes.ExceptionNode.getattr.rst", "_generated/opto.trace.nodes.ExceptionNode.gt.rst", "_generated/opto.trace.nodes.ExceptionNode.hidden_dependencies.rst", "_generated/opto.trace.nodes.ExceptionNode.id.rst", "_generated/opto.trace.nodes.ExceptionNode.info.rst", "_generated/opto.trace.nodes.ExceptionNode.inputs.rst", "_generated/opto.trace.nodes.ExceptionNode.is_leaf.rst", "_generated/opto.trace.nodes.ExceptionNode.is_root.rst", "_generated/opto.trace.nodes.ExceptionNode.items.rst", "_generated/opto.trace.nodes.ExceptionNode.join.rst", "_generated/opto.trace.nodes.ExceptionNode.keys.rst", "_generated/opto.trace.nodes.ExceptionNode.len.rst", "_generated/opto.trace.nodes.ExceptionNode.level.rst", "_generated/opto.trace.nodes.ExceptionNode.lower.rst", "_generated/opto.trace.nodes.ExceptionNode.lt.rst", "_generated/opto.trace.nodes.ExceptionNode.name.rst", "_generated/opto.trace.nodes.ExceptionNode.neq.rst", "_generated/opto.trace.nodes.ExceptionNode.parameter_dependencies.rst", "_generated/opto.trace.nodes.ExceptionNode.parents.rst", "_generated/opto.trace.nodes.ExceptionNode.pop.rst", "_generated/opto.trace.nodes.ExceptionNode.py_name.rst", "_generated/opto.trace.nodes.ExceptionNode.replace.rst", "_generated/opto.trace.nodes.ExceptionNode.split.rst", "_generated/opto.trace.nodes.ExceptionNode.strip.rst", "_generated/opto.trace.nodes.ExceptionNode.swapcase.rst", "_generated/opto.trace.nodes.ExceptionNode.title.rst", "_generated/opto.trace.nodes.ExceptionNode.type.rst", "_generated/opto.trace.nodes.ExceptionNode.upper.rst", "_generated/opto.trace.nodes.ExceptionNode.values.rst", "_generated/opto.trace.nodes.ExceptionNode.zero_feedback.rst", "_generated/opto.trace.nodes.Graph.rst", "_generated/opto.trace.nodes.Graph.TRACE.rst", "_generated/opto.trace.nodes.Graph.clear.rst", "_generated/opto.trace.nodes.Graph.get.rst", "_generated/opto.trace.nodes.Graph.register.rst", "_generated/opto.trace.nodes.Graph.roots.rst", "_generated/opto.trace.nodes.MessageNode.rst", "_generated/opto.trace.nodes.MessageNode.append.rst", "_generated/opto.trace.nodes.MessageNode.backward.rst", "_generated/opto.trace.nodes.MessageNode.call.rst", "_generated/opto.trace.nodes.MessageNode.capitalize.rst", "_generated/opto.trace.nodes.MessageNode.children.rst", "_generated/opto.trace.nodes.MessageNode.clone.rst", "_generated/opto.trace.nodes.MessageNode.data.rst", "_generated/opto.trace.nodes.MessageNode.description.rst", "_generated/opto.trace.nodes.MessageNode.detach.rst", "_generated/opto.trace.nodes.MessageNode.eq.rst", "_generated/opto.trace.nodes.MessageNode.expandable_dependencies.rst", "_generated/opto.trace.nodes.MessageNode.feedback.rst", "_generated/opto.trace.nodes.MessageNode.format.rst", "_generated/opto.trace.nodes.MessageNode.getattr.rst", "_generated/opto.trace.nodes.MessageNode.gt.rst", "_generated/opto.trace.nodes.MessageNode.hidden_dependencies.rst", "_generated/opto.trace.nodes.MessageNode.id.rst", "_generated/opto.trace.nodes.MessageNode.info.rst", "_generated/opto.trace.nodes.MessageNode.inputs.rst", "_generated/opto.trace.nodes.MessageNode.is_leaf.rst", "_generated/opto.trace.nodes.MessageNode.is_root.rst", "_generated/opto.trace.nodes.MessageNode.items.rst", "_generated/opto.trace.nodes.MessageNode.join.rst", "_generated/opto.trace.nodes.MessageNode.keys.rst", "_generated/opto.trace.nodes.MessageNode.len.rst", "_generated/opto.trace.nodes.MessageNode.level.rst", "_generated/opto.trace.nodes.MessageNode.lower.rst", "_generated/opto.trace.nodes.MessageNode.lt.rst", "_generated/opto.trace.nodes.MessageNode.name.rst", "_generated/opto.trace.nodes.MessageNode.neq.rst", "_generated/opto.trace.nodes.MessageNode.parameter_dependencies.rst", "_generated/opto.trace.nodes.MessageNode.parents.rst", "_generated/opto.trace.nodes.MessageNode.pop.rst", "_generated/opto.trace.nodes.MessageNode.py_name.rst", "_generated/opto.trace.nodes.MessageNode.replace.rst", "_generated/opto.trace.nodes.MessageNode.split.rst", "_generated/opto.trace.nodes.MessageNode.strip.rst", "_generated/opto.trace.nodes.MessageNode.swapcase.rst", "_generated/opto.trace.nodes.MessageNode.title.rst", "_generated/opto.trace.nodes.MessageNode.type.rst", "_generated/opto.trace.nodes.MessageNode.upper.rst", "_generated/opto.trace.nodes.MessageNode.values.rst", "_generated/opto.trace.nodes.MessageNode.zero_feedback.rst", "_generated/opto.trace.nodes.Node.rst", "_generated/opto.trace.nodes.Node.append.rst", "_generated/opto.trace.nodes.Node.backward.rst", "_generated/opto.trace.nodes.Node.call.rst", "_generated/opto.trace.nodes.Node.capitalize.rst", "_generated/opto.trace.nodes.Node.children.rst", "_generated/opto.trace.nodes.Node.clone.rst", "_generated/opto.trace.nodes.Node.data.rst", "_generated/opto.trace.nodes.Node.description.rst", "_generated/opto.trace.nodes.Node.detach.rst", "_generated/opto.trace.nodes.Node.eq.rst", "_generated/opto.trace.nodes.Node.expandable_dependencies.rst", "_generated/opto.trace.nodes.Node.feedback.rst", "_generated/opto.trace.nodes.Node.format.rst", "_generated/opto.trace.nodes.Node.getattr.rst", "_generated/opto.trace.nodes.Node.gt.rst", "_generated/opto.trace.nodes.Node.id.rst", "_generated/opto.trace.nodes.Node.info.rst", "_generated/opto.trace.nodes.Node.is_leaf.rst", "_generated/opto.trace.nodes.Node.is_root.rst", "_generated/opto.trace.nodes.Node.items.rst", "_generated/opto.trace.nodes.Node.join.rst", "_generated/opto.trace.nodes.Node.keys.rst", "_generated/opto.trace.nodes.Node.len.rst", "_generated/opto.trace.nodes.Node.level.rst", "_generated/opto.trace.nodes.Node.lower.rst", "_generated/opto.trace.nodes.Node.lt.rst", "_generated/opto.trace.nodes.Node.name.rst", "_generated/opto.trace.nodes.Node.neq.rst", "_generated/opto.trace.nodes.Node.parameter_dependencies.rst", "_generated/opto.trace.nodes.Node.parents.rst", "_generated/opto.trace.nodes.Node.pop.rst", "_generated/opto.trace.nodes.Node.py_name.rst", "_generated/opto.trace.nodes.Node.replace.rst", "_generated/opto.trace.nodes.Node.split.rst", "_generated/opto.trace.nodes.Node.strip.rst", "_generated/opto.trace.nodes.Node.swapcase.rst", "_generated/opto.trace.nodes.Node.title.rst", "_generated/opto.trace.nodes.Node.type.rst", "_generated/opto.trace.nodes.Node.upper.rst", "_generated/opto.trace.nodes.Node.values.rst", "_generated/opto.trace.nodes.Node.zero_feedback.rst", "_generated/opto.trace.nodes.NodeVizStyleGuide.rst", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_attrs.rst", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_color.rst", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_label.rst", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_node_shape.rst", "_generated/opto.trace.nodes.NodeVizStyleGuide.get_style.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_color.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_label.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape.rst", "_generated/opto.trace.nodes.NodeVizStyleGuideColorful.get_style.rst", "_generated/opto.trace.nodes.ParameterNode.rst", "_generated/opto.trace.nodes.ParameterNode.append.rst", "_generated/opto.trace.nodes.ParameterNode.backward.rst", "_generated/opto.trace.nodes.ParameterNode.call.rst", "_generated/opto.trace.nodes.ParameterNode.capitalize.rst", "_generated/opto.trace.nodes.ParameterNode.children.rst", "_generated/opto.trace.nodes.ParameterNode.clone.rst", "_generated/opto.trace.nodes.ParameterNode.data.rst", "_generated/opto.trace.nodes.ParameterNode.description.rst", "_generated/opto.trace.nodes.ParameterNode.detach.rst", "_generated/opto.trace.nodes.ParameterNode.eq.rst", "_generated/opto.trace.nodes.ParameterNode.expandable_dependencies.rst", "_generated/opto.trace.nodes.ParameterNode.feedback.rst", "_generated/opto.trace.nodes.ParameterNode.format.rst", "_generated/opto.trace.nodes.ParameterNode.getattr.rst", "_generated/opto.trace.nodes.ParameterNode.gt.rst", "_generated/opto.trace.nodes.ParameterNode.id.rst", "_generated/opto.trace.nodes.ParameterNode.info.rst", "_generated/opto.trace.nodes.ParameterNode.is_leaf.rst", "_generated/opto.trace.nodes.ParameterNode.is_root.rst", "_generated/opto.trace.nodes.ParameterNode.items.rst", "_generated/opto.trace.nodes.ParameterNode.join.rst", "_generated/opto.trace.nodes.ParameterNode.keys.rst", "_generated/opto.trace.nodes.ParameterNode.len.rst", "_generated/opto.trace.nodes.ParameterNode.level.rst", "_generated/opto.trace.nodes.ParameterNode.lower.rst", "_generated/opto.trace.nodes.ParameterNode.lt.rst", "_generated/opto.trace.nodes.ParameterNode.name.rst", "_generated/opto.trace.nodes.ParameterNode.neq.rst", "_generated/opto.trace.nodes.ParameterNode.parameter_dependencies.rst", "_generated/opto.trace.nodes.ParameterNode.parents.rst", "_generated/opto.trace.nodes.ParameterNode.pop.rst", "_generated/opto.trace.nodes.ParameterNode.py_name.rst", "_generated/opto.trace.nodes.ParameterNode.replace.rst", "_generated/opto.trace.nodes.ParameterNode.split.rst", "_generated/opto.trace.nodes.ParameterNode.strip.rst", "_generated/opto.trace.nodes.ParameterNode.swapcase.rst", "_generated/opto.trace.nodes.ParameterNode.title.rst", "_generated/opto.trace.nodes.ParameterNode.type.rst", "_generated/opto.trace.nodes.ParameterNode.upper.rst", "_generated/opto.trace.nodes.ParameterNode.values.rst", "_generated/opto.trace.nodes.ParameterNode.zero_feedback.rst", "_generated/opto.trace.nodes.get_op_name.rst", "_generated/opto.trace.nodes.node-function.rst", "_generated/opto.trace.operators.rst", "_generated/opto.trace.operators.identity.rst", "_generated/opto.trace.propagators.rst", "_generated/opto.trace.propagators.graph_propagator.rst", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.rst", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.aggregate.rst", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback.rst", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.propagate.rst", "_generated/opto.trace.propagators.graph_propagator.GraphPropagator.register.rst", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.rst", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.empty.rst", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.expand.rst", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.graph.rst", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.user_feedback.rst", "_generated/opto.trace.propagators.graph_propagator.TraceGraph.visualize.rst", "_generated/opto.trace.propagators.propagators.rst", "_generated/opto.trace.propagators.propagators.AbstractFeedback.rst", "_generated/opto.trace.propagators.propagators.AbstractPropagator.rst", "_generated/opto.trace.propagators.propagators.AbstractPropagator.propagate.rst", "_generated/opto.trace.propagators.propagators.Propagator.rst", "_generated/opto.trace.propagators.propagators.Propagator.init_feedback.rst", "_generated/opto.trace.propagators.propagators.Propagator.propagate.rst", "_generated/opto.trace.propagators.propagators.Propagator.register.rst", "_generated/opto.trace.propagators.propagators.SumPropagator.rst", "_generated/opto.trace.propagators.propagators.SumPropagator.init_feedback.rst", "_generated/opto.trace.propagators.propagators.SumPropagator.propagate.rst", "_generated/opto.trace.propagators.propagators.SumPropagator.register.rst", "_generated/opto.trace.stop_tracing.rst", "_generated/opto.trace.utils.rst", "_generated/opto.trace.utils.contain.rst", "_generated/opto.trace.utils.escape_json_nested_quotes.rst", "_generated/opto.trace.utils.for_all_methods.rst", "_generated/opto.trace.utils.parse_eqs_to_dict.rst", "_generated/opto.trace.utils.remove_non_ascii.rst", "_generated/opto.trace.utils.render_opt_step.rst", "_generated/opto.trace.utils.sum_feedback.rst", "_generated/opto.trace.utils.test_json_quote_escaper.rst", "_generated/opto.utils.rst", "_generated/opto.utils.llm.rst", "_generated/opto.utils.llm.AbstractModel.rst", "_generated/opto.utils.llm.AbstractModel.model.rst", "_generated/opto.utils.llm.AutoGenLLM.rst", "_generated/opto.utils.llm.AutoGenLLM.create.rst", "_generated/opto.utils.llm.AutoGenLLM.model.rst", "_generated/opto.utils.llm.auto_construct_oai_config_list_from_env.rst", "_generated/opto.version.rst", "api.rst", "examples/game/battleship.ipynb", "examples/game/negotiation_arena.ipynb", "examples/nlp/bigbench_hard.ipynb", "examples/robotics/metaworld.ipynb", "faq/faq.md", "intro.md", "quickstart/installation.md", "quickstart/quick_start.ipynb", "quickstart/quick_start_2.ipynb", "quickstart/virtualhome.md", "tutorials/basic_tutorial.ipynb", "tutorials/custom_optimizers.ipynb", "tutorials/error_handling_tutorial.ipynb", "tutorials/minibatch.ipynb", "tutorials/optimization_tutorial.ipynb"], "indexentries": {"__init__() (abstractfeedback method)": [[393, "opto.trace.propagators.propagators.AbstractFeedback.__init__", false]], "__init__() (abstractmodel method)": [[416, "opto.utils.llm.AbstractModel.__init__", false]], "__init__() (abstractnode method)": [[171, "opto.trace.nodes.AbstractNode.__init__", false]], "__init__() (abstractoptimizer method)": [[33, "opto.optimizers.optimizer.AbstractOptimizer.__init__", false]], "__init__() (abstractpropagator method)": [[394, "opto.trace.propagators.propagators.AbstractPropagator.__init__", false]], "__init__() (autogenllm method)": [[418, "opto.utils.llm.AutoGenLLM.__init__", false]], "__init__() (dictiterable method)": [[159, "opto.trace.iterators.DictIterable.__init__", false]], "__init__() (exceptionnode method)": [[183, "opto.trace.nodes.ExceptionNode.__init__", false]], "__init__() (executionerror method)": [[156, "opto.trace.errors.ExecutionError.__init__", false]], "__init__() (fifobuffer method)": [[3, "opto.optimizers.buffers.FIFOBuffer.__init__", false]], "__init__() (functionfeedback method)": [[47, "opto.optimizers.optoprime.FunctionFeedback.__init__", false]], "__init__() (gradientinfo method)": [[97, "opto.optimizers.textgrad.GradientInfo.__init__", false]], "__init__() (graph method)": [[228, "opto.trace.nodes.Graph.__init__", false]], "__init__() (graphpropagator method)": [[381, "opto.trace.propagators.graph_propagator.GraphPropagator.__init__", false]], "__init__() (map method)": [[122, "opto.trace.containers.Map.__init__", false]], "__init__() (messagenode method)": [[234, "opto.trace.nodes.MessageNode.__init__", false]], "__init__() (module method)": [[163, "opto.trace.modules.Module.__init__", false]], "__init__() (node method)": [[278, "opto.trace.nodes.Node.__init__", false]], "__init__() (nodecontainer method)": [[136, "opto.trace.containers.NodeContainer.__init__", false]], "__init__() (nodevizstyleguide method)": [[320, "opto.trace.nodes.NodeVizStyleGuide.__init__", false]], "__init__() (nodevizstyleguidecolorful method)": [[326, "opto.trace.nodes.NodeVizStyleGuideColorful.__init__", false]], "__init__() (opro method)": [[6, "opto.optimizers.opro.OPRO.__init__", false]], "__init__() (optimizer method)": [[37, "opto.optimizers.optimizer.Optimizer.__init__", false]], "__init__() (optoprime method)": [[54, "opto.optimizers.optoprime.OptoPrime.__init__", false]], "__init__() (parametercontainer method)": [[137, "opto.trace.containers.ParameterContainer.__init__", false]], "__init__() (parameternode method)": [[333, "opto.trace.nodes.ParameterNode.__init__", false]], "__init__() (probleminstance method)": [[80, "opto.optimizers.optoprime.ProblemInstance.__init__", false]], "__init__() (propagator method)": [[396, "opto.trace.propagators.propagators.Propagator.__init__", false]], "__init__() (seq method)": [[140, "opto.trace.containers.Seq.__init__", false]], "__init__() (seqiterable method)": [[160, "opto.trace.iterators.SeqIterable.__init__", false]], "__init__() (stop_tracing method)": [[404, "opto.trace.stop_tracing.__init__", false]], "__init__() (sumpropagator method)": [[400, "opto.trace.propagators.propagators.SumPropagator.__init__", false]], "__init__() (textgrad method)": [[100, "opto.optimizers.textgrad.TextGrad.__init__", false]], "__init__() (tracegraph method)": [[386, "opto.trace.propagators.graph_propagator.TraceGraph.__init__", false]], "__init__() (tracemissinginputserror method)": [[157, "opto.trace.errors.TraceMissingInputsError.__init__", false]], "__new__() (abstractfeedback method)": [[393, "opto.trace.propagators.propagators.AbstractFeedback.__new__", false]], "__new__() (abstractmodel method)": [[416, "opto.utils.llm.AbstractModel.__new__", false]], "__new__() (abstractnode method)": [[171, "opto.trace.nodes.AbstractNode.__new__", false]], "__new__() (abstractoptimizer method)": [[33, "opto.optimizers.optimizer.AbstractOptimizer.__new__", false]], "__new__() (abstractpropagator method)": [[394, "opto.trace.propagators.propagators.AbstractPropagator.__new__", false]], "__new__() (autogenllm method)": [[418, "opto.utils.llm.AutoGenLLM.__new__", false]], "__new__() (dictiterable method)": [[159, "opto.trace.iterators.DictIterable.__new__", false]], "__new__() (exceptionnode method)": [[183, "opto.trace.nodes.ExceptionNode.__new__", false]], "__new__() (executionerror method)": [[156, "opto.trace.errors.ExecutionError.__new__", false]], "__new__() (fifobuffer method)": [[3, "opto.optimizers.buffers.FIFOBuffer.__new__", false]], "__new__() (functionfeedback method)": [[47, "opto.optimizers.optoprime.FunctionFeedback.__new__", false]], "__new__() (gradientinfo method)": [[97, "opto.optimizers.textgrad.GradientInfo.__new__", false]], "__new__() (graph method)": [[228, "opto.trace.nodes.Graph.__new__", false]], "__new__() (graphpropagator method)": [[381, "opto.trace.propagators.graph_propagator.GraphPropagator.__new__", false]], "__new__() (map method)": [[122, "opto.trace.containers.Map.__new__", false]], "__new__() (messagenode method)": [[234, "opto.trace.nodes.MessageNode.__new__", false]], "__new__() (module method)": [[163, "opto.trace.modules.Module.__new__", false]], "__new__() (node method)": [[278, "opto.trace.nodes.Node.__new__", false]], "__new__() (nodecontainer method)": [[136, "opto.trace.containers.NodeContainer.__new__", false]], "__new__() (nodevizstyleguide method)": [[320, "opto.trace.nodes.NodeVizStyleGuide.__new__", false]], "__new__() (nodevizstyleguidecolorful method)": [[326, "opto.trace.nodes.NodeVizStyleGuideColorful.__new__", false]], "__new__() (opro method)": [[6, "opto.optimizers.opro.OPRO.__new__", false]], "__new__() (optimizer method)": [[37, "opto.optimizers.optimizer.Optimizer.__new__", false]], "__new__() (optoprime method)": [[54, "opto.optimizers.optoprime.OptoPrime.__new__", false]], "__new__() (parametercontainer method)": [[137, "opto.trace.containers.ParameterContainer.__new__", false]], "__new__() (parameternode method)": [[333, "opto.trace.nodes.ParameterNode.__new__", false]], "__new__() (probleminstance method)": [[80, "opto.optimizers.optoprime.ProblemInstance.__new__", false]], "__new__() (propagator method)": [[396, "opto.trace.propagators.propagators.Propagator.__new__", false]], "__new__() (seq method)": [[140, "opto.trace.containers.Seq.__new__", false]], "__new__() (seqiterable method)": [[160, "opto.trace.iterators.SeqIterable.__new__", false]], "__new__() (stop_tracing method)": [[404, "opto.trace.stop_tracing.__new__", false]], "__new__() (sumpropagator method)": [[400, "opto.trace.propagators.propagators.SumPropagator.__new__", false]], "__new__() (textgrad method)": [[100, "opto.optimizers.textgrad.TextGrad.__new__", false]], "__new__() (tracegraph method)": [[386, "opto.trace.propagators.graph_propagator.TraceGraph.__new__", false]], "__new__() (tracemissinginputserror method)": [[157, "opto.trace.errors.TraceMissingInputsError.__new__", false]], "_backwarded (node attribute)": [[278, "opto.trace.nodes.Node._backwarded", false]], "_constraint (node attribute)": [[278, "opto.trace.nodes.Node._constraint", false]], "_dependencies (node attribute)": [[278, "opto.trace.nodes.Node._dependencies", false]], "_description (node attribute)": [[278, "opto.trace.nodes.Node._description", false]], "_feedback (node attribute)": [[278, "opto.trace.nodes.Node._feedback", false]], "_info (node attribute)": [[278, "opto.trace.nodes.Node._info", false]], "_nodes (graph attribute)": [[228, "opto.trace.nodes.Graph._nodes", false]], "abstractfeedback (class in opto.trace.propagators.propagators)": [[393, "opto.trace.propagators.propagators.AbstractFeedback", false]], "abstractmodel (class in opto.utils.llm)": [[416, "opto.utils.llm.AbstractModel", false]], "abstractnode (class in opto.trace.nodes)": [[171, "opto.trace.nodes.AbstractNode", false]], "abstractoptimizer (class in opto.optimizers.optimizer)": [[33, "opto.optimizers.optimizer.AbstractOptimizer", false]], "abstractpropagator (class in opto.trace.propagators.propagators)": [[394, "opto.trace.propagators.propagators.AbstractPropagator", false]], "add() (fifobuffer method)": [[4, "opto.optimizers.buffers.FIFOBuffer.add", false]], "aggregate() (graphpropagator method)": [[382, "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", false]], "append() (exceptionnode method)": [[184, "opto.trace.nodes.ExceptionNode.append", false]], "append() (messagenode method)": [[235, "opto.trace.nodes.MessageNode.append", false]], "append() (node method)": [[279, "opto.trace.nodes.Node.append", false]], "append() (parameternode method)": [[334, "opto.trace.nodes.ParameterNode.append", false]], "append() (seq method)": [[141, "opto.trace.containers.Seq.append", false]], "apply_op() (in module opto.trace.broadcast)": [[118, "opto.trace.broadcast.apply_op", false]], "auto_construct_oai_config_list_from_env() (in module opto.utils.llm)": [[421, "opto.utils.llm.auto_construct_oai_config_list_from_env", false]], "autogenllm (class in opto.utils.llm)": [[418, "opto.utils.llm.AutoGenLLM", false]], "backward() (exceptionnode method)": [[185, "opto.trace.nodes.ExceptionNode.backward", false]], "backward() (messagenode method)": [[236, "opto.trace.nodes.MessageNode.backward", false]], "backward() (node method)": [[280, "opto.trace.nodes.Node.backward", false]], "backward() (opro method)": [[7, "opto.optimizers.opro.OPRO.backward", false]], "backward() (optimizer method)": [[38, "opto.optimizers.optimizer.Optimizer.backward", false]], "backward() (optoprime method)": [[55, "opto.optimizers.optoprime.OptoPrime.backward", false]], "backward() (parameternode method)": [[335, "opto.trace.nodes.ParameterNode.backward", false]], "backward() (textgrad method)": [[101, "opto.optimizers.textgrad.TextGrad.backward", false]], "call() (exceptionnode method)": [[186, "opto.trace.nodes.ExceptionNode.call", false]], "call() (messagenode method)": [[237, "opto.trace.nodes.MessageNode.call", false]], "call() (node method)": [[281, "opto.trace.nodes.Node.call", false]], "call() (parameternode method)": [[336, "opto.trace.nodes.ParameterNode.call", false]], "call_llm() (opro method)": [[8, "opto.optimizers.opro.OPRO.call_llm", false]], "call_llm() (optoprime method)": [[56, "opto.optimizers.optoprime.OptoPrime.call_llm", false]], "call_llm() (textgrad method)": [[102, "opto.optimizers.textgrad.TextGrad.call_llm", false]], "capitalize() (exceptionnode method)": [[187, "opto.trace.nodes.ExceptionNode.capitalize", false]], "capitalize() (messagenode method)": [[238, "opto.trace.nodes.MessageNode.capitalize", false]], "capitalize() (node method)": [[282, "opto.trace.nodes.Node.capitalize", false]], "capitalize() (parameternode method)": [[337, "opto.trace.nodes.ParameterNode.capitalize", false]], "children (abstractnode property)": [[172, "opto.trace.nodes.AbstractNode.children", false]], "children (exceptionnode property)": [[188, "opto.trace.nodes.ExceptionNode.children", false]], "children (messagenode property)": [[239, "opto.trace.nodes.MessageNode.children", false]], "children (node property)": [[283, "opto.trace.nodes.Node.children", false]], "children (parameternode property)": [[338, "opto.trace.nodes.ParameterNode.children", false]], "clear() (graph method)": [[230, "opto.trace.nodes.Graph.clear", false]], "clear() (map method)": [[123, "opto.trace.containers.Map.clear", false]], "clear() (seq method)": [[142, "opto.trace.containers.Seq.clear", false]], "clone() (exceptionnode method)": [[189, "opto.trace.nodes.ExceptionNode.clone", false]], "clone() (messagenode method)": [[240, "opto.trace.nodes.MessageNode.clone", false]], "clone() (node method)": [[284, "opto.trace.nodes.Node.clone", false]], "clone() (parameternode method)": [[339, "opto.trace.nodes.ParameterNode.clone", false]], "code (probleminstance attribute)": [[81, "opto.optimizers.optoprime.ProblemInstance.code", false]], "constraints (probleminstance attribute)": [[82, "opto.optimizers.optoprime.ProblemInstance.constraints", false]], "construct_prompt() (opro method)": [[9, "opto.optimizers.opro.OPRO.construct_prompt", false]], "construct_prompt() (optoprime method)": [[57, "opto.optimizers.optoprime.OptoPrime.construct_prompt", false]], "construct_reduce_prompt() (in module opto.optimizers.textgrad)": [[110, "opto.optimizers.textgrad.construct_reduce_prompt", false]], "construct_tgd_prompt() (in module opto.optimizers.textgrad)": [[111, "opto.optimizers.textgrad.construct_tgd_prompt", false]], "construct_update_dict() (opro method)": [[10, "opto.optimizers.opro.OPRO.construct_update_dict", false]], "construct_update_dict() (optoprime method)": [[58, "opto.optimizers.optoprime.OptoPrime.construct_update_dict", false]], "contain() (in module opto.trace.utils)": [[406, "opto.trace.utils.contain", false]], "copy() (map method)": [[124, "opto.trace.containers.Map.copy", false]], "copy() (seq method)": [[143, "opto.trace.containers.Seq.copy", false]], "count() (seq method)": [[144, "opto.trace.containers.Seq.count", false]], "create() (autogenllm method)": [[419, "opto.utils.llm.AutoGenLLM.create", false]], "create_feedback() (exceptionnode method)": [[190, "opto.trace.nodes.ExceptionNode.create_feedback", false]], "data (abstractnode property)": [[173, "opto.trace.nodes.AbstractNode.data", false]], "data (exceptionnode property)": [[191, "opto.trace.nodes.ExceptionNode.data", false]], "data (messagenode property)": [[241, "opto.trace.nodes.MessageNode.data", false]], "data (node property)": [[285, "opto.trace.nodes.Node.data", false]], "data (parameternode property)": [[340, "opto.trace.nodes.ParameterNode.data", false]], "default_objective (opro attribute)": [[11, "opto.optimizers.opro.OPRO.default_objective", false]], "default_objective (optoprime attribute)": [[59, "opto.optimizers.optoprime.OptoPrime.default_objective", false]], "default_prompt_symbols (opro attribute)": [[12, "opto.optimizers.opro.OPRO.default_prompt_symbols", false]], "default_prompt_symbols (optoprime attribute)": [[60, "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", false]], "default_propagator() (opro method)": [[13, "opto.optimizers.opro.OPRO.default_propagator", false]], "default_propagator() (optimizer method)": [[39, "opto.optimizers.optimizer.Optimizer.default_propagator", false]], "default_propagator() (optoprime method)": [[61, "opto.optimizers.optoprime.OptoPrime.default_propagator", false]], "default_propagator() (textgrad method)": [[103, "opto.optimizers.textgrad.TextGrad.default_propagator", false]], "description (exceptionnode property)": [[192, "opto.trace.nodes.ExceptionNode.description", false]], "description (messagenode property)": [[242, "opto.trace.nodes.MessageNode.description", false]], "description (node property)": [[286, "opto.trace.nodes.Node.description", false]], "description (parameternode property)": [[341, "opto.trace.nodes.ParameterNode.description", false]], "detach() (exceptionnode method)": [[193, "opto.trace.nodes.ExceptionNode.detach", false]], "detach() (messagenode method)": [[243, "opto.trace.nodes.MessageNode.detach", false]], "detach() (node method)": [[287, "opto.trace.nodes.Node.detach", false]], "detach() (parameternode method)": [[342, "opto.trace.nodes.ParameterNode.detach", false]], "dictiterable (class in opto.trace.iterators)": [[159, "opto.trace.iterators.DictIterable", false]], "documentation (functionfeedback attribute)": [[48, "opto.optimizers.optoprime.FunctionFeedback.documentation", false]], "documentation (probleminstance attribute)": [[83, "opto.optimizers.optoprime.ProblemInstance.documentation", false]], "empty() (tracegraph method)": [[387, "opto.trace.propagators.graph_propagator.TraceGraph.empty", false]], "eq() (exceptionnode method)": [[194, "opto.trace.nodes.ExceptionNode.eq", false]], "eq() (messagenode method)": [[244, "opto.trace.nodes.MessageNode.eq", false]], "eq() (node method)": [[288, "opto.trace.nodes.Node.eq", false]], "eq() (parameternode method)": [[343, "opto.trace.nodes.ParameterNode.eq", false]], "escape_json_nested_quotes() (in module opto.trace.utils)": [[407, "opto.trace.utils.escape_json_nested_quotes", false]], "example_problem_template (opro attribute)": [[14, "opto.optimizers.opro.OPRO.example_problem_template", false]], "example_problem_template (optoprime attribute)": [[62, "opto.optimizers.optoprime.OptoPrime.example_problem_template", false]], "example_prompt (opro attribute)": [[15, "opto.optimizers.opro.OPRO.example_prompt", false]], "example_prompt (optoprime attribute)": [[63, "opto.optimizers.optoprime.OptoPrime.example_prompt", false]], "exceptionnode (class in opto.trace.nodes)": [[183, "opto.trace.nodes.ExceptionNode", false]], "executionerror": [[156, "opto.trace.errors.ExecutionError", false]], "expand() (tracegraph class method)": [[388, "opto.trace.propagators.graph_propagator.TraceGraph.expand", false]], "expandable_dependencies (exceptionnode property)": [[195, "opto.trace.nodes.ExceptionNode.expandable_dependencies", false]], "expandable_dependencies (messagenode property)": [[245, "opto.trace.nodes.MessageNode.expandable_dependencies", false]], "expandable_dependencies (node property)": [[289, "opto.trace.nodes.Node.expandable_dependencies", false]], "expandable_dependencies (parameternode property)": [[344, "opto.trace.nodes.ParameterNode.expandable_dependencies", false]], "extend() (seq method)": [[145, "opto.trace.containers.Seq.extend", false]], "extract_llm_suggestion() (opro method)": [[16, "opto.optimizers.opro.OPRO.extract_llm_suggestion", false]], "extract_llm_suggestion() (optoprime method)": [[64, "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", false]], "feedback (exceptionnode property)": [[196, "opto.trace.nodes.ExceptionNode.feedback", false]], "feedback (messagenode property)": [[246, "opto.trace.nodes.MessageNode.feedback", false]], "feedback (node property)": [[290, "opto.trace.nodes.Node.feedback", false]], "feedback (parameternode property)": [[345, "opto.trace.nodes.ParameterNode.feedback", false]], "feedback (probleminstance attribute)": [[84, "opto.optimizers.optoprime.ProblemInstance.feedback", false]], "fifobuffer (class in opto.optimizers.buffers)": [[3, "opto.optimizers.buffers.FIFOBuffer", false]], "final_prompt (opro attribute)": [[17, "opto.optimizers.opro.OPRO.final_prompt", false]], "final_prompt (optoprime attribute)": [[65, "opto.optimizers.optoprime.OptoPrime.final_prompt", false]], "for_all_methods() (in module opto.trace.utils)": [[408, "opto.trace.utils.for_all_methods", false]], "format() (exceptionnode method)": [[197, "opto.trace.nodes.ExceptionNode.format", false]], "format() (messagenode method)": [[247, "opto.trace.nodes.MessageNode.format", false]], "format() (node method)": [[291, "opto.trace.nodes.Node.format", false]], "format() (parameternode method)": [[346, "opto.trace.nodes.ParameterNode.format", false]], "forward() (module method)": [[164, "opto.trace.modules.Module.forward", false]], "fromkeys() (map class method)": [[125, "opto.trace.containers.Map.fromkeys", false]], "functionfeedback (class in opto.optimizers.optoprime)": [[47, "opto.optimizers.optoprime.FunctionFeedback", false]], "get() (graph method)": [[231, "opto.trace.nodes.Graph.get", false]], "get() (map method)": [[126, "opto.trace.containers.Map.get", false]], "get_attrs() (nodevizstyleguide method)": [[321, "opto.trace.nodes.NodeVizStyleGuide.get_attrs", false]], "get_attrs() (nodevizstyleguidecolorful method)": [[327, "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", false]], "get_border_color() (nodevizstyleguidecolorful method)": [[328, "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", false]], "get_color() (nodevizstyleguide method)": [[322, "opto.trace.nodes.NodeVizStyleGuide.get_color", false]], "get_color() (nodevizstyleguidecolorful method)": [[329, "opto.trace.nodes.NodeVizStyleGuideColorful.get_color", false]], "get_fun_name() (in module opto.optimizers.optoprime)": [[91, "opto.optimizers.optoprime.get_fun_name", false]], "get_label() (nodevizstyleguide method)": [[323, "opto.trace.nodes.NodeVizStyleGuide.get_label", false]], "get_label() (nodevizstyleguidecolorful method)": [[330, "opto.trace.nodes.NodeVizStyleGuideColorful.get_label", false]], "get_node_shape() (nodevizstyleguide method)": [[324, "opto.trace.nodes.NodeVizStyleGuide.get_node_shape", false]], "get_node_shape() (nodevizstyleguidecolorful method)": [[331, "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", false]], "get_op_name() (in module opto.trace.nodes)": [[375, "opto.trace.nodes.get_op_name", false]], "get_short_value() (in module opto.optimizers.textgrad)": [[112, "opto.optimizers.textgrad.get_short_value", false]], "get_style() (nodevizstyleguide method)": [[325, "opto.trace.nodes.NodeVizStyleGuide.get_style", false]], "get_style() (nodevizstyleguidecolorful method)": [[332, "opto.trace.nodes.NodeVizStyleGuideColorful.get_style", false]], "getattr() (exceptionnode method)": [[198, "opto.trace.nodes.ExceptionNode.getattr", false]], "getattr() (messagenode method)": [[248, "opto.trace.nodes.MessageNode.getattr", false]], "getattr() (node method)": [[292, "opto.trace.nodes.Node.getattr", false]], "getattr() (parameternode method)": [[347, "opto.trace.nodes.ParameterNode.getattr", false]], "gradient (gradientinfo attribute)": [[98, "opto.optimizers.textgrad.GradientInfo.gradient", false]], "gradient_context (gradientinfo attribute)": [[99, "opto.optimizers.textgrad.GradientInfo.gradient_context", false]], "gradient_multipart_template (in module opto.optimizers.textgrad)": [[95, "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", false]], "gradient_of_results_instruction (in module opto.optimizers.textgrad)": [[96, "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", false]], "gradientinfo (class in opto.optimizers.textgrad)": [[97, "opto.optimizers.textgrad.GradientInfo", false]], "graph (class in opto.trace.nodes)": [[228, "opto.trace.nodes.Graph", false]], "graph (functionfeedback attribute)": [[49, "opto.optimizers.optoprime.FunctionFeedback.graph", false]], "graph (tracegraph attribute)": [[389, "opto.trace.propagators.graph_propagator.TraceGraph.graph", false]], "graphpropagator (class in opto.trace.propagators.graph_propagator)": [[381, "opto.trace.propagators.graph_propagator.GraphPropagator", false]], "gt() (abstractnode method)": [[174, "opto.trace.nodes.AbstractNode.gt", false]], "gt() (exceptionnode method)": [[199, "opto.trace.nodes.ExceptionNode.gt", false]], "gt() (messagenode method)": [[249, "opto.trace.nodes.MessageNode.gt", false]], "gt() (node method)": [[293, "opto.trace.nodes.Node.gt", false]], "gt() (parameternode method)": [[348, "opto.trace.nodes.ParameterNode.gt", false]], "hidden_dependencies (exceptionnode property)": [[200, "opto.trace.nodes.ExceptionNode.hidden_dependencies", false]], "hidden_dependencies (messagenode property)": [[250, "opto.trace.nodes.MessageNode.hidden_dependencies", false]], "id (abstractnode property)": [[175, "opto.trace.nodes.AbstractNode.id", false]], "id (exceptionnode property)": [[201, "opto.trace.nodes.ExceptionNode.id", false]], "id (messagenode property)": [[251, "opto.trace.nodes.MessageNode.id", false]], "id (node property)": [[294, "opto.trace.nodes.Node.id", false]], "id (parameternode property)": [[349, "opto.trace.nodes.ParameterNode.id", false]], "identity() (in module opto.trace.operators)": [[378, "opto.trace.operators.identity", false]], "index() (seq method)": [[146, "opto.trace.containers.Seq.index", false]], "info (exceptionnode property)": [[202, "opto.trace.nodes.ExceptionNode.info", false]], "info (messagenode property)": [[252, "opto.trace.nodes.MessageNode.info", false]], "info (node property)": [[295, "opto.trace.nodes.Node.info", false]], "info (parameternode property)": [[350, "opto.trace.nodes.ParameterNode.info", false]], "init_feedback() (graphpropagator method)": [[383, "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", false]], "init_feedback() (propagator method)": [[397, "opto.trace.propagators.propagators.Propagator.init_feedback", false]], "init_feedback() (sumpropagator method)": [[401, "opto.trace.propagators.propagators.SumPropagator.init_feedback", false]], "inputs (exceptionnode property)": [[203, "opto.trace.nodes.ExceptionNode.inputs", false]], "inputs (messagenode property)": [[253, "opto.trace.nodes.MessageNode.inputs", false]], "inputs (probleminstance attribute)": [[85, "opto.optimizers.optoprime.ProblemInstance.inputs", false]], "insert() (seq method)": [[147, "opto.trace.containers.Seq.insert", false]], "instruction (probleminstance attribute)": [[86, "opto.optimizers.optoprime.ProblemInstance.instruction", false]], "is_leaf (abstractnode property)": [[176, "opto.trace.nodes.AbstractNode.is_leaf", false]], "is_leaf (exceptionnode property)": [[204, "opto.trace.nodes.ExceptionNode.is_leaf", false]], "is_leaf (messagenode property)": [[254, "opto.trace.nodes.MessageNode.is_leaf", false]], "is_leaf (node property)": [[296, "opto.trace.nodes.Node.is_leaf", false]], "is_leaf (parameternode property)": [[351, "opto.trace.nodes.ParameterNode.is_leaf", false]], "is_root (abstractnode property)": [[177, "opto.trace.nodes.AbstractNode.is_root", false]], "is_root (exceptionnode property)": [[205, "opto.trace.nodes.ExceptionNode.is_root", false]], "is_root (messagenode property)": [[255, "opto.trace.nodes.MessageNode.is_root", false]], "is_root (node property)": [[297, "opto.trace.nodes.Node.is_root", false]], "is_root (parameternode property)": [[352, "opto.trace.nodes.ParameterNode.is_root", false]], "items() (exceptionnode method)": [[206, "opto.trace.nodes.ExceptionNode.items", false]], "items() (map method)": [[127, "opto.trace.containers.Map.items", false]], "items() (messagenode method)": [[256, "opto.trace.nodes.MessageNode.items", false]], "items() (node method)": [[298, "opto.trace.nodes.Node.items", false]], "items() (parameternode method)": [[353, "opto.trace.nodes.ParameterNode.items", false]], "iterate() (in module opto.trace.iterators)": [[161, "opto.trace.iterators.iterate", false]], "join() (exceptionnode method)": [[207, "opto.trace.nodes.ExceptionNode.join", false]], "join() (messagenode method)": [[257, "opto.trace.nodes.MessageNode.join", false]], "join() (node method)": [[299, "opto.trace.nodes.Node.join", false]], "join() (parameternode method)": [[354, "opto.trace.nodes.ParameterNode.join", false]], "keys() (exceptionnode method)": [[208, "opto.trace.nodes.ExceptionNode.keys", false]], "keys() (map method)": [[128, "opto.trace.containers.Map.keys", false]], "keys() (messagenode method)": [[258, "opto.trace.nodes.MessageNode.keys", false]], "keys() (node method)": [[300, "opto.trace.nodes.Node.keys", false]], "keys() (parameternode method)": [[355, "opto.trace.nodes.ParameterNode.keys", false]], "len() (exceptionnode method)": [[209, "opto.trace.nodes.ExceptionNode.len", false]], "len() (messagenode method)": [[259, "opto.trace.nodes.MessageNode.len", false]], "len() (node method)": [[301, "opto.trace.nodes.Node.len", false]], "len() (parameternode method)": [[356, "opto.trace.nodes.ParameterNode.len", false]], "level (abstractnode property)": [[178, "opto.trace.nodes.AbstractNode.level", false]], "level (exceptionnode property)": [[210, "opto.trace.nodes.ExceptionNode.level", false]], "level (messagenode property)": [[260, "opto.trace.nodes.MessageNode.level", false]], "level (node property)": [[302, "opto.trace.nodes.Node.level", false]], "level (parameternode property)": [[357, "opto.trace.nodes.ParameterNode.level", false]], "load() (module method)": [[165, "opto.trace.modules.Module.load", false]], "lower() (exceptionnode method)": [[211, "opto.trace.nodes.ExceptionNode.lower", false]], "lower() (messagenode method)": [[261, "opto.trace.nodes.MessageNode.lower", false]], "lower() (node method)": [[303, "opto.trace.nodes.Node.lower", false]], "lower() (parameternode method)": [[358, "opto.trace.nodes.ParameterNode.lower", false]], "lt() (abstractnode method)": [[179, "opto.trace.nodes.AbstractNode.lt", false]], "lt() (exceptionnode method)": [[212, "opto.trace.nodes.ExceptionNode.lt", false]], "lt() (messagenode method)": [[262, "opto.trace.nodes.MessageNode.lt", false]], "lt() (node method)": [[304, "opto.trace.nodes.Node.lt", false]], "lt() (parameternode method)": [[359, "opto.trace.nodes.ParameterNode.lt", false]], "map (class in opto.trace.containers)": [[122, "opto.trace.containers.Map", false]], "messagenode (class in opto.trace.nodes)": [[234, "opto.trace.nodes.MessageNode", false]], "model (abstractmodel property)": [[417, "opto.utils.llm.AbstractModel.model", false]], "model (autogenllm property)": [[420, "opto.utils.llm.AutoGenLLM.model", false]], "model() (in module opto.trace.modules)": [[169, "opto.trace.modules.model", false]], "module": [[0, "module-opto", false], [1, "module-opto.optimizers", false], [2, "module-opto.optimizers.buffers", false], [5, "module-opto.optimizers.opro", false], [32, "module-opto.optimizers.optimizer", false], [46, "module-opto.optimizers.optoprime", false], [94, "module-opto.optimizers.textgrad", false], [114, "module-opto.optimizers.utils", false], [116, "module-opto.trace", false], [117, "module-opto.trace.broadcast", false], [120, "module-opto.trace.bundle", false], [121, "module-opto.trace.containers", false], [155, "module-opto.trace.errors", false], [158, "module-opto.trace.iterators", false], [162, "module-opto.trace.modules", false], [170, "module-opto.trace.nodes", false], [377, "module-opto.trace.operators", false], [379, "module-opto.trace.propagators", false], [380, "module-opto.trace.propagators.graph_propagator", false], [392, "module-opto.trace.propagators.propagators", false], [405, "module-opto.trace.utils", false], [414, "module-opto.utils", false], [415, "module-opto.utils.llm", false], [422, "module-opto.version", false]], "module (class in opto.trace.modules)": [[163, "opto.trace.modules.Module", false]], "name (abstractnode property)": [[180, "opto.trace.nodes.AbstractNode.name", false]], "name (exceptionnode property)": [[213, "opto.trace.nodes.ExceptionNode.name", false]], "name (messagenode property)": [[263, "opto.trace.nodes.MessageNode.name", false]], "name (node property)": [[305, "opto.trace.nodes.Node.name", false]], "name (parameternode property)": [[360, "opto.trace.nodes.ParameterNode.name", false]], "neq() (exceptionnode method)": [[214, "opto.trace.nodes.ExceptionNode.neq", false]], "neq() (messagenode method)": [[264, "opto.trace.nodes.MessageNode.neq", false]], "neq() (node method)": [[306, "opto.trace.nodes.Node.neq", false]], "neq() (parameternode method)": [[361, "opto.trace.nodes.ParameterNode.neq", false]], "node (class in opto.trace.nodes)": [[278, "opto.trace.nodes.Node", false]], "node() (in module opto.trace.nodes)": [[376, "opto.trace.nodes.node", false]], "node_to_function_feedback() (in module opto.optimizers.optoprime)": [[92, "opto.optimizers.optoprime.node_to_function_feedback", false]], "nodecontainer (class in opto.trace.containers)": [[136, "opto.trace.containers.NodeContainer", false]], "nodevizstyleguide (class in opto.trace.nodes)": [[320, "opto.trace.nodes.NodeVizStyleGuide", false]], "nodevizstyleguidecolorful (class in opto.trace.nodes)": [[326, "opto.trace.nodes.NodeVizStyleGuideColorful", false]], "opro (class in opto.optimizers.opro)": [[6, "opto.optimizers.opro.OPRO", false]], "optimizer (class in opto.optimizers.optimizer)": [[37, "opto.optimizers.optimizer.Optimizer", false]], "opto": [[0, "module-opto", false]], "opto.optimizers": [[1, "module-opto.optimizers", false]], "opto.optimizers.buffers": [[2, "module-opto.optimizers.buffers", false]], "opto.optimizers.opro": [[5, "module-opto.optimizers.opro", false]], "opto.optimizers.optimizer": [[32, "module-opto.optimizers.optimizer", false]], "opto.optimizers.optoprime": [[46, "module-opto.optimizers.optoprime", false]], "opto.optimizers.textgrad": [[94, "module-opto.optimizers.textgrad", false]], "opto.optimizers.utils": [[114, "module-opto.optimizers.utils", false]], "opto.trace": [[116, "module-opto.trace", false]], "opto.trace.broadcast": [[117, "module-opto.trace.broadcast", false]], "opto.trace.bundle": [[120, "module-opto.trace.bundle", false]], "opto.trace.containers": [[121, "module-opto.trace.containers", false]], "opto.trace.errors": [[155, "module-opto.trace.errors", false]], "opto.trace.iterators": [[158, "module-opto.trace.iterators", false]], "opto.trace.modules": [[162, "module-opto.trace.modules", false]], "opto.trace.nodes": [[170, "module-opto.trace.nodes", false]], "opto.trace.operators": [[377, "module-opto.trace.operators", false]], "opto.trace.propagators": [[379, "module-opto.trace.propagators", false]], "opto.trace.propagators.graph_propagator": [[380, "module-opto.trace.propagators.graph_propagator", false]], "opto.trace.propagators.propagators": [[392, "module-opto.trace.propagators.propagators", false]], "opto.trace.utils": [[405, "module-opto.trace.utils", false]], "opto.utils": [[414, "module-opto.utils", false]], "opto.utils.llm": [[415, "module-opto.utils.llm", false]], "opto.version": [[422, "module-opto.version", false]], "optoprime (class in opto.optimizers.optoprime)": [[54, "opto.optimizers.optoprime.OptoPrime", false]], "others (functionfeedback attribute)": [[50, "opto.optimizers.optoprime.FunctionFeedback.others", false]], "others (probleminstance attribute)": [[87, "opto.optimizers.optoprime.ProblemInstance.others", false]], "output (functionfeedback attribute)": [[51, "opto.optimizers.optoprime.FunctionFeedback.output", false]], "output_format_prompt (opro attribute)": [[18, "opto.optimizers.opro.OPRO.output_format_prompt", false]], "output_format_prompt (optoprime attribute)": [[66, "opto.optimizers.optoprime.OptoPrime.output_format_prompt", false]], "outputs (probleminstance attribute)": [[88, "opto.optimizers.optoprime.ProblemInstance.outputs", false]], "parameter_dependencies (exceptionnode property)": [[215, "opto.trace.nodes.ExceptionNode.parameter_dependencies", false]], "parameter_dependencies (messagenode property)": [[265, "opto.trace.nodes.MessageNode.parameter_dependencies", false]], "parameter_dependencies (node property)": [[307, "opto.trace.nodes.Node.parameter_dependencies", false]], "parameter_dependencies (parameternode property)": [[362, "opto.trace.nodes.ParameterNode.parameter_dependencies", false]], "parametercontainer (class in opto.trace.containers)": [[137, "opto.trace.containers.ParameterContainer", false]], "parameternode (class in opto.trace.nodes)": [[333, "opto.trace.nodes.ParameterNode", false]], "parameters() (map method)": [[129, "opto.trace.containers.Map.parameters", false]], "parameters() (module method)": [[166, "opto.trace.modules.Module.parameters", false]], "parameters() (parametercontainer method)": [[138, "opto.trace.containers.ParameterContainer.parameters", false]], "parameters() (seq method)": [[148, "opto.trace.containers.Seq.parameters", false]], "parameters_dict() (map method)": [[130, "opto.trace.containers.Map.parameters_dict", false]], "parameters_dict() (module method)": [[167, "opto.trace.modules.Module.parameters_dict", false]], "parameters_dict() (parametercontainer method)": [[139, "opto.trace.containers.ParameterContainer.parameters_dict", false]], "parameters_dict() (seq method)": [[149, "opto.trace.containers.Seq.parameters_dict", false]], "parents (abstractnode property)": [[181, "opto.trace.nodes.AbstractNode.parents", false]], "parents (exceptionnode property)": [[216, "opto.trace.nodes.ExceptionNode.parents", false]], "parents (messagenode property)": [[266, "opto.trace.nodes.MessageNode.parents", false]], "parents (node property)": [[308, "opto.trace.nodes.Node.parents", false]], "parents (parameternode property)": [[363, "opto.trace.nodes.ParameterNode.parents", false]], "parse_eqs_to_dict() (in module opto.trace.utils)": [[409, "opto.trace.utils.parse_eqs_to_dict", false]], "pop() (exceptionnode method)": [[217, "opto.trace.nodes.ExceptionNode.pop", false]], "pop() (map method)": [[131, "opto.trace.containers.Map.pop", false]], "pop() (messagenode method)": [[267, "opto.trace.nodes.MessageNode.pop", false]], "pop() (node method)": [[309, "opto.trace.nodes.Node.pop", false]], "pop() (parameternode method)": [[364, "opto.trace.nodes.ParameterNode.pop", false]], "pop() (seq method)": [[150, "opto.trace.containers.Seq.pop", false]], "popitem() (map method)": [[132, "opto.trace.containers.Map.popitem", false]], "print_color() (in module opto.optimizers.utils)": [[115, "opto.optimizers.utils.print_color", false]], "print_limit (nodevizstyleguide attribute)": [[320, "opto.trace.nodes.NodeVizStyleGuide.print_limit", false]], "print_limit (nodevizstyleguidecolorful attribute)": [[326, "opto.trace.nodes.NodeVizStyleGuideColorful.print_limit", false]], "problem_instance() (opro method)": [[19, "opto.optimizers.opro.OPRO.problem_instance", false]], "problem_instance() (optoprime method)": [[67, "opto.optimizers.optoprime.OptoPrime.problem_instance", false]], "problem_template (probleminstance attribute)": [[89, "opto.optimizers.optoprime.ProblemInstance.problem_template", false]], "probleminstance (class in opto.optimizers.optoprime)": [[80, "opto.optimizers.optoprime.ProblemInstance", false]], "propagate() (abstractpropagator method)": [[395, "opto.trace.propagators.propagators.AbstractPropagator.propagate", false]], "propagate() (graphpropagator method)": [[384, "opto.trace.propagators.graph_propagator.GraphPropagator.propagate", false]], "propagate() (propagator method)": [[398, "opto.trace.propagators.propagators.Propagator.propagate", false]], "propagate() (sumpropagator method)": [[402, "opto.trace.propagators.propagators.SumPropagator.propagate", false]], "propagator (abstractoptimizer property)": [[34, "opto.optimizers.optimizer.AbstractOptimizer.propagator", false]], "propagator (class in opto.trace.propagators.propagators)": [[396, "opto.trace.propagators.propagators.Propagator", false]], "propagator (opro property)": [[20, "opto.optimizers.opro.OPRO.propagator", false]], "propagator (optimizer property)": [[40, "opto.optimizers.optimizer.Optimizer.propagator", false]], "propagator (optoprime property)": [[68, "opto.optimizers.optoprime.OptoPrime.propagator", false]], "propagator (textgrad property)": [[104, "opto.optimizers.textgrad.TextGrad.propagator", false]], "propose() (opro method)": [[21, "opto.optimizers.opro.OPRO.propose", false]], "propose() (optimizer method)": [[41, "opto.optimizers.optimizer.Optimizer.propose", false]], "propose() (optoprime method)": [[69, "opto.optimizers.optoprime.OptoPrime.propose", false]], "propose() (textgrad method)": [[105, "opto.optimizers.textgrad.TextGrad.propose", false]], "py_name (abstractnode property)": [[182, "opto.trace.nodes.AbstractNode.py_name", false]], "py_name (exceptionnode property)": [[218, "opto.trace.nodes.ExceptionNode.py_name", false]], "py_name (messagenode property)": [[268, "opto.trace.nodes.MessageNode.py_name", false]], "py_name (node property)": [[310, "opto.trace.nodes.Node.py_name", false]], "py_name (parameternode property)": [[365, "opto.trace.nodes.ParameterNode.py_name", false]], "recursive_conversion() (in module opto.trace.broadcast)": [[119, "opto.trace.broadcast.recursive_conversion", false]], "register() (graph method)": [[232, "opto.trace.nodes.Graph.register", false]], "register() (graphpropagator method)": [[385, "opto.trace.propagators.graph_propagator.GraphPropagator.register", false]], "register() (propagator method)": [[399, "opto.trace.propagators.propagators.Propagator.register", false]], "register() (sumpropagator method)": [[403, "opto.trace.propagators.propagators.SumPropagator.register", false]], "remove() (seq method)": [[151, "opto.trace.containers.Seq.remove", false]], "remove_non_ascii() (in module opto.trace.utils)": [[410, "opto.trace.utils.remove_non_ascii", false]], "render_opt_step() (in module opto.trace.utils)": [[411, "opto.trace.utils.render_opt_step", false]], "replace() (exceptionnode method)": [[219, "opto.trace.nodes.ExceptionNode.replace", false]], "replace() (messagenode method)": [[269, "opto.trace.nodes.MessageNode.replace", false]], "replace() (node method)": [[311, "opto.trace.nodes.Node.replace", false]], "replace() (parameternode method)": [[366, "opto.trace.nodes.ParameterNode.replace", false]], "replace_symbols() (opro method)": [[22, "opto.optimizers.opro.OPRO.replace_symbols", false]], "replace_symbols() (optoprime method)": [[70, "opto.optimizers.optoprime.OptoPrime.replace_symbols", false]], "repr_function_call() (in module opto.optimizers.optoprime)": [[93, "opto.optimizers.optoprime.repr_function_call", false]], "repr_node_constraint() (opro static method)": [[23, "opto.optimizers.opro.OPRO.repr_node_constraint", false]], "repr_node_constraint() (optoprime static method)": [[71, "opto.optimizers.optoprime.OptoPrime.repr_node_constraint", false]], "repr_node_value() (opro static method)": [[24, "opto.optimizers.opro.OPRO.repr_node_value", false]], "repr_node_value() (optoprime static method)": [[72, "opto.optimizers.optoprime.OptoPrime.repr_node_value", false]], "representation_prompt (opro attribute)": [[25, "opto.optimizers.opro.OPRO.representation_prompt", false]], "representation_prompt (optoprime attribute)": [[73, "opto.optimizers.optoprime.OptoPrime.representation_prompt", false]], "reverse() (seq method)": [[152, "opto.trace.containers.Seq.reverse", false]], "rm_node_attrs() (in module opto.optimizers.textgrad)": [[113, "opto.optimizers.textgrad.rm_node_attrs", false]], "roots (functionfeedback attribute)": [[52, "opto.optimizers.optoprime.FunctionFeedback.roots", false]], "roots (graph property)": [[233, "opto.trace.nodes.Graph.roots", false]], "save() (module method)": [[168, "opto.trace.modules.Module.save", false]], "seq (class in opto.trace.containers)": [[140, "opto.trace.containers.Seq", false]], "seqiterable (class in opto.trace.iterators)": [[160, "opto.trace.iterators.SeqIterable", false]], "setdefault() (map method)": [[133, "opto.trace.containers.Map.setdefault", false]], "sort() (seq method)": [[153, "opto.trace.containers.Seq.sort", false]], "split() (exceptionnode method)": [[220, "opto.trace.nodes.ExceptionNode.split", false]], "split() (messagenode method)": [[270, "opto.trace.nodes.MessageNode.split", false]], "split() (node method)": [[312, "opto.trace.nodes.Node.split", false]], "split() (parameternode method)": [[367, "opto.trace.nodes.ParameterNode.split", false]], "step() (abstractoptimizer method)": [[35, "opto.optimizers.optimizer.AbstractOptimizer.step", false]], "step() (opro method)": [[26, "opto.optimizers.opro.OPRO.step", false]], "step() (optimizer method)": [[42, "opto.optimizers.optimizer.Optimizer.step", false]], "step() (optoprime method)": [[74, "opto.optimizers.optoprime.OptoPrime.step", false]], "step() (textgrad method)": [[106, "opto.optimizers.textgrad.TextGrad.step", false]], "stop_tracing (class in opto.trace)": [[404, "opto.trace.stop_tracing", false]], "strip() (exceptionnode method)": [[221, "opto.trace.nodes.ExceptionNode.strip", false]], "strip() (messagenode method)": [[271, "opto.trace.nodes.MessageNode.strip", false]], "strip() (node method)": [[313, "opto.trace.nodes.Node.strip", false]], "strip() (parameternode method)": [[368, "opto.trace.nodes.ParameterNode.strip", false]], "style (nodevizstyleguide attribute)": [[320, "opto.trace.nodes.NodeVizStyleGuide.style", false]], "style (nodevizstyleguidecolorful attribute)": [[326, "opto.trace.nodes.NodeVizStyleGuideColorful.style", false]], "sum_feedback() (in module opto.trace.utils)": [[412, "opto.trace.utils.sum_feedback", false]], "summarize() (opro method)": [[27, "opto.optimizers.opro.OPRO.summarize", false]], "summarize() (optoprime method)": [[75, "opto.optimizers.optoprime.OptoPrime.summarize", false]], "sumpropagator (class in opto.trace.propagators.propagators)": [[400, "opto.trace.propagators.propagators.SumPropagator", false]], "swapcase() (exceptionnode method)": [[222, "opto.trace.nodes.ExceptionNode.swapcase", false]], "swapcase() (messagenode method)": [[272, "opto.trace.nodes.MessageNode.swapcase", false]], "swapcase() (node method)": [[314, "opto.trace.nodes.Node.swapcase", false]], "swapcase() (parameternode method)": [[369, "opto.trace.nodes.ParameterNode.swapcase", false]], "test_json_quote_escaper() (in module opto.trace.utils)": [[413, "opto.trace.utils.test_json_quote_escaper", false]], "textgrad (class in opto.optimizers.textgrad)": [[100, "opto.optimizers.textgrad.TextGrad", false]], "title() (exceptionnode method)": [[223, "opto.trace.nodes.ExceptionNode.title", false]], "title() (messagenode method)": [[273, "opto.trace.nodes.MessageNode.title", false]], "title() (node method)": [[315, "opto.trace.nodes.Node.title", false]], "title() (parameternode method)": [[370, "opto.trace.nodes.ParameterNode.title", false]], "trace (graph attribute)": [[229, "opto.trace.nodes.Graph.TRACE", false]], "trace_graph (opro property)": [[28, "opto.optimizers.opro.OPRO.trace_graph", false]], "trace_graph (optimizer property)": [[43, "opto.optimizers.optimizer.Optimizer.trace_graph", false]], "trace_graph (optoprime property)": [[76, "opto.optimizers.optoprime.OptoPrime.trace_graph", false]], "trace_graph (textgrad property)": [[107, "opto.optimizers.textgrad.TextGrad.trace_graph", false]], "tracegraph (class in opto.trace.propagators.graph_propagator)": [[386, "opto.trace.propagators.graph_propagator.TraceGraph", false]], "tracemissinginputserror": [[157, "opto.trace.errors.TraceMissingInputsError", false]], "trainable (node attribute)": [[278, "opto.trace.nodes.Node.trainable", false]], "trainable_method() (in module opto.trace.containers)": [[154, "opto.trace.containers.trainable_method", false]], "type (exceptionnode property)": [[224, "opto.trace.nodes.ExceptionNode.type", false]], "type (messagenode property)": [[274, "opto.trace.nodes.MessageNode.type", false]], "type (node property)": [[316, "opto.trace.nodes.Node.type", false]], "type (parameternode property)": [[371, "opto.trace.nodes.ParameterNode.type", false]], "update() (map method)": [[134, "opto.trace.containers.Map.update", false]], "update() (opro method)": [[29, "opto.optimizers.opro.OPRO.update", false]], "update() (optimizer method)": [[44, "opto.optimizers.optimizer.Optimizer.update", false]], "update() (optoprime method)": [[77, "opto.optimizers.optoprime.OptoPrime.update", false]], "update() (textgrad method)": [[108, "opto.optimizers.textgrad.TextGrad.update", false]], "upper() (exceptionnode method)": [[225, "opto.trace.nodes.ExceptionNode.upper", false]], "upper() (messagenode method)": [[275, "opto.trace.nodes.MessageNode.upper", false]], "upper() (node method)": [[317, "opto.trace.nodes.Node.upper", false]], "upper() (parameternode method)": [[372, "opto.trace.nodes.ParameterNode.upper", false]], "user_feedback (functionfeedback attribute)": [[53, "opto.optimizers.optoprime.FunctionFeedback.user_feedback", false]], "user_feedback (tracegraph attribute)": [[390, "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", false]], "user_prompt_template (opro attribute)": [[30, "opto.optimizers.opro.OPRO.user_prompt_template", false]], "user_prompt_template (optoprime attribute)": [[78, "opto.optimizers.optoprime.OptoPrime.user_prompt_template", false]], "value (messagenode attribute)": [[234, "opto.trace.nodes.MessageNode.value", false]], "values() (exceptionnode method)": [[226, "opto.trace.nodes.ExceptionNode.values", false]], "values() (map method)": [[135, "opto.trace.containers.Map.values", false]], "values() (messagenode method)": [[276, "opto.trace.nodes.MessageNode.values", false]], "values() (node method)": [[318, "opto.trace.nodes.Node.values", false]], "values() (parameternode method)": [[373, "opto.trace.nodes.ParameterNode.values", false]], "variables (probleminstance attribute)": [[90, "opto.optimizers.optoprime.ProblemInstance.variables", false]], "visualize() (tracegraph method)": [[391, "opto.trace.propagators.graph_propagator.TraceGraph.visualize", false]], "zero_feedback() (abstractoptimizer method)": [[36, "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", false]], "zero_feedback() (exceptionnode method)": [[227, "opto.trace.nodes.ExceptionNode.zero_feedback", false]], "zero_feedback() (messagenode method)": [[277, "opto.trace.nodes.MessageNode.zero_feedback", false]], "zero_feedback() (node method)": [[319, "opto.trace.nodes.Node.zero_feedback", false]], "zero_feedback() (opro method)": [[31, "opto.optimizers.opro.OPRO.zero_feedback", false]], "zero_feedback() (optimizer method)": [[45, "opto.optimizers.optimizer.Optimizer.zero_feedback", false]], "zero_feedback() (optoprime method)": [[79, "opto.optimizers.optoprime.OptoPrime.zero_feedback", false]], "zero_feedback() (parameternode method)": [[374, "opto.trace.nodes.ParameterNode.zero_feedback", false]], "zero_feedback() (textgrad method)": [[109, "opto.optimizers.textgrad.TextGrad.zero_feedback", false]]}, "objects": {"": [[0, 0, 0, "-", "opto"]], "opto": [[1, 0, 0, "-", "optimizers"], [116, 0, 0, "-", "trace"], [414, 0, 0, "-", "utils"], [422, 0, 0, "-", "version"]], "opto.optimizers": [[2, 0, 0, "-", "buffers"], [5, 0, 0, "-", "opro"], [32, 0, 0, "-", "optimizer"], [46, 0, 0, "-", "optoprime"], [94, 0, 0, "-", "textgrad"], [114, 0, 0, "-", "utils"]], "opto.optimizers.buffers": [[3, 1, 1, "", "FIFOBuffer"]], "opto.optimizers.buffers.FIFOBuffer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [4, 2, 1, "", "add"]], "opto.optimizers.opro": [[6, 1, 1, "", "OPRO"]], "opto.optimizers.opro.OPRO": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [7, 2, 1, "", "backward"], [8, 2, 1, "", "call_llm"], [9, 2, 1, "", "construct_prompt"], [10, 2, 1, "", "construct_update_dict"], [11, 3, 1, "", "default_objective"], [12, 3, 1, "", "default_prompt_symbols"], [13, 2, 1, "", "default_propagator"], [14, 3, 1, "", "example_problem_template"], [15, 3, 1, "", "example_prompt"], [16, 2, 1, "", "extract_llm_suggestion"], [17, 3, 1, "", "final_prompt"], [18, 3, 1, "", "output_format_prompt"], [19, 2, 1, "", "problem_instance"], [20, 4, 1, "", "propagator"], [21, 2, 1, "", "propose"], [22, 2, 1, "", "replace_symbols"], [23, 2, 1, "", "repr_node_constraint"], [24, 2, 1, "", "repr_node_value"], [25, 3, 1, "", "representation_prompt"], [26, 2, 1, "", "step"], [27, 2, 1, "", "summarize"], [28, 4, 1, "", "trace_graph"], [29, 2, 1, "", "update"], [30, 3, 1, "", "user_prompt_template"], [31, 2, 1, "", "zero_feedback"]], "opto.optimizers.optimizer": [[33, 1, 1, "", "AbstractOptimizer"], [37, 1, 1, "", "Optimizer"]], "opto.optimizers.optimizer.AbstractOptimizer": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "__new__"], [34, 4, 1, "", "propagator"], [35, 2, 1, "", "step"], [36, 2, 1, "", "zero_feedback"]], "opto.optimizers.optimizer.Optimizer": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "__new__"], [38, 2, 1, "", "backward"], [39, 2, 1, "", "default_propagator"], [40, 4, 1, "", "propagator"], [41, 2, 1, "", "propose"], [42, 2, 1, "", "step"], [43, 4, 1, "", "trace_graph"], [44, 2, 1, "", "update"], [45, 2, 1, "", "zero_feedback"]], "opto.optimizers.optoprime": [[47, 1, 1, "", "FunctionFeedback"], [54, 1, 1, "", "OptoPrime"], [80, 1, 1, "", "ProblemInstance"], [91, 5, 1, "", "get_fun_name"], [92, 5, 1, "", "node_to_function_feedback"], [93, 5, 1, "", "repr_function_call"]], "opto.optimizers.optoprime.FunctionFeedback": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "__new__"], [48, 3, 1, "", "documentation"], [49, 3, 1, "", "graph"], [50, 3, 1, "", "others"], [51, 3, 1, "", "output"], [52, 3, 1, "", "roots"], [53, 3, 1, "", "user_feedback"]], "opto.optimizers.optoprime.OptoPrime": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "__new__"], [55, 2, 1, "", "backward"], [56, 2, 1, "", "call_llm"], [57, 2, 1, "", "construct_prompt"], [58, 2, 1, "", "construct_update_dict"], [59, 3, 1, "", "default_objective"], [60, 3, 1, "", "default_prompt_symbols"], [61, 2, 1, "", "default_propagator"], [62, 3, 1, "", "example_problem_template"], [63, 3, 1, "", "example_prompt"], [64, 2, 1, "", "extract_llm_suggestion"], [65, 3, 1, "", "final_prompt"], [66, 3, 1, "", "output_format_prompt"], [67, 2, 1, "", "problem_instance"], [68, 4, 1, "", "propagator"], [69, 2, 1, "", "propose"], [70, 2, 1, "", "replace_symbols"], [71, 2, 1, "", "repr_node_constraint"], [72, 2, 1, "", "repr_node_value"], [73, 3, 1, "", "representation_prompt"], [74, 2, 1, "", "step"], [75, 2, 1, "", "summarize"], [76, 4, 1, "", "trace_graph"], [77, 2, 1, "", "update"], [78, 3, 1, "", "user_prompt_template"], [79, 2, 1, "", "zero_feedback"]], "opto.optimizers.optoprime.ProblemInstance": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"], [81, 3, 1, "", "code"], [82, 3, 1, "", "constraints"], [83, 3, 1, "", "documentation"], [84, 3, 1, "", "feedback"], [85, 3, 1, "", "inputs"], [86, 3, 1, "", "instruction"], [87, 3, 1, "", "others"], [88, 3, 1, "", "outputs"], [89, 3, 1, "", "problem_template"], [90, 3, 1, "", "variables"]], "opto.optimizers.textgrad": [[95, 6, 1, "", "GRADIENT_MULTIPART_TEMPLATE"], [96, 6, 1, "", "GRADIENT_OF_RESULTS_INSTRUCTION"], [97, 1, 1, "", "GradientInfo"], [100, 1, 1, "", "TextGrad"], [110, 5, 1, "", "construct_reduce_prompt"], [111, 5, 1, "", "construct_tgd_prompt"], [112, 5, 1, "", "get_short_value"], [113, 5, 1, "", "rm_node_attrs"]], "opto.optimizers.textgrad.GradientInfo": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__new__"], [98, 3, 1, "", "gradient"], [99, 3, 1, "", "gradient_context"]], "opto.optimizers.textgrad.TextGrad": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "__new__"], [101, 2, 1, "", "backward"], [102, 2, 1, "", "call_llm"], [103, 2, 1, "", "default_propagator"], [104, 4, 1, "", "propagator"], [105, 2, 1, "", "propose"], [106, 2, 1, "", "step"], [107, 4, 1, "", "trace_graph"], [108, 2, 1, "", "update"], [109, 2, 1, "", "zero_feedback"]], "opto.optimizers.utils": [[115, 5, 1, "", "print_color"]], "opto.trace": [[117, 0, 0, "-", "broadcast"], [120, 0, 0, "-", "bundle"], [121, 0, 0, "-", "containers"], [155, 0, 0, "-", "errors"], [158, 0, 0, "-", "iterators"], [162, 0, 0, "-", "modules"], [170, 0, 0, "-", "nodes"], [377, 0, 0, "-", "operators"], [379, 0, 0, "-", "propagators"], [404, 1, 1, "", "stop_tracing"], [405, 0, 0, "-", "utils"]], "opto.trace.broadcast": [[118, 5, 1, "", "apply_op"], [119, 5, 1, "", "recursive_conversion"]], "opto.trace.containers": [[122, 1, 1, "", "Map"], [136, 1, 1, "", "NodeContainer"], [137, 1, 1, "", "ParameterContainer"], [140, 1, 1, "", "Seq"], [154, 5, 1, "", "trainable_method"]], "opto.trace.containers.Map": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "__new__"], [123, 2, 1, "", "clear"], [124, 2, 1, "", "copy"], [125, 2, 1, "", "fromkeys"], [126, 2, 1, "", "get"], [127, 2, 1, "", "items"], [128, 2, 1, "", "keys"], [129, 2, 1, "", "parameters"], [130, 2, 1, "", "parameters_dict"], [131, 2, 1, "", "pop"], [132, 2, 1, "", "popitem"], [133, 2, 1, "", "setdefault"], [134, 2, 1, "", "update"], [135, 2, 1, "", "values"]], "opto.trace.containers.NodeContainer": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "__new__"]], "opto.trace.containers.ParameterContainer": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "__new__"], [138, 2, 1, "", "parameters"], [139, 2, 1, "", "parameters_dict"]], "opto.trace.containers.Seq": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "__new__"], [141, 2, 1, "", "append"], [142, 2, 1, "", "clear"], [143, 2, 1, "", "copy"], [144, 2, 1, "", "count"], [145, 2, 1, "", "extend"], [146, 2, 1, "", "index"], [147, 2, 1, "", "insert"], [148, 2, 1, "", "parameters"], [149, 2, 1, "", "parameters_dict"], [150, 2, 1, "", "pop"], [151, 2, 1, "", "remove"], [152, 2, 1, "", "reverse"], [153, 2, 1, "", "sort"]], "opto.trace.errors": [[156, 7, 1, "", "ExecutionError"], [157, 7, 1, "", "TraceMissingInputsError"]], "opto.trace.errors.ExecutionError": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "__new__"]], "opto.trace.errors.TraceMissingInputsError": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "__new__"]], "opto.trace.iterators": [[159, 1, 1, "", "DictIterable"], [160, 1, 1, "", "SeqIterable"], [161, 5, 1, "", "iterate"]], "opto.trace.iterators.DictIterable": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "__new__"]], "opto.trace.iterators.SeqIterable": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "__new__"]], "opto.trace.modules": [[163, 1, 1, "", "Module"], [169, 5, 1, "", "model"]], "opto.trace.modules.Module": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "__new__"], [164, 2, 1, "", "forward"], [165, 2, 1, "", "load"], [166, 2, 1, "", "parameters"], [167, 2, 1, "", "parameters_dict"], [168, 2, 1, "", "save"]], "opto.trace.nodes": [[171, 1, 1, "", "AbstractNode"], [183, 1, 1, "", "ExceptionNode"], [228, 1, 1, "", "Graph"], [234, 1, 1, "", "MessageNode"], [278, 1, 1, "", "Node"], [320, 1, 1, "", "NodeVizStyleGuide"], [326, 1, 1, "", "NodeVizStyleGuideColorful"], [333, 1, 1, "", "ParameterNode"], [375, 5, 1, "", "get_op_name"], [376, 5, 1, "", "node"]], "opto.trace.nodes.AbstractNode": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "__new__"], [172, 4, 1, "", "children"], [173, 4, 1, "", "data"], [174, 2, 1, "", "gt"], [175, 4, 1, "", "id"], [176, 4, 1, "", "is_leaf"], [177, 4, 1, "", "is_root"], [178, 4, 1, "", "level"], [179, 2, 1, "", "lt"], [180, 4, 1, "", "name"], [181, 4, 1, "", "parents"], [182, 4, 1, "", "py_name"]], "opto.trace.nodes.ExceptionNode": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "__new__"], [184, 2, 1, "", "append"], [185, 2, 1, "", "backward"], [186, 2, 1, "", "call"], [187, 2, 1, "", "capitalize"], [188, 4, 1, "", "children"], [189, 2, 1, "", "clone"], [190, 2, 1, "", "create_feedback"], [191, 4, 1, "", "data"], [192, 4, 1, "", "description"], [193, 2, 1, "", "detach"], [194, 2, 1, "", "eq"], [195, 4, 1, "", "expandable_dependencies"], [196, 4, 1, "", "feedback"], [197, 2, 1, "", "format"], [198, 2, 1, "", "getattr"], [199, 2, 1, "", "gt"], [200, 4, 1, "", "hidden_dependencies"], [201, 4, 1, "", "id"], [202, 4, 1, "", "info"], [203, 4, 1, "", "inputs"], [204, 4, 1, "", "is_leaf"], [205, 4, 1, "", "is_root"], [206, 2, 1, "", "items"], [207, 2, 1, "", "join"], [208, 2, 1, "", "keys"], [209, 2, 1, "", "len"], [210, 4, 1, "", "level"], [211, 2, 1, "", "lower"], [212, 2, 1, "", "lt"], [213, 4, 1, "", "name"], [214, 2, 1, "", "neq"], [215, 4, 1, "", "parameter_dependencies"], [216, 4, 1, "", "parents"], [217, 2, 1, "", "pop"], [218, 4, 1, "", "py_name"], [219, 2, 1, "", "replace"], [220, 2, 1, "", "split"], [221, 2, 1, "", "strip"], [222, 2, 1, "", "swapcase"], [223, 2, 1, "", "title"], [224, 4, 1, "", "type"], [225, 2, 1, "", "upper"], [226, 2, 1, "", "values"], [227, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.Graph": [[229, 3, 1, "", "TRACE"], [228, 2, 1, "", "__init__"], [228, 2, 1, "", "__new__"], [228, 3, 1, "", "_nodes"], [230, 2, 1, "", "clear"], [231, 2, 1, "", "get"], [232, 2, 1, "", "register"], [233, 4, 1, "", "roots"]], "opto.trace.nodes.MessageNode": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "__new__"], [235, 2, 1, "", "append"], [236, 2, 1, "", "backward"], [237, 2, 1, "", "call"], [238, 2, 1, "", "capitalize"], [239, 4, 1, "", "children"], [240, 2, 1, "", "clone"], [241, 4, 1, "", "data"], [242, 4, 1, "", "description"], [243, 2, 1, "", "detach"], [244, 2, 1, "", "eq"], [245, 4, 1, "", "expandable_dependencies"], [246, 4, 1, "", "feedback"], [247, 2, 1, "", "format"], [248, 2, 1, "", "getattr"], [249, 2, 1, "", "gt"], [250, 4, 1, "", "hidden_dependencies"], [251, 4, 1, "", "id"], [252, 4, 1, "", "info"], [253, 4, 1, "", "inputs"], [254, 4, 1, "", "is_leaf"], [255, 4, 1, "", "is_root"], [256, 2, 1, "", "items"], [257, 2, 1, "", "join"], [258, 2, 1, "", "keys"], [259, 2, 1, "", "len"], [260, 4, 1, "", "level"], [261, 2, 1, "", "lower"], [262, 2, 1, "", "lt"], [263, 4, 1, "", "name"], [264, 2, 1, "", "neq"], [265, 4, 1, "", "parameter_dependencies"], [266, 4, 1, "", "parents"], [267, 2, 1, "", "pop"], [268, 4, 1, "", "py_name"], [269, 2, 1, "", "replace"], [270, 2, 1, "", "split"], [271, 2, 1, "", "strip"], [272, 2, 1, "", "swapcase"], [273, 2, 1, "", "title"], [274, 4, 1, "", "type"], [275, 2, 1, "", "upper"], [234, 3, 1, "", "value"], [276, 2, 1, "", "values"], [277, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.Node": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "__new__"], [278, 3, 1, "", "_backwarded"], [278, 3, 1, "", "_constraint"], [278, 3, 1, "", "_dependencies"], [278, 3, 1, "", "_description"], [278, 3, 1, "", "_feedback"], [278, 3, 1, "", "_info"], [279, 2, 1, "", "append"], [280, 2, 1, "", "backward"], [281, 2, 1, "", "call"], [282, 2, 1, "", "capitalize"], [283, 4, 1, "", "children"], [284, 2, 1, "", "clone"], [285, 4, 1, "", "data"], [286, 4, 1, "", "description"], [287, 2, 1, "", "detach"], [288, 2, 1, "", "eq"], [289, 4, 1, "", "expandable_dependencies"], [290, 4, 1, "", "feedback"], [291, 2, 1, "", "format"], [292, 2, 1, "", "getattr"], [293, 2, 1, "", "gt"], [294, 4, 1, "", "id"], [295, 4, 1, "", "info"], [296, 4, 1, "", "is_leaf"], [297, 4, 1, "", "is_root"], [298, 2, 1, "", "items"], [299, 2, 1, "", "join"], [300, 2, 1, "", "keys"], [301, 2, 1, "", "len"], [302, 4, 1, "", "level"], [303, 2, 1, "", "lower"], [304, 2, 1, "", "lt"], [305, 4, 1, "", "name"], [306, 2, 1, "", "neq"], [307, 4, 1, "", "parameter_dependencies"], [308, 4, 1, "", "parents"], [309, 2, 1, "", "pop"], [310, 4, 1, "", "py_name"], [311, 2, 1, "", "replace"], [312, 2, 1, "", "split"], [313, 2, 1, "", "strip"], [314, 2, 1, "", "swapcase"], [315, 2, 1, "", "title"], [278, 3, 1, "", "trainable"], [316, 4, 1, "", "type"], [317, 2, 1, "", "upper"], [318, 2, 1, "", "values"], [319, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.NodeVizStyleGuide": [[320, 2, 1, "", "__init__"], [320, 2, 1, "", "__new__"], [321, 2, 1, "", "get_attrs"], [322, 2, 1, "", "get_color"], [323, 2, 1, "", "get_label"], [324, 2, 1, "", "get_node_shape"], [325, 2, 1, "", "get_style"], [320, 3, 1, "", "print_limit"], [320, 3, 1, "", "style"]], "opto.trace.nodes.NodeVizStyleGuideColorful": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "__new__"], [327, 2, 1, "", "get_attrs"], [328, 2, 1, "", "get_border_color"], [329, 2, 1, "", "get_color"], [330, 2, 1, "", "get_label"], [331, 2, 1, "", "get_node_shape"], [332, 2, 1, "", "get_style"], [326, 3, 1, "", "print_limit"], [326, 3, 1, "", "style"]], "opto.trace.nodes.ParameterNode": [[333, 2, 1, "", "__init__"], [333, 2, 1, "", "__new__"], [334, 2, 1, "", "append"], [335, 2, 1, "", "backward"], [336, 2, 1, "", "call"], [337, 2, 1, "", "capitalize"], [338, 4, 1, "", "children"], [339, 2, 1, "", "clone"], [340, 4, 1, "", "data"], [341, 4, 1, "", "description"], [342, 2, 1, "", "detach"], [343, 2, 1, "", "eq"], [344, 4, 1, "", "expandable_dependencies"], [345, 4, 1, "", "feedback"], [346, 2, 1, "", "format"], [347, 2, 1, "", "getattr"], [348, 2, 1, "", "gt"], [349, 4, 1, "", "id"], [350, 4, 1, "", "info"], [351, 4, 1, "", "is_leaf"], [352, 4, 1, "", "is_root"], [353, 2, 1, "", "items"], [354, 2, 1, "", "join"], [355, 2, 1, "", "keys"], [356, 2, 1, "", "len"], [357, 4, 1, "", "level"], [358, 2, 1, "", "lower"], [359, 2, 1, "", "lt"], [360, 4, 1, "", "name"], [361, 2, 1, "", "neq"], [362, 4, 1, "", "parameter_dependencies"], [363, 4, 1, "", "parents"], [364, 2, 1, "", "pop"], [365, 4, 1, "", "py_name"], [366, 2, 1, "", "replace"], [367, 2, 1, "", "split"], [368, 2, 1, "", "strip"], [369, 2, 1, "", "swapcase"], [370, 2, 1, "", "title"], [371, 4, 1, "", "type"], [372, 2, 1, "", "upper"], [373, 2, 1, "", "values"], [374, 2, 1, "", "zero_feedback"]], "opto.trace.operators": [[378, 5, 1, "", "identity"]], "opto.trace.propagators": [[380, 0, 0, "-", "graph_propagator"], [392, 0, 0, "-", "propagators"]], "opto.trace.propagators.graph_propagator": [[381, 1, 1, "", "GraphPropagator"], [386, 1, 1, "", "TraceGraph"]], "opto.trace.propagators.graph_propagator.GraphPropagator": [[381, 2, 1, "", "__init__"], [381, 2, 1, "", "__new__"], [382, 2, 1, "", "aggregate"], [383, 2, 1, "", "init_feedback"], [384, 2, 1, "", "propagate"], [385, 2, 1, "", "register"]], "opto.trace.propagators.graph_propagator.TraceGraph": [[386, 2, 1, "", "__init__"], [386, 2, 1, "", "__new__"], [387, 2, 1, "", "empty"], [388, 2, 1, "", "expand"], [389, 3, 1, "", "graph"], [390, 3, 1, "", "user_feedback"], [391, 2, 1, "", "visualize"]], "opto.trace.propagators.propagators": [[393, 1, 1, "", "AbstractFeedback"], [394, 1, 1, "", "AbstractPropagator"], [396, 1, 1, "", "Propagator"], [400, 1, 1, "", "SumPropagator"]], "opto.trace.propagators.propagators.AbstractFeedback": [[393, 2, 1, "", "__init__"], [393, 2, 1, "", "__new__"]], "opto.trace.propagators.propagators.AbstractPropagator": [[394, 2, 1, "", "__init__"], [394, 2, 1, "", "__new__"], [395, 2, 1, "", "propagate"]], "opto.trace.propagators.propagators.Propagator": [[396, 2, 1, "", "__init__"], [396, 2, 1, "", "__new__"], [397, 2, 1, "", "init_feedback"], [398, 2, 1, "", "propagate"], [399, 2, 1, "", "register"]], "opto.trace.propagators.propagators.SumPropagator": [[400, 2, 1, "", "__init__"], [400, 2, 1, "", "__new__"], [401, 2, 1, "", "init_feedback"], [402, 2, 1, "", "propagate"], [403, 2, 1, "", "register"]], "opto.trace.stop_tracing": [[404, 2, 1, "", "__init__"], [404, 2, 1, "", "__new__"]], "opto.trace.utils": [[406, 5, 1, "", "contain"], [407, 5, 1, "", "escape_json_nested_quotes"], [408, 5, 1, "", "for_all_methods"], [409, 5, 1, "", "parse_eqs_to_dict"], [410, 5, 1, "", "remove_non_ascii"], [411, 5, 1, "", "render_opt_step"], [412, 5, 1, "", "sum_feedback"], [413, 5, 1, "", "test_json_quote_escaper"]], "opto.utils": [[415, 0, 0, "-", "llm"]], "opto.utils.llm": [[416, 1, 1, "", "AbstractModel"], [418, 1, 1, "", "AutoGenLLM"], [421, 5, 1, "", "auto_construct_oai_config_list_from_env"]], "opto.utils.llm.AbstractModel": [[416, 2, 1, "", "__init__"], [416, 2, 1, "", "__new__"], [417, 4, 1, "", "model"]], "opto.utils.llm.AutoGenLLM": [[418, 2, 1, "", "__init__"], [418, 2, 1, "", "__new__"], [419, 2, 1, "", "create"], [420, 4, 1, "", "model"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data", "7": "py:exception"}, "terms": {"": [25, 73, 122, 127, 128, 129, 135, 138, 140, 141, 142, 145, 147, 148, 151, 152, 166, 171, 174, 175, 179, 180, 185, 199, 201, 212, 213, 236, 249, 251, 262, 263, 280, 293, 294, 304, 305, 321, 323, 327, 330, 335, 348, 349, 359, 360, 418, 419, 424, 425, 426, 427, 428, 429, 432, 434, 435, 436, 437, 438], "0": [54, 171, 178, 210, 232, 260, 302, 357, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "00": [426, 438], "005": 438, "0050": 438, "01": [419, 438], "0100": 438, "0125": [425, 427], "01701570386908862": 424, "02": 419, "037500000000001": 437, "04": 427, "04321208107251127": 424, "04434824362397194": 435, "046178679913282394": 435, "05": [427, 438], "0500": 438, "06": 428, "06207482910694713": 427, "06279093772172928": 435, "0648590698838234": 435, "065": 438, "0650": 438, "07": [427, 438], "0700": 438, "072": 438, "0720": 438, "075": 438, "0750": 438, "08542013551374739": 427, "09292582122656425": 427, "0m": 427, "0x7f4bd428a410": 426, "0x7f6d1d53d810": 424, "0x7f991e677d00": 434, "0x7f99340f9cc0": 434, "0x7f99340fa770": 434, "0x7f99341e7760": 434, "1": [66, 217, 219, 220, 234, 267, 269, 270, 309, 311, 312, 364, 366, 367, 407, 409, 424, 425, 426, 427, 431, 432, 433, 434, 436, 437, 438], "10": [112, 425, 426, 427, 428, 432, 433, 435, 436, 437, 438], "100": [185, 236, 280, 320, 326, 335, 391, 426, 427, 438], "1000": 438, "10000": 438, "101": 436, "1024": 426, "105": 433, "1060161998875906": 427, "10650121803495348": 427, "109": 433, "11": [425, 427, 433, 434, 436, 437], "12": [425, 427, 436, 437, 438], "120": 437, "1200000047683716": 435, "122": 437, "13": [425, 427, 437], "131": 427, "14": [427, 437], "143": 425, "15": [425, 427, 432, 434, 437], "150000000000002": 437, "15523541800098087": 424, "159": 427, "16": 427, "17": [426, 427, 433, 437, 438], "172": 433, "18": [427, 437], "19": 427, "19735687971115112": 435, "2": [66, 132, 407, 409, 424, 425, 426, 427, 428, 431, 432, 433, 434, 436, 437, 438], "20": [425, 427, 432, 437, 438], "200": 425, "20000": 438, "2022": 437, "2024": [419, 428, 433, 437], "21": [426, 427], "210": 433, "2100000000000002": 436, "2122009999999999": 436, "216": 433, "22": [425, 427], "23": [424, 427, 437], "2321000000000002": 436, "24": [424, 427, 437, 438], "240": 427, "25": [424, 427, 431], "250": [425, 426], "2544000000000002": 436, "26": [427, 437], "267": 433, "268": 433, "27": [427, 437, 438], "28": [425, 427, 438], "29": 427, "2f": 438, "3": [66, 421, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "30": [427, 428, 437, 438], "311": 427, "3125": 437, "32": [427, 437], "33": 425, "3333333333333333": 434, "33mwarn": 427, "35": 425, "36": 427, "36093443632125854": 435, "37": [427, 437], "38": 427, "3x": 428, "4": [421, 424, 425, 426, 427, 431, 432, 434, 435, 436, 437, 438], "40": 421, "40783": 426, "4096": [8, 54, 56, 100], "42": [425, 427], "427": 437, "44": 436, "449999999999999": 437, "45833333": 424, "47826087": 424, "4788647342995169": 424, "4888888888888889": 424, "4f": 438, "5": [421, 424, 425, 426, 427, 432, 434, 435, 436, 437, 438], "50": [433, 438], "51": 438, "52": 437, "54": 425, "55": 424, "56": 438, "5628820061683655": 435, "57894737": 424, "6": [426, 427, 432, 434, 435, 436, 437, 438], "60": 432, "62": 438, "6344540280467054": 424, "64": 438, "66": 437, "68": 427, "7": [425, 427, 432, 433, 434, 435, 436, 437, 438], "712": 433, "72": 438, "73": [425, 438], "75": 433, "76": 438, "77": 433, "79": 433, "8": [426, 427, 432, 433, 434, 435, 436, 437, 438], "80": [433, 437], "81": 438, "8122000098228455": 435, "8125": 437, "83": 438, "84": 438, "84615385": 424, "85": [437, 438], "86": 438, "866826140399557": 427, "87": 438, "88": [425, 427, 438], "9": [427, 435, 436, 437, 438], "92": 438, "94": 438, "95": 438, "97": 438, "A": [118, 137, 183, 185, 189, 192, 193, 194, 198, 209, 214, 231, 233, 234, 236, 240, 242, 243, 244, 248, 259, 264, 278, 280, 284, 286, 287, 288, 292, 301, 306, 320, 326, 333, 335, 339, 341, 342, 343, 347, 356, 361, 375, 376, 381, 404, 407, 416, 418, 419, 425, 426, 427, 429, 431, 433, 434, 437, 438], "As": [426, 427, 432, 433], "Be": 433, "But": [427, 431], "By": [426, 432, 435, 438], "For": [96, 185, 236, 280, 335, 418, 429, 431, 432, 433, 434, 437], "IN": 152, "If": [131, 134, 171, 173, 185, 191, 194, 214, 232, 236, 241, 244, 264, 280, 285, 288, 306, 323, 330, 335, 340, 343, 361, 375, 376, 416, 418, 419, 421, 424, 425, 426, 427, 431, 432, 433, 434, 436, 437, 438], "In": [134, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "It": [180, 213, 227, 228, 263, 277, 278, 305, 319, 360, 374, 393, 418, 419, 424, 426, 427, 428, 429, 431, 432, 434, 438], "Its": 434, "No": [419, 425, 426, 427, 434], "Not": 436, "Of": 432, "One": 438, "THESE": 425, "The": [25, 73, 95, 111, 112, 130, 139, 149, 167, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 194, 195, 196, 198, 199, 201, 210, 212, 213, 214, 215, 216, 218, 224, 228, 230, 231, 232, 234, 236, 237, 239, 241, 244, 245, 246, 248, 249, 251, 260, 262, 263, 264, 265, 266, 268, 274, 278, 280, 281, 283, 285, 288, 289, 290, 292, 293, 294, 302, 304, 305, 306, 307, 308, 310, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 340, 343, 344, 345, 347, 348, 349, 357, 359, 360, 361, 362, 363, 365, 371, 375, 376, 416, 418, 419, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438], "Then": [427, 431, 432], "These": [111, 429], "To": [323, 330, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438], "With": 433, "_": [424, 432, 433, 435, 436], "__add__": 434, "__bool__": 434, "__call__": [424, 429, 432, 433], "__code": [424, 426, 431, 432, 437, 438], "__code0": [424, 426, 427, 431, 432], "__code1": [424, 426, 432, 437], "__deepcopy__": 171, "__init__": [3, 6, 33, 37, 47, 54, 80, 97, 100, 122, 136, 137, 140, 156, 157, 159, 160, 163, 171, 183, 228, 234, 278, 320, 326, 333, 381, 386, 393, 394, 396, 400, 404, 416, 418, 424, 426, 427, 429, 433, 434, 435], "__main__": [424, 434], "__new__": [3, 6, 33, 37, 47, 54, 80, 97, 100, 122, 136, 137, 140, 156, 157, 159, 160, 163, 171, 183, 228, 234, 278, 320, 326, 333, 381, 386, 393, 394, 396, 400, 404, 416, 418], "__str__": 171, "_add_child": 171, "_add_par": 171, "_backward": 278, "_constraint": 278, "_data": [171, 173, 191, 241, 285, 340], "_depend": [195, 215, 245, 265, 278, 289, 307, 344, 362], "_descript": 278, "_factori": 418, "_feedback": 278, "_info": 278, "_level": [174, 179, 199, 212, 249, 262, 293, 304, 348, 359], "_name": [171, 232], "_node": [180, 213, 228, 230, 231, 232, 263, 305, 360], "_node__index": [217, 267, 309, 364], "_propag": 435, "_step": 435, "a1": [431, 432], "a10": 432, "a2": 432, "a3": 432, "a4": 432, "a5": 432, "a6": 432, "a7": 432, "a8": 432, "a9": 432, "ab": [427, 435], "abc_test1": 409, "abcdefgh": 432, "abil": [430, 438], "about": [25, 66, 73, 183, 202, 234, 252, 278, 295, 333, 350, 424, 426, 427, 428, 432, 433, 436, 437, 438], "abov": [95, 431, 433, 435, 438], "absolut": [427, 432], "abspath": 432, "abstract": [171, 416, 434], "abstractnod": 278, "accept": [425, 436], "accept_trad": 425, "access": [171, 172, 188, 239, 283, 338, 424, 426, 427, 432, 433, 434, 438], "accomplish": [427, 433], "accomplishinh": 427, "accord": [11, 59, 424, 426, 427, 432, 433, 434, 435, 436, 437, 438], "accordingli": 438, "account": 427, "accumul": [96, 435], "accur": [426, 427, 432], "accuraci": [426, 438], "achiev": [427, 431, 432, 433, 438], "across": [427, 433, 434], "act": [424, 432, 433], "action": [424, 425, 426, 427, 433], "action_spac": 427, "activ": [427, 432], "actual": [419, 427, 428, 431, 432, 433, 438], "acycl": [228, 434], "ad": 434, "adapt": [427, 429], "add": [171, 173, 191, 232, 234, 241, 285, 340, 427, 432, 433, 434, 438], "add0": 438, "addit": [111, 183, 202, 234, 252, 278, 295, 333, 350, 393, 419, 426, 427, 432, 434], "addition": [427, 433], "address": [426, 436], "adequ": 427, "adjac": [424, 432], "adjust": [424, 426, 427, 432, 438], "adopt": 429, "advanc": 424, "advantag": [424, 432], "advic": 427, "affect": 230, "after": [175, 185, 201, 227, 230, 232, 236, 251, 277, 280, 294, 319, 335, 349, 374, 416, 418, 426, 427, 429, 432, 433, 435, 438], "again": [432, 438], "against": [174, 179, 199, 212, 249, 262, 293, 304, 348, 359, 431], "agent": [419, 429], "agent1": 433, "agent2": 433, "agent_1": 433, "agent_2": 433, "agent_goal_desc": 433, "agent_goal_spec": 433, "agent_info": 433, "agent_ob": 433, "agent_obs_desc": 433, "agentchat": 437, "aggreg": [28, 43, 76, 107, 278, 412, 435], "aggress": 432, "agre": 431, "ai": 429, "aim": [426, 427, 432], "al": 433, "algorithm": [25, 73, 424, 426, 427, 428, 432, 435, 436, 437, 438], "alic": 425, "align": [426, 427, 432], "all": [28, 43, 76, 107, 123, 129, 130, 138, 139, 142, 148, 149, 166, 167, 228, 230, 233, 278, 381, 408, 419, 425, 427, 431, 432, 433, 434, 437], "allow": [171, 172, 188, 232, 239, 283, 338, 419, 428, 429, 431, 432, 434], "allow_external_depend": [426, 434], "allow_format_str_templ": 419, "along": 427, "alongsid": 427, "alpha": 429, "alreadi": [185, 236, 280, 335, 376, 427, 431, 432, 433, 437], "also": [133, 171, 426, 427, 428, 431, 433, 434], "alter": [426, 432], "altern": [425, 431, 437], "although": 433, "alwai": [332, 427, 434, 438], "amend": 432, "an": [14, 33, 62, 66, 118, 135, 136, 140, 161, 171, 173, 181, 183, 185, 191, 194, 195, 214, 216, 228, 230, 234, 236, 241, 244, 245, 264, 266, 278, 280, 285, 288, 289, 306, 308, 323, 325, 330, 333, 335, 340, 343, 344, 361, 363, 375, 419, 421, 424, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438], "analog": 278, "analysi": [424, 432], "analysis_result": 424, "analyz": [424, 426, 427, 432, 438], "ani": [10, 29, 44, 47, 50, 51, 52, 58, 77, 108, 118, 161, 173, 185, 191, 230, 232, 236, 241, 278, 280, 285, 335, 340, 376, 378, 383, 384, 386, 390, 395, 397, 398, 401, 402, 419, 424, 426, 427, 429, 430, 431, 432, 433, 434, 438], "annot": 437, "anoth": [174, 179, 194, 199, 212, 214, 244, 249, 262, 264, 288, 293, 304, 306, 343, 348, 359, 361, 424, 425, 431, 432, 433, 435], "answer": [18, 25, 66, 73, 424, 426, 427, 431, 436, 437, 438], "anyio": 437, "anyth": 426, "apart": 427, "api": [416, 419, 421, 424, 426, 427, 428, 429, 430, 431, 432, 435], "api_kei": [421, 424, 425, 426, 427, 431, 432], "api_key_input": [424, 426, 427, 431, 432], "api_vers": 419, "apierror": 419, "appear": [424, 426, 427, 432], "append": [145, 171, 323, 330, 424, 425, 426, 427, 431, 432, 437, 438], "appl": 433, "appli": [118, 119, 408, 427, 432, 434, 438], "applic": [429, 432], "apply_op": 434, "approach": [426, 427, 429, 432, 433, 436], "appropri": [427, 432], "ar": [15, 18, 25, 30, 63, 66, 73, 92, 119, 195, 200, 228, 232, 245, 250, 289, 321, 322, 324, 327, 328, 329, 331, 344, 384, 395, 398, 402, 407, 419, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438], "area": [427, 432, 433], "arena": 433, "arg": [6, 7, 9, 21, 26, 33, 37, 38, 41, 42, 54, 55, 57, 69, 74, 100, 101, 105, 106, 118, 140, 153, 164, 184, 186, 197, 234, 235, 237, 247, 279, 281, 291, 334, 336, 346, 424, 426, 427, 431, 434, 435, 437], "arg1": 434, "arg2": 434, "args_0": 437, "args_1": 437, "args_2": 437, "args_3": 437, "argument": [111, 146, 186, 237, 281, 336, 416, 418, 419, 424, 426, 431, 437], "aris": [424, 426, 432], "arithmet": 434, "arm": 427, "around": [407, 418, 424, 428, 432, 433, 434], "arrai": [424, 427], "as_fram": 438, "ascend": [431, 437], "ask": [66, 424, 426, 427, 431, 432, 433, 436, 437, 438], "aspect": [424, 428], "assert": [427, 434], "assertionerror": 434, "assess": 426, "assign": [171, 183, 234, 278, 321, 322, 327, 328, 329, 333, 426], "assist": [426, 429, 433], "associ": 427, "assum": [173, 180, 191, 213, 228, 231, 232, 241, 263, 285, 305, 340, 360], "aswaminathan": [426, 437], "attach": [424, 426, 427, 431, 432], "attack": 432, "attempt": [424, 426, 427, 431, 432], "attr": 434, "attribut": [6, 33, 37, 47, 54, 80, 94, 97, 100, 113, 171, 173, 175, 183, 191, 195, 198, 201, 215, 228, 230, 231, 232, 233, 234, 241, 245, 248, 251, 265, 278, 285, 289, 292, 294, 307, 321, 327, 333, 340, 344, 347, 349, 362, 386, 416, 418, 433, 434, 436, 438], "attributeerror": [173, 185, 191, 236, 241, 280, 285, 335, 340, 434], "auto": 426, "autogen": [418, 419, 424, 425, 426, 427, 430, 431, 432, 437, 438], "autogenllm": [54, 100], "autograd": [95, 429, 435], "automat": [424, 428, 429, 431, 432, 434], "autonotebook": 426, "avail": [419, 424, 432, 433], "available_act": 433, "avoid": [175, 195, 201, 215, 227, 245, 251, 265, 277, 289, 294, 307, 319, 323, 330, 344, 349, 362, 374, 437], "awai": 425, "awar": 433, "award": 432, "b": [234, 424, 426, 427, 431, 432, 433, 434], "back": [278, 431, 432], "background": 427, "backpropag": 435, "backpropagationgradientdesc": 435, "backslash": 432, "backward": [20, 34, 40, 68, 104, 278, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "ball": 426, "bar": 438, "bar0": 438, "bard": 431, "barter": 425, "base": [21, 26, 33, 35, 37, 41, 42, 69, 74, 105, 106, 156, 171, 185, 236, 280, 321, 322, 324, 327, 328, 329, 331, 335, 424, 425, 426, 427, 429, 431, 432, 433, 438], "baselin": 433, "basemodul": 434, "baseutil": 433, "basic": [278, 432, 433, 436], "batch_loss": 437, "batched_feedback": 437, "batched_output": 437, "bathroom": 433, "battl": 432, "battleshipboard": 432, "beat": 426, "becasu": 438, "becaus": [424, 426, 427, 431, 432, 433, 438], "becom": [230, 431, 432], "bedroom": 433, "been": [185, 227, 230, 232, 236, 277, 278, 280, 319, 335, 374, 424, 426, 427, 431, 432, 433], "befor": [147, 195, 215, 231, 245, 265, 289, 307, 344, 362, 426, 431, 433, 438], "begin": [112, 234, 375], "behav": [431, 435], "behavior": [431, 432, 434, 435], "behind": 426, "being": [171, 424, 427, 431, 432, 436, 438], "below": [429, 431, 433, 435, 436, 438], "bench": 427, "benchmark": 426, "benefici": [425, 432], "besid": 419, "best": [433, 438], "best_opt": 424, "best_scor": 424, "bestregular": 438, "bestscor": 438, "bett": 426, "better": [15, 63, 424, 425, 426, 427, 431, 432, 438], "between": [230, 425, 427, 428, 431, 434, 437], "beyond": 424, "bias": 433, "bigbenchhard": 426, "birdsey": 433, "black": 328, "blackbox": [432, 438], "blob": 95, "block": [424, 426, 427, 431, 432, 437], "blow": 431, "board": [424, 432], "board_siz": 424, "bob": 425, "bodi": [431, 432], "book": 433, "bool": [8, 54, 56, 102, 111, 171, 174, 176, 177, 179, 199, 204, 205, 212, 249, 254, 255, 262, 278, 293, 296, 297, 304, 348, 351, 352, 359, 376, 431, 434, 437], "boolean": [183, 194, 214, 234, 244, 264, 278, 288, 306, 333, 343, 361, 419, 431, 434], "border": [327, 328], "both": [130, 139, 149, 167, 424, 425, 426, 427, 428, 431, 432, 433], "bound": 434, "box": [324, 331, 427], "bp": 435, "brace": 432, "bracket": [113, 375, 432], "break": [424, 425, 427, 431, 432, 433, 436], "brief": 432, "brown": 429, "build": [426, 429, 431, 432], "built": 438, "bundl": [424, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "button": [424, 426, 427, 431, 432], "buy_resourc": 425, "buzzer": 426, "bypass": 433, "c": [424, 425, 433, 438], "cabinet": 433, "cach": 419, "cache_se": 419, "calcul": [424, 425, 427, 432], "call": [8, 56, 102, 171, 195, 215, 230, 231, 232, 245, 265, 278, 289, 307, 321, 327, 344, 362, 419, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "call_llm": [426, 429, 433], "call_llm0": 426, "call_llm1": 426, "call_llm2": 426, "call_llm3": 426, "callabl": [118, 119, 416, 418], "callback": [424, 426, 427, 431, 432], "came": [431, 433], "can": [20, 25, 34, 40, 66, 68, 73, 104, 171, 278, 323, 330, 407, 410, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "can_place_ship": 424, "cannot": [169, 407, 424, 426, 427, 431, 432, 433, 434, 438], "capabl": [433, 437], "captur": [429, 430, 433], "care": 433, "carefulli": 278, "carlson": 426, "carri": 433, "carrier": [424, 432], "case": [134, 230, 419, 424, 427, 431, 433, 437], "cast": 427, "catch_execution_error": 426, "caus": [323, 330, 424, 427], "caveat": 433, "cd": [427, 430], "cell": [424, 425, 426, 432, 438], "certif": 416, "certifi": 437, "challeng": 432, "chanc": 432, "chang": [18, 25, 59, 66, 73, 424, 426, 427, 429, 431, 432, 433, 436, 437, 438], "changeabl": [25, 73, 424, 426, 436, 437, 438], "char": [221, 271, 313, 368], "charact": [171, 182, 185, 218, 236, 268, 280, 310, 320, 326, 335, 365, 407, 432, 438], "character1": 433, "character2": 433, "charset": 437, "chat": 431, "chatgpt": 431, "check": [174, 176, 177, 179, 185, 194, 199, 204, 205, 212, 214, 232, 236, 244, 249, 254, 255, 262, 264, 280, 288, 293, 296, 297, 304, 306, 335, 343, 348, 351, 352, 359, 361, 407, 424, 427, 431, 432, 433, 434, 437], "check_hit": 424, "check_input": 436, "check_random_st": 438, "check_shot": [424, 432], "check_termin": [424, 432], "child": [93, 171, 172, 185, 188, 236, 239, 280, 283, 335, 338, 384, 395, 398, 402, 435], "children": [171, 176, 196, 204, 246, 254, 278, 290, 296, 345, 351, 382], "chinganc": 427, "choic": [424, 425, 426, 433], "choos": [425, 429, 432, 433], "chose": 431, "chosen": 432, "cl": 169, "clarifi": 427, "class": [2, 3, 5, 6, 32, 33, 37, 46, 47, 54, 80, 94, 97, 100, 116, 121, 122, 136, 137, 140, 156, 158, 159, 160, 162, 163, 169, 170, 171, 183, 193, 228, 234, 243, 278, 287, 320, 326, 333, 342, 380, 381, 386, 392, 393, 394, 396, 400, 404, 408, 415, 416, 418, 427, 429, 431, 432, 433, 434, 435], "classic": [431, 432, 435], "classifi": 438, "classmethod": [125, 388], "claud": [421, 431], "clean": 230, "clear": [228, 424, 426, 431, 432, 434, 436, 437, 438], "clearli": 426, "click": [424, 426, 427, 431, 432, 433], "client": [419, 425], "clip": 427, "clone": [427, 430, 434], "close": [427, 432], "closer": 427, "code": [12, 18, 25, 60, 66, 73, 80, 89, 112, 156, 424, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438], "code_optim": 431, "coef_": 438, "coeffici": 438, "coffeet": 433, "col": 424, "collabor": 433, "collect": [169, 381, 421, 435], "colon": [175, 201, 251, 294, 323, 330, 349, 426], "color": [115, 321, 322, 326, 327, 328, 329], "com": [95, 427, 430], "combin": [180, 213, 263, 305, 323, 330, 360, 432], "come": [11, 431], "command": 427, "commentari": 426, "common": 432, "commonli": 426, "commun": [426, 433], "commut": 278, "compar": [171, 174, 179, 194, 199, 212, 214, 244, 249, 262, 264, 288, 293, 304, 306, 343, 348, 359, 361, 431, 433, 434, 437], "comparison": [171, 194, 214, 244, 264, 288, 306, 343, 361, 427, 428, 434], "compat": [431, 432], "complet": [230, 419, 424, 425, 427, 433], "complex": 431, "compon": 427, "compos": [25, 73, 424, 426, 429, 436, 437, 438], "composit": 438, "comput": [185, 236, 278, 280, 333, 335, 384, 395, 398, 402, 427, 428, 431, 434, 435, 436, 437], "compute_loss": 437, "concat": 437, "concat1": 437, "concaten": 437, "concept": 428, "concern": 427, "concis": 426, "condit": [427, 432], "conduct": 433, "confer": 426, "config": [419, 425, 427], "config_list": [418, 424, 425, 426, 427, 431, 432, 438], "config_list_from_json": [424, 425, 426, 427, 431, 432, 438], "configur": 438, "confirm": 427, "connect": [434, 438], "consecut": 427, "consid": [15, 63, 66, 424, 426, 427, 432, 434, 436, 437, 438], "consider": [427, 432], "consist": [425, 427, 432, 438], "constant": 427, "constrain": 436, "constraint": [12, 25, 60, 73, 80, 89, 92, 111, 183, 234, 278, 333, 376, 424, 426, 427, 431, 436, 437], "construct": [9, 57, 110, 111, 321, 323, 327, 330, 426, 429, 431, 433], "contain": [25, 47, 73, 113, 118, 119, 167, 175, 183, 194, 195, 198, 201, 209, 214, 215, 234, 244, 245, 248, 251, 259, 264, 265, 278, 288, 289, 292, 294, 301, 306, 307, 333, 343, 344, 347, 349, 356, 361, 362, 375, 376, 386, 393, 419, 424, 426, 427, 431, 433, 434, 436, 437, 438], "container_of_nod": 406, "content": [185, 236, 280, 320, 323, 326, 330, 335, 425, 426, 431, 433, 434], "context": [111, 171, 173, 191, 241, 285, 340, 419, 424, 426, 428, 432], "contextmanag": 404, "continu": [426, 427, 432, 433, 435], "contrast": 437, "contribut": [427, 430, 432], "control": [407, 419, 427, 432, 434, 438], "control_mod": 427, "controller_input": 427, "conveni": 431, "convent": [431, 433, 434], "convers": [95, 425], "conversation_histori": 425, "convert": [10, 58, 92, 122, 140, 431, 434, 438], "convert_english_to_numb": 438, "coord": [424, 432], "coordin": [424, 427, 432, 433], "copi": [171, 193, 234, 243, 287, 342, 426, 431, 434, 438], "copy_node_a": 234, "core": [427, 434, 437], "corner": 431, "correct": [185, 236, 278, 280, 335, 426, 427, 429, 431, 437, 438], "correctli": [231, 424, 426, 427, 431, 432, 437], "correspond": [131, 175, 195, 201, 215, 231, 245, 251, 265, 289, 294, 307, 344, 349, 362, 427, 431, 433, 437], "cost": 433, "could": [424, 431, 432], "count": [219, 269, 311, 366, 424, 432, 433], "cours": 432, "cover": 434, "craft": 426, "creat": [25, 73, 171, 189, 193, 240, 243, 284, 287, 339, 342, 376, 383, 397, 401, 418, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "create_and_fill_battleship_board": 424, "create_battleship_board": 424, "create_feedback": [427, 436], "create_messag": 425, "create_prompt": 426, "creation": [424, 434], "credit": [432, 433], "criteria": 426, "crucial": 432, "cruiser": [424, 432], "cum_reward": 432, "current": [15, 63, 171, 174, 179, 185, 189, 193, 195, 199, 200, 212, 230, 236, 240, 243, 245, 249, 250, 262, 278, 280, 284, 287, 289, 293, 304, 335, 339, 342, 344, 348, 359, 424, 426, 427, 428, 431, 432, 433, 436, 437, 438], "current_dict": 425, "current_inventori": 425, "current_messag": 425, "current_play": 425, "current_prompt": 425, "curv": 429, "custom": [419, 438], "cutleryfork": 433, "d": [123, 126, 127, 128, 131, 132, 133, 134, 135, 424, 433], "dag": [171, 172, 174, 179, 188, 199, 212, 228, 239, 249, 262, 283, 293, 304, 338, 348, 359, 435], "dall": 432, "data": [10, 21, 29, 41, 44, 58, 69, 77, 92, 105, 108, 171, 185, 224, 227, 236, 274, 277, 278, 280, 316, 319, 335, 371, 374, 376, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "data_typ": [25, 73, 424, 426, 436, 437, 438], "databas": 429, "dataset": [426, 431, 438], "deal": 436, "debug": 431, "decid": [427, 429, 432, 433], "decide_lang": 429, "decis": [424, 427, 432], "declar": [419, 429, 432], "decor": [169, 408, 431, 432, 433, 434, 438], "decreas": 438, "dedent": 426, "deem": 426, "deep": [171, 193, 243, 287, 342], "deepcopi": 434, "deeper": [424, 432], "def": [409, 419, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "default": [13, 39, 61, 103, 126, 150, 171, 185, 236, 278, 280, 320, 326, 335, 376, 419, 421, 424, 426, 427, 431, 432, 434, 435], "default_object": [427, 432], "default_propag": 435, "defaultdict": [228, 230, 435], "defens": 426, "defin": [25, 73, 122, 140, 232, 320, 326, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438], "definit": [18, 25, 66, 73, 424, 426, 427, 431, 432, 436, 437, 438], "delai": 433, "delet": 230, "delimit": [175, 201, 251, 294, 349], "demand": 426, "demo": [426, 433], "demonstr": [426, 427, 431, 433, 435], "denot": [424, 432, 433], "depend": [195, 200, 215, 245, 250, 265, 278, 289, 307, 344, 362, 429, 430, 434], "deprec": 427, "deriv": [426, 427], "descent": 111, "describ": [25, 73, 183, 234, 278, 333, 376, 424, 426, 431, 433, 436, 437, 438], "descript": [25, 73, 111, 183, 185, 234, 236, 278, 280, 320, 323, 326, 330, 333, 335, 375, 376, 424, 426, 427, 431, 432, 433, 434, 436, 437, 438], "deshaun": 426, "design": [227, 277, 319, 374, 424, 427, 429, 431, 432, 435, 437], "desir": [427, 435], "despit": [427, 432], "destroy": [424, 432], "detach": [171, 433, 434], "detail": [234, 426, 431], "detect": 432, "determin": [178, 210, 260, 302, 321, 322, 324, 327, 328, 329, 331, 357, 425, 427, 433], "develop": 433, "dialogu": 433, "dict": [10, 22, 29, 44, 47, 48, 50, 51, 52, 54, 58, 70, 77, 92, 97, 99, 108, 119, 122, 130, 139, 149, 161, 167, 183, 185, 203, 234, 236, 253, 278, 280, 321, 327, 335, 382, 384, 395, 398, 402, 418, 424, 427, 434], "dict_act": 433, "dict_info": 433, "dict_nod": 434, "dictat": 427, "dictionari": [29, 44, 77, 108, 130, 139, 149, 167, 180, 183, 213, 231, 232, 234, 263, 278, 305, 321, 327, 333, 360, 409, 424, 427, 432, 434], "did": [426, 427, 437], "differ": [425, 427, 429, 431, 432, 433, 434, 437], "differenti": [428, 435], "digraph": [185, 236, 280, 335], "dim": 427, "dimens": 427, "dimension": 427, "direct": [171, 228, 278, 427, 432, 433, 434], "direction_to_go": 427, "direction_to_puck": 427, "directli": [171, 426, 427, 433, 434, 435, 438], "disabl": 404, "disambigu": 437, "discord": 431, "discuss": [431, 433], "dishwash": 433, "diskcach": 437, "displai": [424, 426, 427, 431, 432], "distanc": 427, "distro": 437, "divid": [433, 434], "do": [25, 73, 407, 424, 425, 426, 427, 431, 433, 435, 436, 437, 438], "do_constrain": 111, "do_in_context_exampl": 111, "do_momentum": 111, "doc": 419, "docker": 437, "docstr": [25, 73, 424, 426, 431, 436, 437, 438], "document": [12, 25, 47, 60, 66, 73, 80, 89, 424, 426, 427, 431, 434, 436, 437, 438], "doe": [134, 375, 407, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438], "doesn": [426, 432, 433], "don": [112, 431, 433], "done": [433, 434], "dotenv": 437, "doubl": [407, 426, 432], "down": [18, 66, 424, 426, 427, 431, 432, 433, 435, 436, 437, 438], "downstream": 432, "dozen": 431, "dp": 426, "dtype": [426, 431, 434], "du": 436, "due": [426, 427, 432, 433], "duplic": [189, 240, 284, 339], "dure": [112, 171, 175, 201, 251, 294, 349, 425, 427, 432, 436], "dynam": 427, "e": [134, 419, 424, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "e_nod": 427, "each": [25, 73, 180, 213, 230, 231, 263, 305, 360, 419, 424, 425, 426, 427, 429, 432, 433, 435, 436, 437, 438], "each_input": 437, "earlier": [431, 432, 437], "easi": 433, "easili": 431, "eastern": 426, "edg": [424, 434], "edit": 430, "editor": 431, "effect": [427, 432, 433], "effector": 427, "effici": [427, 432, 433], "effor": 431, "effort": 433, "eight": 438, "either": [134, 234, 424, 432, 433, 434], "elabor": 426, "element": [145, 180, 213, 228, 232, 263, 305, 360, 424, 426, 427, 431, 434, 437], "elia": 426, "elicit": 424, "elif": [424, 425, 427, 432], "ellips": [324, 331], "ellipsi": [323, 330], "els": [126, 424, 425, 426, 427, 431, 432, 433, 434, 435, 437, 438], "empti": [132, 150, 230, 325, 424, 426, 427, 431, 432, 433, 437], "en": 426, "en_or_": 429, "enabl": [185, 236, 280, 335, 426, 429], "encapsul": 434, "enclos": 375, "encod": 427, "encount": 424, "encourag": [427, 431], "end": [112, 141, 425, 426, 427, 429, 431, 435, 438], "engin": 433, "engine_nam": 96, "engligsh": 438, "english": 438, "enhanc": [426, 432], "enhanced_infer": 419, "enough": [426, 427, 438], "ensur": [175, 185, 195, 201, 215, 230, 231, 236, 245, 251, 265, 280, 289, 294, 307, 335, 344, 349, 362, 426, 427, 428, 432, 438], "enter": [424, 426, 427, 431, 432], "entir": [112, 428, 429, 432], "entri": 432, "enumer": [424, 426, 432, 435, 437, 438], "env": [424, 426, 427, 431, 432, 433, 437], "env_nam": [424, 426, 427, 431, 432], "env_name_input": [424, 426, 427, 431, 432], "environ": [421, 425, 426, 431, 432, 433], "environment": 427, "episod": 424, "epoch": 431, "eq": [431, 434, 437], "eq0": 437, "eq1": [431, 437], "eq2": 437, "eq3": 437, "equal": [194, 214, 244, 264, 288, 306, 343, 361, 427, 431, 434], "equat": 409, "equival": [434, 438], "error": [18, 66, 175, 183, 201, 251, 294, 349, 375, 424, 426, 427, 431, 432, 433, 437, 438], "escap": 407, "especi": [424, 426, 427], "essenc": 432, "essenti": [172, 181, 188, 216, 239, 266, 283, 308, 338, 363, 426, 432], "et": 433, "etc": [429, 438], "eval": [424, 426, 427, 431, 432, 437], "eval0": [424, 426], "eval1": [424, 426, 431], "eval10": 432, "eval11": 432, "eval145": 427, "eval146": 427, "eval147": 427, "eval148": 427, "eval2": 426, "eval3": 426, "eval4": [426, 432], "eval5": 426, "eval6": [426, 432], "eval7": 432, "eval84": 437, "eval85": 437, "eval86": 437, "eval87": 437, "eval_metr": 426, "eval_polici": 424, "evalu": [427, 428, 431, 432, 437], "even": [427, 431, 432], "ever": 427, "everi": [416, 424], "everyth": 426, "evid": 432, "evidenc": 427, "evolv": 432, "evvalu": 434, "exact": 438, "exactli": [407, 432], "examin": [427, 431], "exampl": [14, 15, 30, 62, 63, 111, 234, 407, 409, 410, 419, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437], "example_problem": [14, 62], "example_respons": [14, 62], "examples_path": 432, "exce": [323, 330], "except": [155, 156, 157, 183, 195, 215, 245, 265, 289, 307, 344, 362, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "exception_ev": 426, "exception_eval0": 426, "exception_eval1": 426, "exception_func_with_input_checking0": 436, "exception_nod": [156, 424, 426, 427, 429, 431, 432, 436, 437], "exception_step": 427, "exceptiongroup": 437, "exceptionnod": [156, 322, 328, 329, 424, 426, 427, 436], "exchang": 425, "exclud": 432, "exclude_ship": 424, "execpt": 436, "execut": [25, 73, 156, 183, 424, 426, 428, 429, 430, 431, 432, 433, 436, 437, 438], "executionerror": [424, 426, 427, 429, 431, 432, 433, 436, 437], "exert": 432, "exhaust": 431, "exhibit": 427, "exist": [173, 191, 241, 285, 340, 426, 432], "expand": [195, 245, 278, 289, 344], "expect": [66, 424, 426, 427, 431, 432, 436, 437, 438], "expected_output": 431, "experi": [426, 433], "explain": [66, 424, 426, 434, 436, 437, 438], "explan": [25, 73, 424, 426, 427, 436, 437, 438], "explicit": 431, "explicitli": [424, 426, 427, 431, 433, 434, 438], "explor": 433, "exponenti": 425, "expos": 432, "express": [375, 433, 434], "extend": [171, 278, 433, 436], "extens": 437, "extern": [429, 430], "extract": [16, 64, 171, 375, 376, 426, 427, 429], "extract_act": 433, "extract_answ": 426, "extract_text_or_completion_object": 419, "f": [134, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "f0": [431, 432], "f1": 432, "f2": 432, "f3": 432, "f4": 432, "f5": 432, "f6": 432, "f7": 432, "f8": 432, "f9": 432, "f_feedback": 438, "facilit": 426, "fact": 431, "factori": [416, 418], "fail": [426, 427, 431, 433, 436, 437, 438], "fair": 428, "fallback": [424, 432], "fals": [8, 54, 56, 100, 102, 111, 171, 176, 177, 185, 204, 205, 236, 254, 255, 278, 280, 296, 297, 335, 351, 352, 376, 391, 411, 419, 424, 425, 426, 427, 431, 432, 433, 434, 437, 438], "false_func": 119, "far": 425, "fashion": 437, "fast": 428, "faster": [427, 428, 433], "fb": 438, "feasibl": [15, 63], "featur": 429, "feed": 432, "feedback": [7, 11, 12, 20, 21, 25, 26, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 45, 47, 55, 59, 60, 66, 68, 69, 73, 74, 79, 80, 89, 95, 96, 101, 104, 105, 106, 109, 181, 185, 216, 227, 236, 266, 277, 278, 280, 308, 319, 335, 363, 374, 382, 383, 384, 386, 393, 395, 397, 398, 401, 402, 412, 424, 425, 426, 427, 429, 432, 433, 434, 435, 436, 438], "feedback_fn": 429, "feel": 419, "fetch_openml": 438, "few": [426, 429, 431, 433, 434], "field": 426, "figur": [429, 431, 433, 438], "file": [165, 168, 421, 425, 430, 431], "file_nam": [165, 168], "fill": [321, 325, 327, 329, 332], "filter": 419, "filter_dict": [54, 418], "filter_func": 419, "final": [171, 232, 424, 425, 426, 427, 429, 434, 438], "find": [228, 424, 425, 426, 432, 433], "findal": 426, "finish": 433, "firebrick1": [322, 328, 329], "first": [146, 151, 424, 425, 426, 427, 429, 432, 433, 435, 437], "fit": 438, "fit_transform": 438, "five": 438, "fix": [426, 432, 433], "flag": 171, "flaml": 437, "flattn": [129, 138, 148, 166], "flaw": [424, 427], "flexibilti": 435, "flexibl": 429, "float": [427, 434, 436, 438], "float0": [436, 438], "flow": [429, 431, 432, 434], "focu": [424, 429], "folder": [431, 432, 438], "follow": [18, 25, 66, 73, 96, 134, 232, 234, 419, 424, 426, 427, 428, 431, 432, 433, 434, 436, 437, 438], "foo": [434, 438], "foo_nod": 434, "foobar": 438, "foobar_text": 438, "food": 433, "footbal": 426, "forc": 431, "form": [171, 228, 432], "format": [18, 25, 66, 73, 111, 171, 175, 201, 231, 232, 251, 294, 349, 407, 419, 421, 424, 425, 426, 432, 433, 434, 436, 437, 438], "formul": 426, "forward": [163, 426, 429, 435], "found": [131, 375, 407, 410, 419, 424, 425, 426, 432, 433], "four": [425, 438], "fourth": 427, "frame": 431, "framework": [428, 429, 434, 435], "frequent": 427, "fridg": 433, "friend": 433, "friendli": [182, 218, 268, 310, 365], "from": [16, 64, 96, 112, 113, 123, 134, 142, 145, 165, 171, 185, 196, 230, 231, 236, 246, 278, 280, 290, 335, 345, 375, 376, 382, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "fulfil": 427, "full": 433, "fun": [186, 237, 281, 336, 409, 434, 437], "fun_nod": 434, "func_with_input_check": 436, "function": [18, 25, 46, 66, 73, 94, 114, 117, 119, 121, 158, 162, 170, 171, 173, 185, 186, 191, 195, 215, 230, 231, 232, 236, 237, 241, 245, 265, 280, 281, 285, 289, 307, 335, 336, 340, 344, 362, 375, 377, 405, 407, 415, 416, 418, 419, 421, 428, 429, 432, 433, 434, 436, 437], "functionfeedback": 92, "functionoptim": 438, "functionpropag": 47, "fundament": 431, "further": [427, 432, 433], "g": [419, 424, 426, 427, 429, 431, 432, 435, 437], "g0": 431, "game": [424, 426, 431], "gameplai": 432, "gener": [171, 321, 327, 424, 426, 427, 429, 431, 432, 433, 435, 437], "get": [133, 172, 175, 178, 180, 181, 182, 188, 198, 201, 210, 213, 216, 218, 232, 233, 239, 248, 251, 260, 263, 266, 268, 283, 292, 294, 302, 305, 308, 310, 321, 327, 338, 347, 349, 357, 360, 363, 365, 419, 424, 427, 429, 432, 434], "get_board": 424, "get_feedback": [431, 437], "get_game_statu": 424, "get_hit": 424, "get_life_point": 424, "get_miss": 424, "get_shot": [424, 432], "get_shots_overlay_board": 424, "get_wrapper_attr": 427, "getattr": 434, "getitem": [427, 434], "git": [427, 430], "github": [95, 427, 430], "give": [426, 427, 431, 432, 434, 435], "given": [29, 44, 77, 108, 131, 185, 231, 236, 280, 335, 383, 397, 401, 419, 424, 426, 427, 431, 432, 433, 434, 437, 438], "global": [424, 425, 426, 427, 431, 432], "goal": [425, 426, 427, 432, 433], "goal_po": 427, "gocheck": 433, "goe": 426, "goexplor": 433, "gold": 425, "good": [427, 431], "got": [95, 96, 424, 426, 432], "gpt": [421, 425, 427], "grab": [427, 431], "grad": 435, "gradeint": 435, "gradient": [96, 97, 110, 111, 278, 429, 432], "gradient_context": 97, "gradientdesc": 435, "gradientinfo": 110, "grammat": 426, "graph": [28, 37, 43, 47, 76, 107, 171, 173, 178, 180, 181, 185, 191, 195, 200, 210, 213, 216, 236, 241, 245, 250, 260, 263, 266, 278, 280, 285, 289, 302, 305, 308, 320, 323, 326, 330, 333, 335, 340, 344, 357, 360, 363, 386, 424, 426, 428, 429, 431, 433, 435, 436, 437, 438], "graphpropag": [185, 236, 280, 335, 386], "graphviz": [185, 236, 280, 323, 330, 335, 437], "grasp": 427, "great": [427, 431], "greater": [174, 199, 232, 249, 293, 348, 432, 436, 438], "greet": 429, "grip": 427, "gripper": 427, "gripper_distance_apart": 427, "gripper_open": 427, "ground": 431, "group": 95, "gt": 171, "guess": [432, 438], "guid": [321, 326, 327, 425, 426, 427, 431, 432, 438], "guidanc": [431, 432], "guo": 433, "gym": 427, "gymnasium": 427, "h": 433, "h11": 437, "ha": [134, 163, 171, 176, 177, 185, 204, 205, 227, 232, 236, 254, 255, 277, 278, 280, 296, 297, 319, 335, 351, 352, 374, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 438], "had": [431, 435], "hand": [426, 427], "hand_po": 427, "handl": [185, 236, 278, 280, 335, 407, 424, 425, 426, 427, 433, 434], "happen": [431, 433, 437], "happi": [424, 425, 426], "hard": [112, 431, 433], "have": [140, 171, 230, 424, 425, 426, 427, 428, 431, 432, 433, 434, 437], "heart": 432, "heed": 427, "height": 424, "hello": [409, 434], "help": [15, 25, 63, 73, 169, 424, 426, 427, 429, 431, 433, 436, 437, 438], "helper": [321, 327, 427, 432, 438], "henc": [426, 427, 436], "here": [407, 426, 427, 428, 431, 432, 433, 434, 435, 437, 438], "heterogen": 426, "heurist": 432, "hidden": [200, 250], "hide": 433, "hierarch": [172, 188, 239, 283, 338, 433], "high": [25, 73, 424, 426, 427, 436, 437, 438], "higher": [425, 432, 438], "highlight": 427, "hint": [15, 63, 427, 432, 438], "histori": [433, 438], "hit": [424, 432], "hockei": 426, "hola": 429, "hold": [427, 433], "home": [426, 427, 433, 437], "hood": 431, "horizon": [427, 433], "host": 426, "housework": 433, "how": [25, 66, 73, 424, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "howev": [424, 426, 427, 428, 430, 431, 432, 433, 438], "html": 426, "http": [95, 426, 427, 430, 437], "httpcore": 437, "httpx": 437, "huggingfac": 426, "human": [431, 432, 433], "hundr": 428, "hurri": 433, "hypothet": 432, "i": [14, 18, 25, 33, 62, 66, 73, 95, 112, 122, 131, 132, 134, 140, 146, 147, 150, 151, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 188, 191, 194, 195, 199, 201, 204, 205, 210, 212, 213, 214, 215, 216, 227, 228, 230, 231, 232, 233, 234, 236, 239, 241, 244, 245, 249, 251, 254, 255, 260, 262, 263, 264, 265, 266, 277, 278, 280, 283, 285, 288, 289, 293, 294, 296, 297, 302, 304, 305, 306, 307, 308, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 338, 340, 343, 344, 348, 349, 351, 352, 357, 359, 360, 361, 362, 363, 374, 375, 376, 416, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438], "ic": 426, "id": [171, 231, 433, 437], "ideal": 435, "ident": [185, 234, 236, 280, 335, 427], "identifi": [136, 171, 175, 201, 228, 231, 232, 233, 251, 294, 349, 424, 426, 427, 432, 437], "idna": 437, "ignor": 419, "ignore_extraction_error": [54, 431], "illustr": 431, "imag": [432, 433], "immedi": 426, "impact": [432, 438], "implaus": 426, "implement": [171, 419, 424, 427, 428, 429, 431, 432, 433, 437], "impli": [424, 427, 432], "implicit": 432, "implicitli": 424, "import": [228, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "improv": [59, 424, 426, 427, 431, 432, 436, 437, 438], "includ": [25, 73, 111, 130, 139, 149, 167, 171, 278, 321, 327, 424, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438], "include_exampl": 54, "incomplet": [25, 73, 424, 426, 436, 437, 438], "incorpor": 432, "incorrect": [427, 429, 432], "incorrectli": 427, "increas": [424, 425, 427, 432, 438], "increment": [180, 213, 263, 305, 360, 427], "ind": 437, "inde": 424, "index": [140, 147, 150, 175, 180, 201, 213, 231, 232, 251, 263, 294, 305, 349, 360, 424, 426, 434, 437], "indexerror": [150, 426], "indic": [183, 234, 278, 333, 419, 424, 426, 427, 431, 432, 433, 434, 436, 437], "individu": 433, "induc": 432, "infer": [25, 73, 424, 426, 436, 437, 438], "infix": 427, "influenc": [426, 432], "info": [183, 234, 278, 333, 427, 433, 438], "inform": [183, 202, 234, 252, 278, 295, 333, 350, 426, 427, 432, 438], "inher": 433, "inherit": 433, "ini": 432, "init": [424, 427], "init_feedback": 435, "init_scor": 424, "init_with_one_hit": 424, "initi": [171, 183, 195, 215, 228, 232, 234, 245, 265, 278, 289, 307, 320, 326, 333, 344, 362, 425, 427, 432, 436], "input": [12, 25, 60, 66, 73, 80, 89, 113, 118, 183, 232, 234, 375, 424, 426, 427, 429, 431, 432, 434, 436, 437, 438], "insid": [113, 407, 426, 431, 432, 434], "inspir": 429, "instal": [426, 428, 431, 432, 434, 435, 436, 437, 438], "instanc": [14, 15, 62, 63, 78, 171, 183, 193, 228, 234, 243, 278, 287, 333, 342, 418, 424, 426, 427, 434, 436, 437, 438], "instanti": [419, 432], "instead": [424, 431, 434, 435], "instruct": [12, 25, 30, 60, 66, 73, 80, 89, 424, 426, 427, 429, 431, 432, 436, 437, 438], "instruct1": 429, "instruct2": 429, "instrument": 426, "int": [3, 8, 47, 49, 56, 112, 178, 210, 260, 302, 320, 326, 357, 386, 389, 416, 418, 419, 424, 432, 434, 438], "int0": 438, "integ": [144, 146, 419, 431, 437, 438], "integr": 228, "intellig": 431, "intend": [424, 427, 432], "interact": [418, 424, 426, 432, 433], "interest": 433, "interfac": 431, "interg": 438, "intermedi": [25, 73, 424, 426, 436, 437, 438], "intern": [171, 173, 191, 241, 285, 340, 431], "interpret": [432, 438], "interrupt": 431, "intervent": 431, "introduc": 432, "intuit": 429, "invalid": 230, "inventori": 425, "inventory_messag": 425, "investig": 433, "invis": 432, "involv": [424, 426, 427, 429, 431, 432, 433], "io": 426, "iprogress": 426, "ipython": [424, 426, 427, 431, 432], "ipywidget": [424, 426, 427, 431, 432], "is_hit": 424, "is_leaf": 171, "is_root": [171, 233], "is_vert": 424, "isinst": [424, 427, 434], "isn": [424, 426], "issu": [323, 330, 424, 426, 427, 428, 432, 436], "item": [4, 123, 134, 141, 142, 147, 150, 151, 424, 433, 437, 438], "iter": [125, 134, 145, 230, 424, 425, 427, 432, 434, 435, 436, 437], "its": [92, 171, 178, 180, 185, 210, 213, 231, 232, 233, 236, 260, 263, 280, 302, 305, 322, 324, 328, 329, 331, 335, 357, 360, 426, 427, 431, 432, 433, 436], "itself": [171, 426, 430, 431], "j": [424, 432], "jiter": 437, "joblib": 437, "john": 426, "join": [424, 427, 432], "json": [18, 66, 407, 424, 425, 426, 427, 433, 436, 437, 438], "json_object": 425, "json_str": 407, "json_txt": 410, "juan": 429, "judici": [227, 277, 319, 374], "jupyt": 426, "just": [18, 25, 66, 73, 424, 426, 427, 431, 432, 434, 436, 437, 438], "k": [126, 131, 132, 133, 134, 438], "keep": [424, 427, 431], "kei": [122, 131, 132, 134, 195, 198, 215, 231, 232, 234, 245, 248, 265, 289, 292, 307, 344, 347, 362, 384, 395, 398, 402, 407, 419, 421, 424, 425, 426, 427, 431, 432], "kernel": 437, "keyerror": [131, 132, 195, 215, 245, 265, 289, 307, 344, 362, 426], "keyword": [111, 118, 186, 237, 281, 336], "kind": 432, "kitchen": 433, "kitchencabinet": 433, "kk": 438, "know": [431, 432, 433], "known": [424, 432], "kwarg": [3, 6, 7, 9, 21, 26, 33, 37, 38, 41, 42, 47, 54, 55, 57, 69, 74, 80, 97, 100, 101, 105, 106, 118, 122, 136, 137, 140, 156, 157, 159, 160, 163, 164, 171, 183, 184, 186, 197, 228, 234, 235, 237, 247, 278, 279, 281, 291, 320, 326, 333, 334, 336, 346, 381, 386, 393, 394, 396, 400, 404, 416, 418, 419, 424, 426, 431, 435, 437], "kwd": 153, "l": 437, "l1": 438, "l_eval": 437, "label": [321, 323, 327, 330, 437], "lack": [134, 424], "lai": 432, "lambda": 435, "lang": 429, "langchain": 429, "languag": [95, 426, 428, 429, 438], "larg": [428, 430, 438], "larger": [95, 433, 438], "largest": 437, "last": [150, 232, 427, 434, 435, 437], "later": 434, "latest": 427, "layout": 432, "lazi": 421, "lead": [424, 425, 426, 427, 432, 438], "leaf": [176, 204, 254, 296, 351], "learn": [278, 429, 431, 433, 437, 438], "least": [432, 437], "led": [427, 431], "left": [230, 433], "legaci": 419, "legitim": 424, "len": [424, 425, 426, 431, 432, 433, 434, 435, 437, 438], "len_": 434, "length": [140, 209, 232, 259, 301, 356, 428], "less": [179, 212, 262, 304, 359, 425, 431, 432], "let": [424, 427, 431, 432, 433, 435], "level": [25, 73, 171, 174, 179, 195, 199, 200, 212, 228, 245, 249, 250, 262, 278, 289, 293, 304, 344, 348, 359, 424, 426, 436, 437, 438], "leverag": [426, 428, 431, 432], "li": [424, 426, 427], "lib": [426, 427, 437], "librari": [424, 425, 426, 427, 429, 431, 432], "lightgrai": [322, 329], "like": [111, 113, 127, 128, 323, 330, 421, 424, 426, 427, 429, 431, 432, 433, 434, 438], "likelihood": 432, "limit": [323, 330, 432, 438], "lindholm": 426, "line": [431, 432, 438], "linear": 437, "linear_model": 438, "link": 431, "list": [33, 37, 47, 49, 54, 100, 110, 119, 129, 138, 140, 148, 150, 161, 166, 171, 172, 180, 181, 183, 188, 203, 213, 216, 228, 230, 231, 232, 233, 234, 239, 253, 263, 266, 283, 305, 308, 338, 360, 363, 382, 386, 389, 412, 418, 421, 424, 426, 427, 431, 432, 433, 434, 435, 437], "list0": [424, 432, 437], "list1": [431, 437], "list2": 437, "list3": 437, "live": 433, "livingroom": 433, "ll": [425, 426], "llf": 427, "llfbench": 427, "llm": [8, 54, 56, 100, 102, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438], "llm_op": 95, "llmcallabl": [426, 433], "load": [425, 427, 433], "load_dataset": 426, "local": [426, 427], "locat": [427, 432, 433], "log": [54, 100, 424, 426, 438], "logger": [115, 427], "logic": [194, 214, 244, 264, 288, 306, 343, 361, 424, 426, 427, 432, 434], "logisticregress": 438, "long": [112, 416], "look": [424, 426, 431, 432, 437], "lookup": 228, "loop": [424, 425, 432], "loss": [227, 277, 319, 374, 431, 435, 437], "low": 427, "lower": [425, 426, 433, 438], "lst": [431, 437], "lst0": 437, "lst1": [431, 437], "lst2": 437, "lst3": 437, "lt": 171, "m": 433, "machin": [278, 431, 438], "made": [424, 426, 427, 432], "magic": [209, 259, 301, 356, 434], "magnitud": 438, "magnitutd": 432, "mai": [25, 73, 113, 416, 424, 426, 427, 430, 431, 433, 436, 437, 438], "main": [95, 418, 424, 432], "maintain": [228, 278, 432], "major": 432, "make": [419, 424, 427, 429, 430, 431, 432, 433, 435, 436, 438], "manag": [228, 416, 427, 431, 432], "maneuv": 427, "mani": [431, 432, 433], "manipul": [172, 188, 239, 283, 338, 427, 432], "manual": [431, 434, 435], "map": [424, 429, 432], "map0": 424, "map1": 424, "map2": 432, "map3": 432, "map4": 432, "map6": 432, "marcelo": 426, "mark": [278, 407, 432, 434], "mask": [9, 19, 57, 67], "master": 432, "match": [375, 426, 431, 433, 435, 437], "math": 435, "matplotlib": [427, 437], "maveriq": 426, "max": 431, "max_index": 431, "max_token": [8, 54, 56, 100, 425, 426], "maxim": [425, 432, 438], "maximum": [178, 185, 210, 236, 260, 280, 302, 320, 326, 335, 357, 427, 431, 437], "maxsplit": [220, 270, 312, 367], "me": 433, "mean": [25, 66, 73, 424, 426, 427, 432, 436, 437, 438], "meaning": 424, "meant": [171, 426, 427, 432], "mechan": [278, 429, 432, 433], "meet": [427, 433], "memori": [416, 433], "memory_s": [54, 424, 425, 427, 436], "mention": [427, 432], "mere": 426, "messag": [115, 157, 183, 375, 419, 425, 426, 427, 432, 433], "message_prompt": 425, "messagenod": [91, 93, 194, 209, 214, 288, 301, 306, 343, 356, 361, 384, 388, 395, 398, 402, 426, 431, 436], "met": 427, "meta": 433, "metaworld": 427, "method": [3, 6, 33, 37, 47, 54, 80, 97, 100, 122, 134, 136, 137, 140, 154, 159, 160, 163, 171, 174, 179, 183, 199, 209, 212, 228, 234, 249, 259, 262, 278, 293, 301, 304, 320, 321, 326, 327, 333, 348, 356, 359, 381, 386, 393, 394, 396, 400, 404, 408, 416, 418, 426, 427, 431, 432, 434, 436], "method_nam": 434, "metric": 431, "microsoft": [426, 427, 430], "microwav": 433, "might": [25, 73, 424, 426, 427, 428, 431, 432, 433, 436, 437, 438], "min": 431, "min_index": 431, "mind": 431, "miniconda3": [426, 427, 437], "minim": [416, 429, 430, 436, 437], "minimum": [427, 431, 437], "minor": 433, "minu": 438, "miscount": 432, "mishandl": 432, "misjudg": 427, "misrepres": 432, "misrepresent": 432, "miss": [424, 432, 433], "mistak": 427, "misunderstand": 427, "mnist_784": 438, "mode": 430, "model": [95, 129, 130, 138, 139, 148, 149, 165, 166, 167, 168, 416, 418, 419, 421, 425, 426, 427, 428, 429, 432, 433], "model_select": 438, "modelcli": 419, "modelclientresponseprotocol": 419, "modelwrapp": 426, "modif": [427, 432, 433], "modifi": [232, 426, 427, 432, 436], "modul": [94, 424, 426], "momentum": 111, "monitor": 427, "mooki": 426, "more": [419, 424, 426, 427, 428, 431, 432, 433, 437, 438], "moreov": [427, 432], "most": [424, 427, 429, 432, 438], "motion": 427, "move": [424, 427, 432], "movement": [427, 433], "much": 432, "multi": 427, "multipl": [171, 382, 425, 427, 431, 432, 433, 437], "multipli": 438, "multiply0": 438, "must": [425, 427, 432, 433, 436, 438], "my": 433, "my_api_kei": [424, 426, 427, 431, 432], "my_fun": 438, "n": [14, 15, 17, 18, 25, 30, 62, 63, 65, 66, 73, 78, 89, 95, 96, 407, 409, 424, 425, 426, 427, 432, 434, 436, 437, 438], "n1": 438, "n2": 438, "n3": 438, "n_eval_episod": 424, "n_optimization_step": 427, "n_words_offset": 112, "nafter": 438, "name": [18, 66, 92, 171, 175, 182, 183, 201, 218, 228, 231, 232, 234, 251, 268, 278, 294, 310, 323, 330, 333, 349, 365, 376, 407, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "name_scop": 232, "nameerror": [427, 432], "nanswer": 426, "natur": [426, 431, 433], "navig": [427, 433], "nbelow": 30, "nd": 427, "nearbi": 424, "nearest": 433, "nearing": 427, "necessari": [230, 424, 425, 426, 427, 432, 433], "necessarili": 424, "need": [18, 25, 59, 66, 73, 393, 419, 424, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "neg": [427, 431, 438], "negat": [174, 179, 199, 212, 249, 262, 293, 304, 348, 359, 438], "negoti": 433, "neighbor": 432, "net": [426, 437], "netflix": 437, "network": 432, "neural": 432, "never": [180, 213, 228, 232, 263, 305, 360, 416, 418], "nevertheless": 424, "new": [11, 18, 21, 29, 41, 44, 66, 69, 77, 105, 108, 180, 213, 219, 230, 263, 269, 305, 311, 360, 366, 376, 424, 426, 434, 435, 436, 437, 438], "new_map": [424, 432], "new_test_input": 431, "new_test_output": 431, "next": [424, 425, 426, 427, 435, 436], "next_agent_obs_desc": 433, "next_ob": 427, "nformat": 18, "nfunction": 18, "ngiven": [427, 438], "nhere": [14, 15, 62, 63, 95], "nhistori": 438, "nif": [18, 25, 66, 73], "nin": [25, 66, 73], "nine": 438, "niter": 436, "nmost": 438, "nnow": 78, "no_improv": 411, "no_trace_graph": [411, 432], "node": [7, 38, 55, 91, 101, 113, 118, 119, 136, 137, 161, 381, 382, 383, 384, 386, 388, 389, 395, 397, 398, 402, 406, 412, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 438], "node_a": 234, "node_b": 234, "node_dict": [23, 24, 71, 72], "node_feedback": 92, "node_getattr": 434, "node_i": 434, "node_to_function_feedback": 438, "node_x": 434, "nodecontain": [119, 434], "noisi": 437, "non": [130, 139, 149, 167, 185, 236, 278, 280, 335, 427, 438], "non_nod": 434, "non_trace_fun": 434, "none": [9, 19, 37, 47, 54, 57, 67, 80, 97, 99, 100, 115, 123, 125, 126, 134, 142, 171, 183, 185, 220, 221, 234, 236, 270, 271, 278, 280, 312, 313, 333, 335, 367, 368, 376, 386, 416, 418, 419, 424, 425, 426, 427, 431, 432, 433, 438], "nonetyp": [424, 432], "normal": [432, 434, 437], "note": [171, 172, 173, 174, 175, 178, 179, 180, 181, 185, 188, 191, 194, 195, 199, 201, 209, 210, 212, 213, 214, 215, 216, 227, 228, 230, 231, 232, 236, 239, 241, 244, 245, 249, 251, 259, 260, 262, 263, 264, 265, 266, 277, 278, 280, 283, 285, 288, 289, 293, 294, 301, 302, 304, 305, 306, 307, 308, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 335, 338, 340, 343, 344, 348, 349, 356, 357, 359, 360, 361, 362, 363, 374, 375, 376, 419, 421, 425, 426, 431, 432, 433, 436, 437], "notebook": [424, 425, 426, 431], "notebook_tqdm": 426, "noth": [427, 433], "notic": [431, 438], "noutput_format": [18, 66], "noveral": 425, "now": [424, 425, 426, 427, 431, 432, 433, 436, 437, 438], "np": [424, 427, 437, 438], "nparent": 434, "npleas": 426, "nprint": 409, "nquestion": 426, "nregular": 438, "nreturn": 427, "nscore": 438, "nsparsiti": 438, "nspecif": [25, 73], "nsuccess": 436, "ntest": 426, "nthe": [18, 426, 427], "nthi": 95, "null": 424, "num": 424, "num_each_typ": 424, "number": [112, 144, 171, 185, 236, 280, 320, 326, 335, 416, 418, 426, 428, 431, 432, 433, 436, 438], "numer": [427, 437], "numpi": [424, 427, 437, 438], "nwhen": 18, "nyou": [25, 73], "nyour": [14, 17, 62, 65], "o": [424, 425, 426, 427, 431, 432], "oai_config_list": [421, 424, 425, 426, 427, 431, 432, 438], "oai_config_list_sampl": 438, "ob": [424, 427, 432, 433], "obei": 376, "object": [13, 20, 34, 39, 40, 54, 61, 68, 100, 103, 104, 119, 127, 128, 135, 161, 171, 173, 185, 189, 191, 228, 232, 236, 240, 241, 280, 284, 285, 335, 339, 340, 376, 383, 397, 401, 419, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 438], "observ": [424, 427, 432, 433], "obsrvaiton": 427, "obtain": [426, 427, 432], "occur": [426, 427, 432], "occurr": [144, 151], "often": [424, 427, 429, 437], "oh": 431, "old": [219, 269, 311, 366, 438], "old_vari": 438, "on_button_click": [424, 426, 427, 431, 432], "on_click": [424, 426, 427, 431, 432], "onc": [427, 432, 438], "one": [178, 210, 260, 302, 357, 425, 426, 431, 432, 433, 434, 435, 437, 438], "onli": [66, 185, 232, 236, 280, 335, 419, 424, 425, 426, 427, 430, 432, 433, 436, 437, 438], "onlin": [424, 437], "onto": 433, "op": [118, 434, 435], "open": [427, 432], "openai": [419, 425, 431, 432, 437], "openai_api_kei": [424, 426, 427, 431, 432], "openaiwrapp": [418, 426], "oper": [118, 175, 181, 185, 194, 201, 203, 214, 216, 234, 236, 244, 251, 253, 264, 266, 278, 280, 288, 294, 306, 308, 335, 343, 349, 361, 363, 375, 424, 426, 427, 428, 429, 431, 435, 436, 437, 438], "operator_nam": [234, 385, 399, 403], "oppon": 432, "opportun": 424, "oppos": 426, "opro": 428, "opt": [424, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438], "optim": [129, 138, 148, 166, 169, 407, 410, 411, 418, 424, 428, 429, 430, 434, 436], "optimize_polici": 427, "optimizer1": [428, 433], "optimizer2": [428, 433], "optimizer3": 428, "optimizer_kwarg": 111, "optimz": 435, "optimzi": 435, "option": [97, 111, 146, 171, 183, 185, 234, 236, 278, 280, 320, 326, 333, 335, 376, 424, 432], "opto": [424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438], "optoprim": [424, 425, 426, 427, 428, 429, 431, 432, 433, 436, 437, 438], "order": [185, 236, 278, 280, 335, 431, 432, 434, 435, 437, 438], "organ": 228, "organiz": 433, "orient": 427, "origin": [171, 426, 427, 432, 434, 436], "other": [12, 25, 47, 60, 66, 73, 80, 89, 92, 145, 174, 179, 194, 199, 212, 214, 244, 249, 262, 264, 288, 293, 304, 306, 321, 324, 327, 331, 343, 348, 359, 361, 407, 419, 424, 426, 427, 429, 431, 432, 433, 436, 437, 438], "otherwis": [131, 171, 176, 177, 185, 194, 204, 205, 214, 236, 244, 254, 255, 264, 280, 288, 296, 297, 306, 325, 335, 343, 351, 352, 361, 375, 376, 430, 434], "our": [425, 426, 428, 429, 431, 432, 433], "out": [150, 227, 277, 319, 374, 426, 427, 429, 431, 432, 433, 438], "outcom": [424, 427, 432], "outlin": 427, "output": [12, 18, 25, 47, 59, 60, 66, 73, 80, 89, 92, 95, 118, 234, 424, 426, 427, 431, 432, 433, 434, 436, 437, 438], "output_format": [424, 426, 436, 437, 438], "outsid": [407, 432], "over": [230, 424, 425, 427, 429, 431, 432, 434], "overal": [425, 427], "overfit": 438, "overload": [209, 259, 301, 356, 434, 435], "overrid": [171, 418, 419, 435], "overridden": 419, "own": [421, 432, 433], "p": [426, 432, 434, 435, 438], "p1_inventori": 425, "p1_name": 425, "p1_prompt": 425, "p1_valu": 425, "p2_inventori": 425, "p2_name": 425, "p2_prompt": 425, "p2_valu": 425, "packag": [424, 425, 426, 427, 430, 433, 437], "page": 433, "pair": [132, 431, 437], "panda": 438, "paper": [426, 428], "param": [112, 435, 436], "paramet": [21, 26, 28, 29, 33, 35, 37, 41, 42, 43, 44, 54, 69, 74, 76, 77, 100, 105, 106, 107, 108, 111, 113, 118, 119, 130, 137, 139, 149, 165, 167, 168, 169, 171, 174, 179, 183, 185, 186, 194, 195, 198, 199, 212, 214, 215, 231, 232, 234, 236, 237, 244, 245, 248, 249, 262, 264, 265, 278, 280, 281, 288, 289, 292, 293, 304, 306, 307, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 343, 344, 347, 348, 359, 361, 362, 375, 376, 407, 416, 418, 419, 424, 426, 427, 428, 429, 431, 432, 435, 436, 437], "parametercontain": [130, 149, 163, 167], "parameternod": [10, 29, 33, 37, 44, 54, 58, 77, 100, 108, 113, 130, 139, 149, 167, 322, 324, 328, 329, 331, 376, 426, 431, 434, 438], "parameters_dict": [129, 138, 148, 166], "parent": [171, 177, 178, 185, 205, 210, 227, 236, 255, 260, 277, 280, 297, 302, 319, 335, 352, 357, 374, 384, 395, 398, 402, 434, 435, 436], "parent_feedback": [185, 236, 280, 335], "parenthes": 432, "parm": 434, "pars": [409, 425, 426, 427], "parse_ob": 427, "parsed_answ": 426, "part": [25, 73, 95, 175, 181, 201, 216, 251, 266, 294, 308, 349, 363, 424, 426, 427, 432, 435, 436, 437, 438], "particular": 427, "particularli": 427, "pass": [185, 186, 236, 237, 280, 281, 335, 336, 418, 424, 426, 431, 437, 438], "pass_through": 434, "passive_env_check": 427, "password": [424, 426, 427, 431, 432], "past": [111, 427, 431, 432], "path": [381, 427, 432], "pattern": [427, 437], "penalti": 438, "per": [424, 425, 427, 431, 432], "perceiv": 432, "percentag": 438, "perform": [185, 236, 280, 335, 424, 426, 427, 428, 431, 432, 433, 434, 435, 437, 438], "perhap": 424, "period": 426, "permut": 438, "perspect": [431, 433], "pg": 435, "phase": [427, 429], "philosophi": [431, 432], "phrase": 426, "pick": 427, "pickl": 169, "piec": 424, "pip": [424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438], "pkl": 431, "place": [152, 424, 427, 432], "place_ship": 424, "placehold": [424, 426, 427, 431, 432], "placement": 424, "plai": [425, 432], "plan": [424, 432, 433], "plate": 433, "plausibl": 426, "player": [424, 425, 426], "player_prompt": 425, "pleas": [407, 421, 426, 433, 438], "plot": [185, 236, 280, 335, 427, 437], "plt": [427, 437], "plu": [178, 210, 260, 302, 357], "point": [427, 432, 438], "polici": [427, 432], "poor": 438, "pop": 437, "popular": 429, "portion": [175, 201, 251, 294, 349], "pose": [426, 427], "posit": [118, 424, 427, 431, 432, 438], "possibl": [427, 432, 433], "possibli": [426, 427, 432], "post": [426, 429], "post1": 437, "potenti": [95, 195, 215, 245, 265, 289, 307, 344, 362, 424, 432], "power": 429, "ppo": 432, "pre": [427, 429], "precis": [426, 427], "pred": 426, "predefin": [427, 432, 437], "predict": [426, 431, 437], "predictor": 437, "prefix": [232, 419, 427], "prepar": [426, 433], "preprocess": 438, "presenc": 432, "present": [134, 146, 151, 173, 191, 241, 285, 340, 424, 432, 433, 438], "prevent": [424, 427, 432, 436], "preview": [425, 427], "previou": [230, 427, 432, 433], "previous": 230, "previous_messag": 425, "primari": 424, "primarili": 432, "primit": [429, 431, 432], "print": [185, 236, 280, 320, 323, 326, 330, 335, 409, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "print_limit": [185, 236, 280, 320, 326, 335, 391, 431, 432, 434], "print_nod": 434, "prior": [427, 433], "priorit": 424, "prioriti": [185, 236, 280, 335], "privat": 425, "probabl": 432, "problem": [14, 15, 25, 62, 63, 66, 73, 78, 112, 323, 330, 424, 426, 427, 431, 432, 435, 436, 437, 438], "problem_inst": 78, "problemat": 424, "proce": 433, "procedur": [431, 432, 433, 438], "process": [227, 277, 319, 374, 424, 425, 426, 429], "produc": [424, 425, 426, 427, 428, 429, 432, 433], "product": 438, "program": [426, 429, 430, 432], "progress": [424, 427, 433], "project": 433, "prompt": [8, 9, 56, 57, 102, 110, 111, 419, 424, 426, 429, 436, 437, 438], "prompt_symbol": 54, "prompt_templ": 426, "propag": [7, 13, 37, 38, 39, 54, 55, 61, 100, 101, 103, 181, 185, 216, 227, 236, 266, 277, 278, 280, 308, 319, 335, 363, 374, 438], "propagate_funct": [385, 399, 403], "propagated_grad": 435, "propagt": 435, "proper": [427, 432], "properli": [195, 215, 232, 245, 265, 289, 307, 344, 362, 407, 424, 427, 432], "properti": [20, 28, 34, 40, 43, 68, 76, 104, 107, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 188, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 210, 213, 215, 216, 218, 224, 233, 239, 241, 242, 245, 246, 250, 251, 252, 253, 254, 255, 260, 263, 265, 266, 268, 274, 283, 285, 286, 289, 290, 294, 295, 296, 297, 302, 305, 307, 308, 310, 316, 321, 327, 338, 340, 341, 344, 345, 349, 350, 351, 352, 357, 360, 362, 363, 365, 371, 417, 420], "propos": [425, 427, 428, 431, 435], "proposed_end": 425, "proposed_trad": 425, "provid": [127, 128, 135, 171, 185, 228, 236, 280, 320, 326, 335, 376, 419, 421, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 438], "proxim": [424, 427], "puck": 427, "puck_path": 427, "puck_po": 427, "pud": 433, "pure": [429, 437], "purpos": 433, "purppos": 435, "put": [427, 433], "py": [95, 407, 410, 426, 427], "py_nam": 171, "pydant": 437, "pypi": 437, "pyplot": [427, 437], "python": [18, 25, 66, 73, 122, 140, 182, 218, 268, 310, 323, 330, 365, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438], "python3": [426, 427, 437], "pytorch": [429, 431, 434], "quantiti": 425, "question": [25, 73, 424, 426, 436, 437, 438], "question0": 426, "question1": 426, "question2": 426, "question3": 426, "question4": 426, "question5": 426, "question6": 426, "question7": 426, "question8": 426, "queue": [185, 236, 280, 335], "quot": [407, 426], "quotat": 407, "r": [424, 426], "r1": [431, 432], "r10": 432, "r2": 432, "r3": 432, "r4": 432, "r5": 432, "r6": 432, "r7": 432, "r8": 432, "r9": 432, "rais": [131, 132, 146, 150, 151, 173, 185, 191, 236, 241, 280, 285, 335, 340, 375, 419, 425, 426, 427, 436], "ran": 428, "randint": [424, 437], "random": [419, 424, 427, 433, 437], "random_st": 438, "randomli": 433, "rang": [150, 424, 425, 426, 427, 431, 432, 433, 435, 436, 437, 438], "rather": [424, 426, 432, 434], "rational": 431, "raw": [383, 397, 401], "re": [25, 73, 424, 426, 433, 436, 437, 438], "reach": 427, "react": [432, 433], "reactiv": 432, "read": 433, "readi": 230, "readthedoc": 426, "realiz": 433, "reanalyz": 432, "reason": [66, 424, 426, 427, 431, 432, 433, 436, 437, 438], "receiv": [424, 426, 427, 432, 435, 437], "recent": [427, 438], "recent_hit": 432, "recogn": [424, 426], "recognit": 432, "recommend": [146, 427], "reconsid": 432, "record": [429, 432], "recov": 435, "recurs": [119, 383, 397, 401, 434], "reduc": [96, 110, 112, 429, 433], "refer": [171, 230, 234, 432, 435], "referenc": 432, "refin": [426, 427], "reflect": 427, "reformul": 426, "refresh": [416, 418], "regard": 427, "regex": 437, "regist": [171, 180, 213, 228, 263, 305, 360, 419], "registri": 228, "regress": 437, "regular": [375, 438], "regularization_paramet": 438, "reinforc": 427, "reiniti": 230, "reject": 425, "rel": 427, "relat": [427, 434], "relev": 426, "reli": [424, 426, 427, 430], "reliabl": 426, "remain": [427, 431, 437], "rememb": [66, 424, 426, 436, 437, 438], "remind": 427, "remov": [113, 123, 131, 132, 142, 150, 171, 180, 182, 213, 218, 228, 230, 232, 263, 268, 305, 310, 360, 365, 427, 431, 434, 437, 438], "renam": 438, "render_html": 432, "render_opt_step": [431, 432], "repeat": [112, 427, 433], "repeatedli": [427, 438], "replac": [407, 427, 433, 438], "replic": 426, "repo": 428, "repopul": 230, "report": 428, "repositori": [430, 438], "repres": [171, 234, 278, 324, 331, 424, 426, 427, 428, 429, 431, 432, 433], "represent": [171, 407, 431, 438], "request": [198, 231, 248, 292, 347, 426, 427, 437], "requir": [185, 236, 280, 335, 416, 426, 427, 428, 430, 432, 433, 437, 438], "requires_grad": 435, "resembl": 432, "reset": [31, 36, 45, 79, 109, 230, 427, 433, 435], "reset_freq": [416, 418], "reshap": 438, "resolv": [424, 436], "resourc": 425, "respect": [425, 432], "respond": [426, 427, 433], "respons": [8, 14, 16, 17, 33, 56, 62, 64, 65, 102, 419, 424, 425, 426, 427, 429, 433, 436, 437, 438], "response_desc": 95, "response_format": 425, "response_json": 425, "rest": 119, "restart": 437, "restrict": 424, "restructur": 432, "result": [25, 66, 73, 96, 185, 186, 194, 214, 236, 237, 244, 264, 280, 281, 288, 306, 335, 336, 343, 361, 424, 426, 427, 428, 431, 432, 434, 436, 437, 438], "result_valu": 425, "results_gradi": 96, "retain": [185, 236, 280, 335], "retain_graph": [185, 236, 280, 335, 431], "retri": [424, 432], "retriev": [173, 191, 228, 231, 241, 285, 340, 432], "return": [8, 13, 20, 34, 39, 40, 56, 61, 68, 102, 103, 104, 111, 112, 113, 129, 130, 131, 132, 138, 139, 144, 146, 148, 149, 150, 161, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 191, 193, 194, 198, 199, 200, 201, 204, 205, 209, 210, 212, 213, 214, 216, 218, 231, 233, 236, 237, 239, 240, 241, 243, 244, 248, 249, 250, 251, 254, 255, 259, 260, 262, 263, 264, 266, 268, 280, 281, 283, 284, 285, 287, 288, 292, 293, 294, 296, 297, 301, 302, 304, 305, 306, 308, 310, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 335, 336, 338, 339, 340, 342, 343, 347, 348, 349, 351, 352, 356, 357, 359, 360, 361, 363, 365, 375, 376, 384, 388, 395, 398, 402, 407, 416, 418, 419, 421, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "return_feedback": 438, "return_x_i": 438, "reveal": [426, 432, 433], "revers": [185, 236, 280, 335, 435], "reverse_plot": [185, 236, 280, 335, 391], "review": [427, 432], "revis": 432, "revolv": 424, "reward": [424, 427, 432, 433], "rewrit": 432, "right": [10, 58, 232, 426, 427, 431, 433], "rl": [427, 432, 433], "rlhf": 432, "robot": 427, "role": [425, 426], "room": 433, "root": [47, 92, 177, 178, 185, 205, 210, 228, 236, 255, 260, 280, 297, 302, 335, 352, 357, 438], "rotat": 427, "round": [424, 433], "routin": 435, "row": [424, 432], "rule": [425, 432, 435], "run": [230, 416, 425, 426, 427, 430, 431, 432, 433, 435, 438], "runtim": 431, "runtimeerror": 419, "saga": 438, "sai": 427, "said": 425, "sale": 429, "same": [171, 180, 213, 232, 263, 305, 360, 425, 427, 428, 431, 433, 434, 436], "sampl": [424, 437], "satisf": 436, "satisfi": [18, 66, 278, 424, 426, 427, 432, 436, 437, 438], "save": [112, 421, 424, 426, 427, 432, 438], "save_env_vari": [424, 426, 427, 431, 432], "sawyer": 427, "scale": [425, 438], "scaler": 438, "scenario": [424, 426], "scikit": [437, 438], "scipi": 437, "scope": [232, 432], "score": [424, 425, 426, 427, 438], "scorer": 438, "script": [426, 430, 433], "scroll": 432, "seamlessli": [426, 428], "search": [96, 375, 427, 433], "second": [175, 201, 251, 294, 349, 416, 418, 424, 426, 429, 435], "secret": 434, "section": [427, 431, 433], "see": [25, 73, 78, 112, 424, 426, 431, 432, 433, 435, 436, 437, 438], "seed": [425, 427, 437], "seek": [426, 432], "seem": [424, 426, 427, 431, 432], "seemingli": 432, "seen": 381, "segment": 426, "select": [424, 425, 432, 437], "select_coordin": [424, 432], "select_coordinate0": 432, "self": [174, 179, 199, 212, 249, 262, 293, 304, 348, 359, 424, 426, 427, 429, 432, 433, 434, 435], "self0": [424, 426], "self1": [424, 426], "self10": 426, "self11": 426, "self12": 426, "self2": 426, "self3": 426, "self4": 426, "self5": 426, "self6": 426, "self7": 426, "self8": 426, "self9": 426, "sell_resourc": 425, "send": [431, 433, 434], "send_messag": 433, "sent": [427, 438], "sentenc": [419, 426], "sep": [220, 270, 312, 367], "separ": 171, "seq": [207, 257, 299, 354], "sequenc": [141, 145, 426, 427, 429, 435], "sequenti": [427, 433], "seri": [427, 433], "serv": [171, 433], "set": [119, 127, 128, 133, 161, 171, 180, 200, 213, 228, 232, 250, 263, 305, 320, 321, 325, 326, 327, 332, 360, 424, 425, 426, 427, 431, 432, 434, 436, 438], "setter": 434, "setup": 432, "seven": 438, "sever": [171, 433], "shape": [321, 324, 327, 331, 438], "share": 433, "ship": [424, 432], "ship_symbol": 424, "short": [112, 431], "shot": [424, 429, 432], "shots_overlay_board": 424, "should": [18, 25, 66, 73, 227, 231, 232, 234, 277, 278, 319, 374, 376, 416, 418, 424, 426, 427, 431, 432, 433, 434, 436, 437, 438], "show": [112, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "show_ship": 432, "shown": 432, "shut": 427, "side": 432, "signal": [431, 432], "signatur": [18, 66, 424, 426, 436, 437, 438], "signifi": 427, "signific": 424, "significantli": 424, "similar": [431, 433, 438], "simpel": 435, "simpl": [190, 426, 431, 432, 435, 437, 438], "simple_visu": [185, 236, 280, 335, 391], "simpli": [431, 432, 436], "simplic": 437, "simplifi": [185, 236, 280, 335, 431, 432], "simul": [427, 432, 433, 438], "sinc": [426, 427, 432, 433, 434, 437], "singl": 437, "site": [426, 427, 437], "situat": [424, 432, 433], "six": 438, "size": [3, 424, 432], "skate": 426, "skip": [185, 236, 280, 335], "sklearn": 438, "slate": 230, "slow": 428, "slower": 428, "small": [426, 437, 438], "smallest": 437, "sniffio": 437, "snippet": 432, "so": [278, 425, 426, 427, 429, 431, 432, 435, 437], "soccer": 426, "soi": 429, "solid": [325, 332, 427], "solut": [15, 63, 112, 431], "solv": [25, 73, 424, 426, 427, 433, 436, 437, 438], "solver": 438, "some": [15, 30, 63, 132, 431, 432, 433], "sometim": [112, 427, 437], "somewhat": 427, "sonnet": 421, "soon": 433, "sophist": 424, "sort": [431, 435, 437], "sorted_lst": 431, "sota": 426, "sourc": [3, 4, 6, 9, 25, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 54, 56, 57, 58, 61, 64, 67, 70, 71, 72, 73, 75, 80, 91, 92, 93, 97, 100, 102, 110, 111, 112, 113, 115, 118, 119, 122, 130, 136, 137, 138, 139, 140, 149, 154, 156, 157, 159, 160, 161, 163, 164, 165, 168, 169, 171, 174, 179, 183, 190, 228, 230, 231, 232, 234, 278, 279, 280, 281, 282, 284, 287, 288, 291, 292, 298, 299, 300, 301, 303, 306, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 375, 376, 378, 381, 382, 383, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 421, 424, 426, 429, 436, 437, 438], "space": 427, "sparsiti": 438, "special": [429, 432, 436], "specif": [171, 227, 277, 319, 374, 375, 407, 424, 426, 427, 429, 431, 432, 436, 437, 438], "specifi": [131, 186, 198, 237, 248, 281, 292, 336, 347, 421, 424, 426, 427, 432, 433], "speed": 428, "speical": 438, "split": [175, 201, 232, 251, 294, 349, 426, 427], "sport": 426, "sports_understand": 426, "spot": 424, "squar": [113, 375, 429, 432, 435, 437], "stabl": 426, "standard": [320, 426], "standardscal": 438, "start": [146, 424, 425, 426, 427, 435, 437], "state": [230, 424, 425, 427, 432, 433, 436, 438], "statement": [194, 214, 244, 264, 288, 306, 343, 361, 426, 427, 431, 434], "static": [23, 24, 71, 72], "statu": 427, "std": 424, "stem": 432, "step": [424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "step93": 427, "step94": 427, "step_idx": 411, "step_info": 433, "stepsiz": 435, "sticki": 433, "still": [431, 433], "stockpil": 425, "stone": 425, "stop": [146, 433], "storag": 430, "store": [171, 173, 191, 224, 228, 230, 241, 274, 278, 285, 316, 340, 371, 424, 426, 427, 431, 432, 433], "stove": 433, "str": [8, 10, 16, 22, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 64, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 97, 98, 99, 100, 102, 111, 112, 113, 157, 171, 175, 180, 182, 183, 186, 201, 203, 213, 218, 231, 234, 237, 251, 253, 263, 268, 278, 281, 294, 305, 310, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 336, 349, 360, 365, 375, 376, 407, 424, 425, 426, 427, 431, 432, 434, 436, 437], "str0": 426, "str_rep": 424, "straightforward": [431, 432], "strang": [431, 437], "strange_sort_list": [428, 431, 437], "strateg": [424, 432], "strategi": [424, 427, 432, 433], "streak": 432, "string": [113, 171, 175, 183, 201, 231, 234, 251, 278, 294, 323, 325, 330, 332, 333, 349, 375, 376, 407, 419, 424, 426, 427, 428, 431, 434, 437], "stringent": 432, "strip": [424, 426, 427, 431, 432], "structur": [171, 172, 181, 188, 216, 239, 266, 278, 283, 308, 338, 363, 407, 424, 426, 438], "style": [190, 320, 321, 325, 326, 327, 332, 432, 433], "subclass": [171, 418, 434], "subgraph": 388, "subject": 426, "submarin": [424, 432], "submit": [424, 426, 427, 431, 432], "submit_button": [424, 426, 427, 431, 432], "suboptim": 427, "subscript": [424, 432], "subsequ": [425, 426, 427, 432], "substr": 426, "succe": 427, "success": [427, 431, 432, 436, 438], "successfulli": [227, 277, 319, 374, 427], "suffici": 425, "suffix": 427, "suggest": [10, 16, 18, 58, 64, 66, 424, 426, 427, 432, 436, 437, 438], "suggested_value_1": [18, 66, 424, 426, 436, 437, 438], "suggested_value_2": [18, 66, 424, 426, 436, 437, 438], "suitabl": 427, "sum": [96, 424, 426, 427, 432, 433, 435, 437, 438], "summari": [9, 19, 57, 67, 428], "sunk": 424, "super": [426, 433, 435], "support": [146, 278, 393, 418, 428, 431, 435], "suppos": [424, 427, 431], "surround": 432, "swiftli": 433, "switch": 428, "sy": 432, "symbol": [22, 70], "syntax": [18, 66, 424, 426, 432, 436, 437, 438], "syntaxerror": 432, "synthet": 431, "system": [9, 57, 95, 425, 426, 427, 429, 432], "system_prompt": [8, 56, 102, 425, 426, 429], "t": [112, 407, 424, 426, 427, 431, 432, 433], "tabl": [228, 428, 433], "tactic": 432, "tailor": 426, "take": [185, 236, 280, 335, 375, 416, 418, 419, 425, 426, 427, 429, 431, 432, 433, 438], "taken": [427, 431], "talli": 425, "tape": 429, "target": [424, 426, 427, 431, 432, 436, 437], "task": [25, 73, 424, 426, 427, 432, 433, 436, 437, 438], "task_id": 433, "tell": [432, 437], "temperatur": 425, "templat": [419, 426, 434], "ten": 438, "tend": 426, "tensor": 435, "tenth": 438, "termcolor": 437, "termin": [18, 66, 424, 425, 426, 427, 432, 436, 437, 438], "test": [230, 409, 426, 431, 437, 438], "test_accuraci": 426, "test_ground_truth": [431, 437], "test_ground_truth_input": 431, "test_input": [431, 437], "test_output": [431, 437], "test_siz": 438, "text": [10, 22, 58, 70, 112, 113, 409, 419, 424, 426, 427, 428, 431, 432, 433, 437, 438], "textgrad": [407, 410], "textual": [111, 192, 242, 286, 341], "textwrap": 426, "tgd": 111, "than": [174, 179, 199, 212, 232, 249, 262, 293, 304, 348, 359, 424, 425, 426, 428, 432, 434, 436, 438], "thei": [424, 425, 426, 432, 433, 434, 438], "them": [427, 428, 433, 434, 437], "therebi": 432, "therefor": [174, 179, 199, 212, 249, 262, 293, 304, 348, 359, 424, 427, 428, 431, 432, 433, 434, 436, 438], "thi": [15, 63, 112, 134, 169, 171, 172, 173, 174, 175, 179, 180, 181, 183, 185, 188, 191, 199, 201, 209, 212, 213, 216, 230, 231, 232, 234, 236, 239, 241, 249, 251, 259, 262, 263, 266, 278, 280, 283, 285, 293, 294, 301, 304, 305, 308, 333, 335, 338, 340, 348, 349, 356, 359, 360, 363, 407, 416, 418, 419, 421, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438], "thing": [25, 73, 111, 424, 426, 436, 437, 438], "think": [425, 431], "third": 426, "those": [25, 73, 195, 245, 289, 344, 424, 426, 427, 436, 437, 438], "though": [427, 431, 432], "thought": 433, "threadpoolctl": 437, "three": [424, 425, 427, 428, 431, 433, 438], "through": [25, 73, 185, 236, 278, 280, 335, 424, 425, 426, 427, 432, 433, 435, 436, 437, 438], "throughout": 427, "thrown": 436, "thu": [424, 427, 432, 437], "tial": 432, "tiktoken": 437, "till": 431, "time": [180, 213, 263, 305, 360, 426, 427, 428, 433, 437], "titl": 427, "todai": 419, "togeth": [427, 433], "toi": [433, 437], "token": 112, "tol": 438, "too": [427, 431], "tool": [323, 330, 429], "top": 433, "topolog": 435, "torch": 435, "total": [425, 433], "toward": [426, 427, 432, 433], "tqdm": [426, 437], "tqdmwarn": 426, "trace": [37, 113, 418, 424, 425, 428, 430, 433, 434, 436, 437, 438], "trace_fun": 434, "trace_graph": 435, "trace_nod": [173, 191, 241, 285, 340], "traceabl": 434, "tracedenv": 427, "tracegraph": [92, 382], "track": 278, "trade": 425, "train": [426, 431, 433, 438], "train_classifi": 438, "train_sampl": 438, "train_set": 426, "train_siz": 438, "train_test_split": 438, "trainabl": [29, 44, 77, 108, 130, 139, 149, 167, 171, 183, 234, 278, 325, 332, 333, 376, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "traj": 427, "transcript": 425, "transform": [432, 438], "transit": [427, 433], "translat": 427, "transpar": 435, "transport": 427, "travers": [172, 181, 188, 216, 239, 266, 283, 308, 338, 363], "treat": 424, "tri": [427, 431], "trial": 432, "trigger": 436, "trivial": 438, "true": [54, 171, 173, 174, 176, 177, 179, 185, 191, 199, 204, 205, 212, 229, 236, 241, 249, 254, 255, 262, 280, 285, 293, 296, 297, 304, 333, 335, 340, 348, 351, 352, 359, 376, 391, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "true_fun": 437, "true_func": 119, "truncat": [323, 330, 427], "truth": [426, 431], "try": [424, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "tupl": [47, 49, 119, 132, 140, 161, 386, 389, 424, 431, 434], "turn": [425, 432, 435, 438], "tutori": [424, 427, 431, 432, 433, 435], "tweak": 426, "two": [171, 174, 179, 199, 212, 249, 262, 293, 304, 348, 359, 407, 424, 425, 431, 432, 433, 434, 435, 438], "type": [10, 18, 25, 58, 66, 73, 95, 96, 111, 112, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 191, 193, 194, 198, 199, 201, 203, 204, 205, 209, 210, 212, 213, 214, 216, 218, 228, 231, 233, 236, 237, 239, 240, 241, 243, 244, 248, 249, 251, 253, 254, 255, 259, 260, 262, 263, 264, 266, 268, 278, 280, 281, 283, 284, 285, 287, 288, 292, 293, 294, 296, 297, 301, 302, 304, 305, 306, 308, 310, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 338, 339, 340, 342, 343, 347, 348, 349, 351, 352, 356, 357, 359, 360, 361, 363, 365, 375, 376, 407, 424, 425, 426, 427, 436, 437, 438], "typic": [429, 432], "typo": 427, "u": [429, 431], "un": 431, "unabl": 430, "unchang": 427, "uncheck": 433, "unclear": 426, "undefin": 427, "under": [424, 426, 427, 431, 433], "underfit": 438, "underli": [376, 432], "understand": [15, 63, 431, 437], "unexpect": 432, "unexplor": 433, "unfortun": 433, "unhelp": 426, "uniform": 427, "uniformli": 427, "unify_and_match_act": 433, "unintend": [227, 277, 319, 374], "union": [203, 253, 278], "unit": [230, 431], "uniti": 433, "unknown": [424, 432], "unless": 431, "unnecessari": 433, "unpack": 434, "unwrap": 427, "up": [11, 228, 425, 426, 427, 431, 432, 433, 437], "updat": [26, 33, 35, 42, 74, 106, 111, 118, 171, 185, 236, 280, 335, 376, 424, 426, 427, 428, 429, 431, 432, 433, 435, 437], "update_dict": [29, 44, 77, 108], "upon": 427, "urllib3": 437, "us": [20, 25, 34, 40, 47, 66, 68, 73, 95, 104, 112, 129, 138, 148, 166, 171, 174, 175, 179, 181, 185, 194, 199, 201, 212, 214, 216, 227, 228, 232, 234, 236, 244, 249, 251, 262, 264, 266, 277, 280, 288, 293, 294, 304, 306, 308, 319, 320, 322, 323, 324, 326, 328, 329, 330, 331, 335, 343, 348, 349, 359, 361, 363, 374, 375, 386, 393, 407, 416, 418, 419, 424, 426, 428, 429, 430, 433, 435, 436, 437, 438], "usag": [407, 410, 432], "used_nod": [173, 191, 241, 285, 340], "user": [9, 57, 418, 424, 425, 426, 428, 429, 431, 432, 438], "user_fb_for_placing_shot": [424, 432], "user_feedback": [47, 386, 435, 438], "user_instal": 426, "user_nam": 429, "user_prompt": [8, 56, 102, 426], "user_queri": 429, "userwarn": 427, "usual": [426, 429], "util": [426, 427, 431, 432, 434, 438], "v": [131, 132, 134, 427, 432, 435, 438], "v1": 427, "v2": 427, "vagu": [427, 438], "val": 434, "valid": [231, 419, 424, 425, 426, 427, 428, 431, 432, 438], "valu": [18, 25, 59, 66, 73, 111, 112, 122, 125, 131, 132, 141, 144, 146, 147, 151, 171, 183, 194, 195, 209, 214, 215, 231, 234, 244, 245, 259, 264, 265, 278, 288, 289, 301, 306, 307, 333, 343, 344, 356, 361, 362, 384, 395, 398, 402, 407, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "value_scal": 425, "valueerror": [146, 151, 375, 436], "vanilla": 435, "vari": [427, 432], "variabl": [11, 12, 18, 25, 30, 59, 60, 66, 73, 80, 89, 92, 111, 112, 232, 424, 425, 426, 427, 429, 431, 432, 435, 436, 437, 438], "variable_1": [18, 66, 424, 426, 436, 437, 438], "variable_2": [18, 66, 424, 426, 436, 437, 438], "variable_desc": 95, "variable_nam": [25, 73, 424, 426, 436, 437, 438], "variou": [181, 216, 266, 308, 363, 421, 427, 432], "ve": [427, 432], "vector": 427, "verb": 426, "verbos": [8, 56, 102, 424, 425, 426, 427, 432, 433, 436, 437, 438], "veri": [112, 428, 431, 433], "verifier_optim": 431, "verifier_pass": 431, "version": [112, 171, 419, 424, 427, 430, 432, 438], "via": [428, 433, 438], "viabl": 424, "video": 433, "view": [127, 128, 135, 433], "virtual": 433, "virtualhomeenv": 433, "visibl": [195, 200, 245, 250, 278, 289, 344], "visual": [185, 236, 280, 320, 321, 323, 326, 327, 330, 335, 425, 431, 435, 438], "visualize_board": 424, "visualize_own_board": 424, "visualize_shot": 424, "vv": 438, "wa": [424, 426, 427, 428, 432, 437], "wai": [320, 425, 432, 434, 435, 436, 437, 438], "walk": [425, 426, 433], "walktoward": 433, "want": [112, 421, 430, 434, 438], "warn": [376, 427], "watch": 431, "watson": 426, "we": [95, 96, 112, 209, 259, 301, 356, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "well": [426, 427, 431], "were": [427, 432, 433], "what": [66, 407, 424, 426, 435, 436, 437, 438], "when": [66, 112, 180, 213, 234, 263, 305, 360, 419, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "where": [171, 231, 384, 395, 398, 402, 424, 426, 427, 429, 431, 432, 433, 434, 437], "whether": [111, 171, 183, 234, 278, 333, 376, 419, 426, 427, 428, 431, 432, 433], "which": [25, 73, 163, 171, 175, 201, 228, 251, 294, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 349, 416, 418, 424, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "while": [324, 331, 424, 425, 426, 427, 431, 432, 433, 434, 435, 437, 438], "whitespac": 432, "who": [195, 245, 289, 344, 426], "whose": [434, 438], "why": 431, "widget": [424, 426, 427, 431, 432], "width": [327, 424], "wikipedia": 429, "wine": 433, "within": [171, 173, 191, 227, 231, 241, 277, 285, 319, 340, 374, 388, 427, 431, 432, 434, 435], "without": [18, 66, 171, 424, 426, 427, 431, 432, 433, 436, 437, 438], "wolfram": 429, "wonder": 431, "wood": 425, "word": [112, 426], "work": [25, 73, 424, 426, 427, 431, 433, 434, 436, 437, 438], "workflow": [426, 428, 429, 431, 435], "world": [433, 434], "would": [409, 424, 425, 432, 434, 435, 438], "wouldn": 432, "wow": 431, "wrap": [169, 186, 237, 281, 336, 426, 428, 429, 431, 432, 434], "wrapped_dict": 159, "wrapped_list": 160, "wrapper": [418, 427, 432, 436], "write": [18, 66, 424, 426, 428, 429, 431, 432, 435, 436, 437, 438], "written": [426, 429, 438], "wrong": [426, 431], "wrote": 431, "x": [161, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 378, 424, 427, 431, 432, 434, 435, 437, 438], "x0": 409, "x1": 409, "x2": 409, "x3": 409, "x_clone": 434, "x_detach": 434, "x_plus_i": 434, "x_train": 438, "x_valid": 438, "xgboost": 437, "xlabel": [427, 437], "xxx": 421, "xy": 434, "y": [424, 427, 431, 434, 435, 437, 438], "y2": 434, "y_hat": 437, "y_train": 438, "y_valid": 438, "ye": [419, 426, 431], "yes_or_no_choic": 419, "yes_or_no_filt": 419, "yield": [433, 438], "ylabel": [427, 437], "you": [15, 18, 25, 59, 63, 66, 73, 78, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438], "your": [18, 66, 421, 424, 425, 426, 427, 431, 432, 433, 436, 437, 438], "z": [426, 427, 434], "z2": 434, "zero": [227, 277, 319, 374, 424, 427, 434, 438], "zero_feedback": [424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "zip": [434, 435, 437], "zou": 95}, "titles": ["opto", "opto.optimizers", "opto.optimizers.buffers", "opto.optimizers.buffers.FIFOBuffer", "opto.optimizers.buffers.FIFOBuffer.add", "opto.optimizers.opro", "opto.optimizers.opro.OPRO", "opto.optimizers.opro.OPRO.backward", "opto.optimizers.opro.OPRO.call_llm", "opto.optimizers.opro.OPRO.construct_prompt", "opto.optimizers.opro.OPRO.construct_update_dict", "opto.optimizers.opro.OPRO.default_objective", "opto.optimizers.opro.OPRO.default_prompt_symbols", "opto.optimizers.opro.OPRO.default_propagator", "opto.optimizers.opro.OPRO.example_problem_template", "opto.optimizers.opro.OPRO.example_prompt", "opto.optimizers.opro.OPRO.extract_llm_suggestion", "opto.optimizers.opro.OPRO.final_prompt", "opto.optimizers.opro.OPRO.output_format_prompt", "opto.optimizers.opro.OPRO.problem_instance", "opto.optimizers.opro.OPRO.propagator", "opto.optimizers.opro.OPRO.propose", "opto.optimizers.opro.OPRO.replace_symbols", "opto.optimizers.opro.OPRO.repr_node_constraint", "opto.optimizers.opro.OPRO.repr_node_value", "opto.optimizers.opro.OPRO.representation_prompt", "opto.optimizers.opro.OPRO.step", "opto.optimizers.opro.OPRO.summarize", "opto.optimizers.opro.OPRO.trace_graph", "opto.optimizers.opro.OPRO.update", "opto.optimizers.opro.OPRO.user_prompt_template", "opto.optimizers.opro.OPRO.zero_feedback", "opto.optimizers.optimizer", "opto.optimizers.optimizer.AbstractOptimizer", "opto.optimizers.optimizer.AbstractOptimizer.propagator", "opto.optimizers.optimizer.AbstractOptimizer.step", "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", "opto.optimizers.optimizer.Optimizer", "opto.optimizers.optimizer.Optimizer.backward", "opto.optimizers.optimizer.Optimizer.default_propagator", "opto.optimizers.optimizer.Optimizer.propagator", "opto.optimizers.optimizer.Optimizer.propose", "opto.optimizers.optimizer.Optimizer.step", "opto.optimizers.optimizer.Optimizer.trace_graph", "opto.optimizers.optimizer.Optimizer.update", "opto.optimizers.optimizer.Optimizer.zero_feedback", "opto.optimizers.optoprime", "opto.optimizers.optoprime.FunctionFeedback", "opto.optimizers.optoprime.FunctionFeedback.documentation", "opto.optimizers.optoprime.FunctionFeedback.graph", "opto.optimizers.optoprime.FunctionFeedback.others", "opto.optimizers.optoprime.FunctionFeedback.output", "opto.optimizers.optoprime.FunctionFeedback.roots", "opto.optimizers.optoprime.FunctionFeedback.user_feedback", "opto.optimizers.optoprime.OptoPrime", "opto.optimizers.optoprime.OptoPrime.backward", "opto.optimizers.optoprime.OptoPrime.call_llm", "opto.optimizers.optoprime.OptoPrime.construct_prompt", "opto.optimizers.optoprime.OptoPrime.construct_update_dict", "opto.optimizers.optoprime.OptoPrime.default_objective", "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", "opto.optimizers.optoprime.OptoPrime.default_propagator", "opto.optimizers.optoprime.OptoPrime.example_problem_template", "opto.optimizers.optoprime.OptoPrime.example_prompt", "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", "opto.optimizers.optoprime.OptoPrime.final_prompt", "opto.optimizers.optoprime.OptoPrime.output_format_prompt", "opto.optimizers.optoprime.OptoPrime.problem_instance", "opto.optimizers.optoprime.OptoPrime.propagator", "opto.optimizers.optoprime.OptoPrime.propose", "opto.optimizers.optoprime.OptoPrime.replace_symbols", "opto.optimizers.optoprime.OptoPrime.repr_node_constraint", "opto.optimizers.optoprime.OptoPrime.repr_node_value", "opto.optimizers.optoprime.OptoPrime.representation_prompt", "opto.optimizers.optoprime.OptoPrime.step", "opto.optimizers.optoprime.OptoPrime.summarize", "opto.optimizers.optoprime.OptoPrime.trace_graph", "opto.optimizers.optoprime.OptoPrime.update", "opto.optimizers.optoprime.OptoPrime.user_prompt_template", "opto.optimizers.optoprime.OptoPrime.zero_feedback", "opto.optimizers.optoprime.ProblemInstance", "opto.optimizers.optoprime.ProblemInstance.code", "opto.optimizers.optoprime.ProblemInstance.constraints", "opto.optimizers.optoprime.ProblemInstance.documentation", "opto.optimizers.optoprime.ProblemInstance.feedback", "opto.optimizers.optoprime.ProblemInstance.inputs", "opto.optimizers.optoprime.ProblemInstance.instruction", "opto.optimizers.optoprime.ProblemInstance.others", "opto.optimizers.optoprime.ProblemInstance.outputs", "opto.optimizers.optoprime.ProblemInstance.problem_template", "opto.optimizers.optoprime.ProblemInstance.variables", "opto.optimizers.optoprime.get_fun_name", "opto.optimizers.optoprime.node_to_function_feedback", "opto.optimizers.optoprime.repr_function_call", "opto.optimizers.textgrad", "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", "opto.optimizers.textgrad.GradientInfo", "opto.optimizers.textgrad.GradientInfo.gradient", "opto.optimizers.textgrad.GradientInfo.gradient_context", "opto.optimizers.textgrad.TextGrad", "opto.optimizers.textgrad.TextGrad.backward", "opto.optimizers.textgrad.TextGrad.call_llm", "opto.optimizers.textgrad.TextGrad.default_propagator", "opto.optimizers.textgrad.TextGrad.propagator", "opto.optimizers.textgrad.TextGrad.propose", "opto.optimizers.textgrad.TextGrad.step", "opto.optimizers.textgrad.TextGrad.trace_graph", "opto.optimizers.textgrad.TextGrad.update", "opto.optimizers.textgrad.TextGrad.zero_feedback", "opto.optimizers.textgrad.construct_reduce_prompt", "opto.optimizers.textgrad.construct_tgd_prompt", "opto.optimizers.textgrad.get_short_value", "opto.optimizers.textgrad.rm_node_attrs", "opto.optimizers.utils", "opto.optimizers.utils.print_color", "opto.trace", "opto.trace.broadcast", "opto.trace.broadcast.apply_op", "opto.trace.broadcast.recursive_conversion", "opto.trace.bundle", "opto.trace.containers", "opto.trace.containers.Map", "opto.trace.containers.Map.clear", "opto.trace.containers.Map.copy", "opto.trace.containers.Map.fromkeys", "opto.trace.containers.Map.get", "opto.trace.containers.Map.items", "opto.trace.containers.Map.keys", "opto.trace.containers.Map.parameters", "opto.trace.containers.Map.parameters_dict", "opto.trace.containers.Map.pop", "opto.trace.containers.Map.popitem", "opto.trace.containers.Map.setdefault", "opto.trace.containers.Map.update", "opto.trace.containers.Map.values", "opto.trace.containers.NodeContainer", "opto.trace.containers.ParameterContainer", "opto.trace.containers.ParameterContainer.parameters", "opto.trace.containers.ParameterContainer.parameters_dict", "opto.trace.containers.Seq", "opto.trace.containers.Seq.append", "opto.trace.containers.Seq.clear", "opto.trace.containers.Seq.copy", "opto.trace.containers.Seq.count", "opto.trace.containers.Seq.extend", "opto.trace.containers.Seq.index", "opto.trace.containers.Seq.insert", "opto.trace.containers.Seq.parameters", "opto.trace.containers.Seq.parameters_dict", "opto.trace.containers.Seq.pop", "opto.trace.containers.Seq.remove", "opto.trace.containers.Seq.reverse", "opto.trace.containers.Seq.sort", "opto.trace.containers.trainable_method", "opto.trace.errors", "opto.trace.errors.ExecutionError", "opto.trace.errors.TraceMissingInputsError", "opto.trace.iterators", "opto.trace.iterators.DictIterable", "opto.trace.iterators.SeqIterable", "opto.trace.iterators.iterate", "opto.trace.modules", "opto.trace.modules.Module", "opto.trace.modules.Module.forward", "opto.trace.modules.Module.load", "opto.trace.modules.Module.parameters", "opto.trace.modules.Module.parameters_dict", "opto.trace.modules.Module.save", "opto.trace.modules.model", "opto.trace.nodes", "opto.trace.nodes.AbstractNode", "opto.trace.nodes.AbstractNode.children", "opto.trace.nodes.AbstractNode.data", "opto.trace.nodes.AbstractNode.gt", "opto.trace.nodes.AbstractNode.id", "opto.trace.nodes.AbstractNode.is_leaf", "opto.trace.nodes.AbstractNode.is_root", "opto.trace.nodes.AbstractNode.level", "opto.trace.nodes.AbstractNode.lt", "opto.trace.nodes.AbstractNode.name", "opto.trace.nodes.AbstractNode.parents", "opto.trace.nodes.AbstractNode.py_name", "opto.trace.nodes.ExceptionNode", "opto.trace.nodes.ExceptionNode.append", "opto.trace.nodes.ExceptionNode.backward", "opto.trace.nodes.ExceptionNode.call", "opto.trace.nodes.ExceptionNode.capitalize", "opto.trace.nodes.ExceptionNode.children", "opto.trace.nodes.ExceptionNode.clone", "opto.trace.nodes.ExceptionNode.create_feedback", "opto.trace.nodes.ExceptionNode.data", "opto.trace.nodes.ExceptionNode.description", "opto.trace.nodes.ExceptionNode.detach", "opto.trace.nodes.ExceptionNode.eq", "opto.trace.nodes.ExceptionNode.expandable_dependencies", "opto.trace.nodes.ExceptionNode.feedback", "opto.trace.nodes.ExceptionNode.format", "opto.trace.nodes.ExceptionNode.getattr", "opto.trace.nodes.ExceptionNode.gt", "opto.trace.nodes.ExceptionNode.hidden_dependencies", "opto.trace.nodes.ExceptionNode.id", "opto.trace.nodes.ExceptionNode.info", "opto.trace.nodes.ExceptionNode.inputs", "opto.trace.nodes.ExceptionNode.is_leaf", "opto.trace.nodes.ExceptionNode.is_root", "opto.trace.nodes.ExceptionNode.items", "opto.trace.nodes.ExceptionNode.join", "opto.trace.nodes.ExceptionNode.keys", "opto.trace.nodes.ExceptionNode.len", "opto.trace.nodes.ExceptionNode.level", "opto.trace.nodes.ExceptionNode.lower", "opto.trace.nodes.ExceptionNode.lt", "opto.trace.nodes.ExceptionNode.name", "opto.trace.nodes.ExceptionNode.neq", "opto.trace.nodes.ExceptionNode.parameter_dependencies", "opto.trace.nodes.ExceptionNode.parents", "opto.trace.nodes.ExceptionNode.pop", "opto.trace.nodes.ExceptionNode.py_name", "opto.trace.nodes.ExceptionNode.replace", "opto.trace.nodes.ExceptionNode.split", "opto.trace.nodes.ExceptionNode.strip", "opto.trace.nodes.ExceptionNode.swapcase", "opto.trace.nodes.ExceptionNode.title", "opto.trace.nodes.ExceptionNode.type", "opto.trace.nodes.ExceptionNode.upper", "opto.trace.nodes.ExceptionNode.values", "opto.trace.nodes.ExceptionNode.zero_feedback", "opto.trace.nodes.Graph", "opto.trace.nodes.Graph.TRACE", "opto.trace.nodes.Graph.clear", "opto.trace.nodes.Graph.get", "opto.trace.nodes.Graph.register", "opto.trace.nodes.Graph.roots", "opto.trace.nodes.MessageNode", "opto.trace.nodes.MessageNode.append", "opto.trace.nodes.MessageNode.backward", "opto.trace.nodes.MessageNode.call", "opto.trace.nodes.MessageNode.capitalize", "opto.trace.nodes.MessageNode.children", "opto.trace.nodes.MessageNode.clone", "opto.trace.nodes.MessageNode.data", "opto.trace.nodes.MessageNode.description", "opto.trace.nodes.MessageNode.detach", "opto.trace.nodes.MessageNode.eq", "opto.trace.nodes.MessageNode.expandable_dependencies", "opto.trace.nodes.MessageNode.feedback", "opto.trace.nodes.MessageNode.format", "opto.trace.nodes.MessageNode.getattr", "opto.trace.nodes.MessageNode.gt", "opto.trace.nodes.MessageNode.hidden_dependencies", "opto.trace.nodes.MessageNode.id", "opto.trace.nodes.MessageNode.info", "opto.trace.nodes.MessageNode.inputs", "opto.trace.nodes.MessageNode.is_leaf", "opto.trace.nodes.MessageNode.is_root", "opto.trace.nodes.MessageNode.items", "opto.trace.nodes.MessageNode.join", "opto.trace.nodes.MessageNode.keys", "opto.trace.nodes.MessageNode.len", "opto.trace.nodes.MessageNode.level", "opto.trace.nodes.MessageNode.lower", "opto.trace.nodes.MessageNode.lt", "opto.trace.nodes.MessageNode.name", "opto.trace.nodes.MessageNode.neq", "opto.trace.nodes.MessageNode.parameter_dependencies", "opto.trace.nodes.MessageNode.parents", "opto.trace.nodes.MessageNode.pop", "opto.trace.nodes.MessageNode.py_name", "opto.trace.nodes.MessageNode.replace", "opto.trace.nodes.MessageNode.split", "opto.trace.nodes.MessageNode.strip", "opto.trace.nodes.MessageNode.swapcase", "opto.trace.nodes.MessageNode.title", "opto.trace.nodes.MessageNode.type", "opto.trace.nodes.MessageNode.upper", "opto.trace.nodes.MessageNode.values", "opto.trace.nodes.MessageNode.zero_feedback", "opto.trace.nodes.Node", "opto.trace.nodes.Node.append", "opto.trace.nodes.Node.backward", "opto.trace.nodes.Node.call", "opto.trace.nodes.Node.capitalize", "opto.trace.nodes.Node.children", "opto.trace.nodes.Node.clone", "opto.trace.nodes.Node.data", "opto.trace.nodes.Node.description", "opto.trace.nodes.Node.detach", "opto.trace.nodes.Node.eq", "opto.trace.nodes.Node.expandable_dependencies", "opto.trace.nodes.Node.feedback", "opto.trace.nodes.Node.format", "opto.trace.nodes.Node.getattr", "opto.trace.nodes.Node.gt", "opto.trace.nodes.Node.id", "opto.trace.nodes.Node.info", "opto.trace.nodes.Node.is_leaf", "opto.trace.nodes.Node.is_root", "opto.trace.nodes.Node.items", "opto.trace.nodes.Node.join", "opto.trace.nodes.Node.keys", "opto.trace.nodes.Node.len", "opto.trace.nodes.Node.level", "opto.trace.nodes.Node.lower", "opto.trace.nodes.Node.lt", "opto.trace.nodes.Node.name", "opto.trace.nodes.Node.neq", "opto.trace.nodes.Node.parameter_dependencies", "opto.trace.nodes.Node.parents", "opto.trace.nodes.Node.pop", "opto.trace.nodes.Node.py_name", "opto.trace.nodes.Node.replace", "opto.trace.nodes.Node.split", "opto.trace.nodes.Node.strip", "opto.trace.nodes.Node.swapcase", "opto.trace.nodes.Node.title", "opto.trace.nodes.Node.type", "opto.trace.nodes.Node.upper", "opto.trace.nodes.Node.values", "opto.trace.nodes.Node.zero_feedback", "opto.trace.nodes.NodeVizStyleGuide", "opto.trace.nodes.NodeVizStyleGuide.get_attrs", "opto.trace.nodes.NodeVizStyleGuide.get_color", "opto.trace.nodes.NodeVizStyleGuide.get_label", "opto.trace.nodes.NodeVizStyleGuide.get_node_shape", "opto.trace.nodes.NodeVizStyleGuide.get_style", "opto.trace.nodes.NodeVizStyleGuideColorful", "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", "opto.trace.nodes.NodeVizStyleGuideColorful.get_color", "opto.trace.nodes.NodeVizStyleGuideColorful.get_label", "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", "opto.trace.nodes.NodeVizStyleGuideColorful.get_style", "opto.trace.nodes.ParameterNode", "opto.trace.nodes.ParameterNode.append", "opto.trace.nodes.ParameterNode.backward", "opto.trace.nodes.ParameterNode.call", "opto.trace.nodes.ParameterNode.capitalize", "opto.trace.nodes.ParameterNode.children", "opto.trace.nodes.ParameterNode.clone", "opto.trace.nodes.ParameterNode.data", "opto.trace.nodes.ParameterNode.description", "opto.trace.nodes.ParameterNode.detach", "opto.trace.nodes.ParameterNode.eq", "opto.trace.nodes.ParameterNode.expandable_dependencies", "opto.trace.nodes.ParameterNode.feedback", "opto.trace.nodes.ParameterNode.format", "opto.trace.nodes.ParameterNode.getattr", "opto.trace.nodes.ParameterNode.gt", "opto.trace.nodes.ParameterNode.id", "opto.trace.nodes.ParameterNode.info", "opto.trace.nodes.ParameterNode.is_leaf", "opto.trace.nodes.ParameterNode.is_root", "opto.trace.nodes.ParameterNode.items", "opto.trace.nodes.ParameterNode.join", "opto.trace.nodes.ParameterNode.keys", "opto.trace.nodes.ParameterNode.len", "opto.trace.nodes.ParameterNode.level", "opto.trace.nodes.ParameterNode.lower", "opto.trace.nodes.ParameterNode.lt", "opto.trace.nodes.ParameterNode.name", "opto.trace.nodes.ParameterNode.neq", "opto.trace.nodes.ParameterNode.parameter_dependencies", "opto.trace.nodes.ParameterNode.parents", "opto.trace.nodes.ParameterNode.pop", "opto.trace.nodes.ParameterNode.py_name", "opto.trace.nodes.ParameterNode.replace", "opto.trace.nodes.ParameterNode.split", "opto.trace.nodes.ParameterNode.strip", "opto.trace.nodes.ParameterNode.swapcase", "opto.trace.nodes.ParameterNode.title", "opto.trace.nodes.ParameterNode.type", "opto.trace.nodes.ParameterNode.upper", "opto.trace.nodes.ParameterNode.values", "opto.trace.nodes.ParameterNode.zero_feedback", "opto.trace.nodes.get_op_name", "opto.trace.nodes.node", "opto.trace.operators", "opto.trace.operators.identity", "opto.trace.propagators", "opto.trace.propagators.graph_propagator", "opto.trace.propagators.graph_propagator.GraphPropagator", "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", "opto.trace.propagators.graph_propagator.GraphPropagator.propagate", "opto.trace.propagators.graph_propagator.GraphPropagator.register", "opto.trace.propagators.graph_propagator.TraceGraph", "opto.trace.propagators.graph_propagator.TraceGraph.empty", "opto.trace.propagators.graph_propagator.TraceGraph.expand", "opto.trace.propagators.graph_propagator.TraceGraph.graph", "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", "opto.trace.propagators.graph_propagator.TraceGraph.visualize", "opto.trace.propagators.propagators", "opto.trace.propagators.propagators.AbstractFeedback", "opto.trace.propagators.propagators.AbstractPropagator", "opto.trace.propagators.propagators.AbstractPropagator.propagate", "opto.trace.propagators.propagators.Propagator", "opto.trace.propagators.propagators.Propagator.init_feedback", "opto.trace.propagators.propagators.Propagator.propagate", "opto.trace.propagators.propagators.Propagator.register", "opto.trace.propagators.propagators.SumPropagator", "opto.trace.propagators.propagators.SumPropagator.init_feedback", "opto.trace.propagators.propagators.SumPropagator.propagate", "opto.trace.propagators.propagators.SumPropagator.register", "opto.trace.stop_tracing", "opto.trace.utils", "opto.trace.utils.contain", "opto.trace.utils.escape_json_nested_quotes", "opto.trace.utils.for_all_methods", "opto.trace.utils.parse_eqs_to_dict", "opto.trace.utils.remove_non_ascii", "opto.trace.utils.render_opt_step", "opto.trace.utils.sum_feedback", "opto.trace.utils.test_json_quote_escaper", "opto.utils", "opto.utils.llm", "opto.utils.llm.AbstractModel", "opto.utils.llm.AbstractModel.model", "opto.utils.llm.AutoGenLLM", "opto.utils.llm.AutoGenLLM.create", "opto.utils.llm.AutoGenLLM.model", "opto.utils.llm.auto_construct_oai_config_list_from_env", "opto.version", "API documentation", "Single Agent: Battleship", "Multi-Agent: Negotiation Arena", "BigBench-Hard", "Meta-World", "FAQ", "\ud83c\udfaf Trace", "\ud83c\udf10  Installation", "\u26a1\ufe0f First: 5-Minute Basics", "\ud83d\ude80 Next: Adaptive Agent", "\ud83e\udd2f Finally: Emergent Behaviors", "Basics", "Building Custom Optimizer", "Error Handling", "Batch Optimization", "Optimization"], "titleterms": {"": [431, 433], "1": 435, "2": 435, "5": 431, "A": 432, "The": [431, 432], "abstractfeedback": 393, "abstractmodel": [416, 417], "abstractnod": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "abstractoptim": [33, 34, 35, 36], "abstractpropag": [394, 395], "action": 432, "ad": 438, "adapt": 432, "add": 4, "ag2": 428, "agent": [424, 425, 432, 433], "aggreg": 382, "all": [424, 426], "an": 432, "api": 423, "append": [141, 184, 235, 279, 334], "apply_op": 118, "architectur": 433, "arena": 425, "auto_construct_oai_config_list_from_env": 421, "autogen": 428, "autogenllm": [418, 419, 420], "back": 435, "backpropag": 438, "backward": [7, 38, 55, 101, 185, 236, 280, 335], "base": 435, "basic": [431, 434, 435], "batch": 437, "battleship": [424, 432], "battleshipboard": 424, "behavior": 433, "bigbench": 426, "broadcast": [117, 118, 119, 434], "buffer": [2, 3, 4], "build": 435, "bundl": [120, 425, 434], "call": [186, 237, 281, 336], "call_llm": [8, 56, 102], "capit": [187, 238, 282, 337], "chat": 425, "children": [172, 188, 239, 283, 338], "class": [424, 426], "clear": [123, 142, 230], "clone": [189, 240, 284, 339], "code": 81, "coder": 431, "command": 430, "commut": 437, "compon": 425, "constraint": [82, 438], "construct_prompt": [9, 57], "construct_reduce_prompt": 110, "construct_tgd_prompt": 111, "construct_update_dict": [10, 58], "contain": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 406], "copi": [124, 143], "count": 144, "creat": [419, 424], "create_feedback": 190, "custom": [434, 435], "data": [173, 191, 241, 285, 340, 434], "default_object": [11, 59], "default_prompt_symbol": [12, 60], "default_propag": [13, 39, 61, 103], "defin": [424, 425, 426, 432], "descent": 435, "descript": [192, 242, 286, 341], "detach": [193, 243, 287, 342], "develop": 430, "dictiter": 159, "did": 432, "differ": 428, "document": [48, 83, 423], "emerg": 433, "empti": 387, "end_gam": 425, "environ": [424, 427], "eq": [194, 244, 288, 343], "error": [155, 156, 157, 436], "escape_json_nested_quot": 407, "evalu": [424, 426], "exampl": 438, "example_problem_templ": [14, 62], "example_prompt": [15, 63], "exceptionnod": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "execut": 427, "executionerror": 156, "expand": 388, "expandable_depend": [195, 245, 289, 344], "extend": 145, "extract_llm_suggest": [16, 64], "faq": 428, "feedback": [84, 196, 246, 290, 345, 431, 437], "fifobuff": [3, 4], "final": 433, "final_prompt": [17, 65], "first": 431, "for_all_method": 408, "format": [197, 247, 291, 346], "forward": 164, "framework": 431, "fromkei": 125, "full": 438, "function": [424, 425, 426, 427, 431, 438], "functionfeedback": [47, 48, 49, 50, 51, 52, 53], "game": [425, 432], "get": [126, 231], "get_attr": [321, 327], "get_border_color": 328, "get_color": [322, 329], "get_fun_nam": 91, "get_label": [323, 330], "get_node_shap": [324, 331], "get_op_nam": 375, "get_short_valu": 112, "get_styl": [325, 332], "getattr": [198, 248, 292, 347], "gradient": [98, 435], "gradient_context": 99, "gradient_multipart_templ": 95, "gradient_of_results_instruct": 96, "gradientinfo": [97, 98, 99], "graph": [49, 228, 229, 230, 231, 232, 233, 389, 432, 434], "graph_propag": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "graphpropag": [381, 382, 383, 384, 385], "gt": [174, 199, 249, 293, 348], "handl": 436, "hard": 426, "helper": [424, 425, 426], "hidden_depend": [200, 250], "hyper": 438, "i": 431, "id": [175, 201, 251, 294, 349], "ident": 378, "implement": 435, "index": 146, "info": [202, 252, 295, 350], "init_feedback": [383, 397, 401], "initi": 424, "input": [85, 203, 253], "insert": 147, "instal": [424, 427, 430], "instruct": 86, "introduct": [424, 425, 426, 427], "is_leaf": [176, 204, 254, 296, 351], "is_root": [177, 205, 255, 297, 352], "item": [127, 206, 256, 298, 353], "iter": [158, 159, 160, 161], "join": [207, 257, 299, 354], "kei": [128, 208, 258, 300, 355], "learn": 432, "len": [209, 259, 301, 356], "level": [178, 210, 260, 302, 357], "librari": 428, "like": 428, "llama": 428, "llm": [415, 416, 417, 418, 419, 420, 421], "load": [165, 431], "loop": 438, "lower": [211, 261, 303, 358], "lt": [179, 212, 262, 304, 359], "map": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "messagenod": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 434], "meta": 427, "minut": 431, "ml": 438, "model": [169, 417, 420, 438], "modul": [162, 163, 164, 165, 166, 167, 168, 169], "multi": [425, 433], "multipl": 424, "name": [180, 213, 263, 305, 360], "negoti": 425, "neq": [214, 264, 306, 361], "next": [431, 432, 433], "node": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 434], "node_to_function_feedback": 92, "nodecontain": 136, "nodevizstyleguid": [320, 321, 322, 323, 324, 325], "nodevizstyleguidecolor": [326, 327, 328, 329, 330, 331, 332], "non": 437, "normal": 431, "object": 435, "openai": 428, "oper": [377, 378, 434], "opro": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "optim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 425, 426, 427, 431, 432, 433, 435, 437, 438], "opto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "optoprim": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "other": [50, 87], "output": [51, 88], "output_format_prompt": [18, 66], "paramet": [129, 138, 148, 166, 438], "parameter_depend": [215, 265, 307, 362], "parametercontain": [137, 138, 139], "parameternod": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "parameters_dict": [130, 139, 149, 167], "parent": [181, 216, 266, 308, 363], "parse_eqs_to_dict": 409, "polici": 424, "pop": [131, 150, 217, 267, 309, 364], "popitem": 132, "print_color": 115, "pro": 433, "problem_inst": [19, 67], "problem_templ": 89, "probleminst": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "process": [427, 432], "program": 431, "prompt": 425, "propag": [20, 34, 40, 68, 104, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 435], "propos": [21, 41, 69, 105], "put": [424, 426], "py_nam": [182, 218, 268, 310, 365], "python": [431, 434], "pytorch": 435, "record": 433, "recursive_convers": 119, "regist": [232, 385, 399, 403], "reinforc": 432, "remov": 151, "remove_non_ascii": 410, "render_opt_step": 411, "replac": [219, 269, 311, 366], "replace_symbol": [22, 70], "repr_function_cal": 93, "repr_node_constraint": [23, 71], "repr_node_valu": [24, 72], "representation_prompt": [25, 73], "result": 433, "revers": 152, "rm_node_attr": 113, "rollout": [424, 427], "root": [52, 233], "runnabl": 431, "save": [168, 431], "seq": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "seqiter": 160, "set": 435, "setdefault": 133, "setup": [424, 425, 426, 427], "singl": 424, "social": 433, "sort": 153, "split": [220, 270, 312, 367], "stack": 428, "start": 431, "step": [26, 35, 42, 74, 106], "stop_trac": 404, "string": 438, "strip": [221, 271, 313, 368], "structur": 434, "sum_feedback": 412, "summar": [27, 75], "sumpropag": [400, 401, 402, 403], "swapcas": [222, 272, 314, 369], "swarm": 428, "synchron": 433, "test_json_quote_escap": 413, "textgrad": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 428], "thi": 431, "titl": [223, 273, 315, 370], "togeth": [424, 426], "trace": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 426, 427, 429, 431, 432, 435], "trace_graph": [28, 43, 76, 107], "tracegraph": [386, 387, 388, 389, 390, 391], "tracemissinginputserror": 157, "trainabl": 424, "trainable_method": 154, "type": [224, 274, 316, 371], "up": 435, "updat": [29, 44, 77, 108, 134], "upper": [225, 275, 317, 372], "us": [425, 427, 431, 432, 434], "user_feedback": [53, 390], "user_prompt_templ": [30, 78], "util": [114, 115, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "valu": [135, 226, 276, 318, 373], "variabl": 90, "verifi": 431, "version": [422, 435], "virtualhom": 433, "visual": [391, 432, 434], "what": [431, 432, 433], "world": 427, "wrap": [424, 425], "write": 434, "zero_feedback": [31, 36, 45, 79, 109, 227, 277, 319, 374]}})